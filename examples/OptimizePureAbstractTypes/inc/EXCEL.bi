'=============================================Type library===========================================
' Name       : Excel
' Description: Microsoft Excel 16.0 Object Library
' Path       : C:\Program Files (x86)\Office2016\Office16\EXCEL.EXE
'====================================================================================================

#pragma Once
#Include Once "FBCom.bi"
#Include Once "MSO.bi"      'C:\Program Files (x86)\Common Files\Microsoft Shared\Office16\MSO.DLL
#Include Once "VBE6EXT.bi"  'C:\Program Files (x86)\Common Files\Microsoft Shared\VBA\VBA6\VBE6EXT.OLB

Namespace Excel

	'Class identifier (CLSID)
	Const CLSID_QueryTable = "{59191DA1-EA47-11CE-A51F-00AA0061507F}"
	Const CLSID_Application = "{00024500-0000-0000-C000-000000000046}"
	Const CLSID_Chart = "{00020821-0000-0000-C000-000000000046}"
	Const CLSID_Worksheet = "{00020820-0000-0000-C000-000000000046}"
	Const CLSID_Global = "{00020812-0000-0000-C000-000000000046}"
	Const CLSID_Workbook = "{00020819-0000-0000-C000-000000000046}"
	Const CLSID_OLEObject = "{00020818-0000-0000-C000-000000000046}"

	'Interface identifier (IID)
	Const IID_Adjustments = "{000C0310-0000-0000-C000-000000000046}"
	Const IID_CalloutFormat = "{000C0311-0000-0000-C000-000000000046}"
	Const IID_ColorFormat = "{000C0312-0000-0000-C000-000000000046}"
	Const IID_LineFormat = "{000C0317-0000-0000-C000-000000000046}"
	Const IID_ShapeNode = "{000C0318-0000-0000-C000-000000000046}"
	Const IID_ShapeNodes = "{000C0319-0000-0000-C000-000000000046}"
	Const IID_PictureFormat = "{000C031A-0000-0000-C000-000000000046}"
	Const IID_ShadowFormat = "{000C031B-0000-0000-C000-000000000046}"
	Const IID_TextEffectFormat = "{000C031F-0000-0000-C000-000000000046}"
	Const IID_ThreeDFormat = "{000C0321-0000-0000-C000-000000000046}"
	Const IID_FillFormat = "{000C0314-0000-0000-C000-000000000046}"
	Const IID_DiagramNodes = "{000C036E-0000-0000-C000-000000000046}"
	Const IID_DiagramNodeChildren = "{000C036F-0000-0000-C000-000000000046}"
	Const IID_DiagramNode = "{000C0370-0000-0000-C000-000000000046}"
	Const IID_IRTDUpdateEvent = "{A43788C1-D91B-11D3-8F39-00C04F3651B8}"
	Const IID_IRtdServer = "{EC0E6191-DB51-11D3-8F3E-00C04F3651B8}"
	Const IID_TextFrame2 = "{000C0398-0000-0000-C000-000000000046}"
	Const IID__Application = "{000208D5-0000-0000-C000-000000000046}"
	Const IID__Chart = "{000208D6-0000-0000-C000-000000000046}"
	Const IID_Sheets = "{000208D7-0000-0000-C000-000000000046}"
	Const IID__Worksheet = "{000208D8-0000-0000-C000-000000000046}"
	Const IID__Global = "{000208D9-0000-0000-C000-000000000046}"
	Const IID__Workbook = "{000208DA-0000-0000-C000-000000000046}"
	Const IID_Workbooks = "{000208DB-0000-0000-C000-000000000046}"
	Const IID_PublishObject = "{00024444-0000-0000-C000-000000000046}"
	Const IID_DefaultWebOptions = "{00024448-0000-0000-C000-000000000046}"
	Const IID_WebOptions = "{00024449-0000-0000-C000-000000000046}"
	Const IID_TreeviewControl = "{0002444B-0000-0000-C000-000000000046}"
	Const IID_CubeField = "{0002444C-0000-0000-C000-000000000046}"
	Const IID_CubeFields = "{0002444D-0000-0000-C000-000000000046}"
	Const IID_Font = "{0002084D-0000-0000-C000-000000000046}"
	Const IID_Window = "{00020893-0000-0000-C000-000000000046}"
	Const IID_Windows = "{00020892-0000-0000-C000-000000000046}"
	Const IID_AppEvents = "{00024413-0000-0000-C000-000000000046}"
	Const IID_WorksheetFunction = "{00020845-0000-0000-C000-000000000046}"
	Const IID_Range = "{00020846-0000-0000-C000-000000000046}"
	Const IID_ChartEvents = "{0002440F-0000-0000-C000-000000000046}"
	Const IID_VPageBreak = "{00024402-0000-0000-C000-000000000046}"
	Const IID_HPageBreak = "{00024401-0000-0000-C000-000000000046}"
	Const IID_HPageBreaks = "{00024404-0000-0000-C000-000000000046}"
	Const IID_VPageBreaks = "{00024405-0000-0000-C000-000000000046}"
	Const IID_RecentFile = "{00024407-0000-0000-C000-000000000046}"
	Const IID_RecentFiles = "{00024406-0000-0000-C000-000000000046}"
	Const IID_DocEvents = "{00024411-0000-0000-C000-000000000046}"
	Const IID_Style = "{00020852-0000-0000-C000-000000000046}"
	Const IID_Styles = "{00020853-0000-0000-C000-000000000046}"
	Const IID_Borders = "{00020855-0000-0000-C000-000000000046}"
	Const IID_AddIn = "{00020857-0000-0000-C000-000000000046}"
	Const IID_AddIns = "{00020858-0000-0000-C000-000000000046}"
	Const IID_Toolbar = "{0002085C-0000-0000-C000-000000000046}"
	Const IID_Toolbars = "{0002085D-0000-0000-C000-000000000046}"
	Const IID_ToolbarButton = "{0002085E-0000-0000-C000-000000000046}"
	Const IID_ToolbarButtons = "{0002085F-0000-0000-C000-000000000046}"
	Const IID_Areas = "{00020860-0000-0000-C000-000000000046}"
	Const IID_WorkbookEvents = "{00024412-0000-0000-C000-000000000046}"
	Const IID_MenuBars = "{00020863-0000-0000-C000-000000000046}"
	Const IID_MenuBar = "{00020864-0000-0000-C000-000000000046}"
	Const IID_Menus = "{00020865-0000-0000-C000-000000000046}"
	Const IID_Menu = "{00020866-0000-0000-C000-000000000046}"
	Const IID_MenuItems = "{00020867-0000-0000-C000-000000000046}"
	Const IID_MenuItem = "{00020868-0000-0000-C000-000000000046}"
	Const IID_Charts = "{0002086D-0000-0000-C000-000000000046}"
	Const IID_DrawingObjects = "{0002086F-0000-0000-C000-000000000046}"
	Const IID_PivotCache = "{0002441C-0000-0000-C000-000000000046}"
	Const IID_PivotCaches = "{0002441D-0000-0000-C000-000000000046}"
	Const IID_PivotFormula = "{0002441E-0000-0000-C000-000000000046}"
	Const IID_PivotFormulas = "{0002441F-0000-0000-C000-000000000046}"
	Const IID_PivotTable = "{00020872-0000-0000-C000-000000000046}"
	Const IID_PivotTables = "{00020873-0000-0000-C000-000000000046}"
	Const IID_PivotField = "{00020874-0000-0000-C000-000000000046}"
	Const IID_PivotFields = "{00020875-0000-0000-C000-000000000046}"
	Const IID_CalculatedFields = "{00024420-0000-0000-C000-000000000046}"
	Const IID_PivotItem = "{00020876-0000-0000-C000-000000000046}"
	Const IID_PivotItems = "{00020877-0000-0000-C000-000000000046}"
	Const IID_CalculatedItems = "{00024421-0000-0000-C000-000000000046}"
	Const IID_Characters = "{00020878-0000-0000-C000-000000000046}"
	Const IID_Dialogs = "{00020879-0000-0000-C000-000000000046}"
	Const IID_Dialog = "{0002087A-0000-0000-C000-000000000046}"
	Const IID_SoundNote = "{0002087B-0000-0000-C000-000000000046}"
	Const IID_Button = "{0002087D-0000-0000-C000-000000000046}"
	Const IID_Buttons = "{0002087E-0000-0000-C000-000000000046}"
	Const IID_CheckBox = "{0002087F-0000-0000-C000-000000000046}"
	Const IID_CheckBoxes = "{00020880-0000-0000-C000-000000000046}"
	Const IID_OptionButton = "{00020881-0000-0000-C000-000000000046}"
	Const IID_OptionButtons = "{00020882-0000-0000-C000-000000000046}"
	Const IID_EditBox = "{00020883-0000-0000-C000-000000000046}"
	Const IID_EditBoxes = "{00020884-0000-0000-C000-000000000046}"
	Const IID_ScrollBar = "{00020885-0000-0000-C000-000000000046}"
	Const IID_ScrollBars = "{00020886-0000-0000-C000-000000000046}"
	Const IID_ListBox = "{00020887-0000-0000-C000-000000000046}"
	Const IID_ListBoxes = "{00020888-0000-0000-C000-000000000046}"
	Const IID_GroupBox = "{00020889-0000-0000-C000-000000000046}"
	Const IID_GroupBoxes = "{0002088A-0000-0000-C000-000000000046}"
	Const IID_DropDown = "{0002088B-0000-0000-C000-000000000046}"
	Const IID_DropDowns = "{0002088C-0000-0000-C000-000000000046}"
	Const IID_Spinner = "{0002088D-0000-0000-C000-000000000046}"
	Const IID_Spinners = "{0002088E-0000-0000-C000-000000000046}"
	Const IID_DialogFrame = "{0002088F-0000-0000-C000-000000000046}"
	Const IID_Label = "{00020890-0000-0000-C000-000000000046}"
	Const IID_Labels = "{00020891-0000-0000-C000-000000000046}"
	Const IID_Panes = "{00020894-0000-0000-C000-000000000046}"
	Const IID_Pane = "{00020895-0000-0000-C000-000000000046}"
	Const IID_Scenarios = "{00020896-0000-0000-C000-000000000046}"
	Const IID_Scenario = "{00020897-0000-0000-C000-000000000046}"
	Const IID_GroupObject = "{00020898-0000-0000-C000-000000000046}"
	Const IID_GroupObjects = "{00020899-0000-0000-C000-000000000046}"
	Const IID_Line = "{0002089A-0000-0000-C000-000000000046}"
	Const IID_Lines = "{0002089B-0000-0000-C000-000000000046}"
	Const IID_Rectangle = "{0002089C-0000-0000-C000-000000000046}"
	Const IID_Rectangles = "{0002089D-0000-0000-C000-000000000046}"
	Const IID_Oval = "{0002089E-0000-0000-C000-000000000046}"
	Const IID_Ovals = "{0002089F-0000-0000-C000-000000000046}"
	Const IID_Arc = "{000208A0-0000-0000-C000-000000000046}"
	Const IID_Arcs = "{000208A1-0000-0000-C000-000000000046}"
	Const IID_OLEObjectEvents = "{00024410-0000-0000-C000-000000000046}"
	Const IID__OLEObject = "{000208A2-0000-0000-C000-000000000046}"
	Const IID_OLEObjects = "{000208A3-0000-0000-C000-000000000046}"
	Const IID_TextBox = "{000208A4-0000-0000-C000-000000000046}"
	Const IID_TextBoxes = "{000208A5-0000-0000-C000-000000000046}"
	Const IID_Picture = "{000208A6-0000-0000-C000-000000000046}"
	Const IID_Pictures = "{000208A7-0000-0000-C000-000000000046}"
	Const IID_Drawing = "{000208A8-0000-0000-C000-000000000046}"
	Const IID_Drawings = "{000208A9-0000-0000-C000-000000000046}"
	Const IID_RoutingSlip = "{000208AA-0000-0000-C000-000000000046}"
	Const IID_Outline = "{000208AB-0000-0000-C000-000000000046}"
	Const IID_Module = "{000208AD-0000-0000-C000-000000000046}"
	Const IID_Modules = "{000208AE-0000-0000-C000-000000000046}"
	Const IID_DialogSheet = "{000208AF-0000-0000-C000-000000000046}"
	Const IID_DialogSheets = "{000208B0-0000-0000-C000-000000000046}"
	Const IID_Worksheets = "{000208B1-0000-0000-C000-000000000046}"
	Const IID_PageSetup = "{000208B4-0000-0000-C000-000000000046}"
	Const IID_Names = "{000208B8-0000-0000-C000-000000000046}"
	Const IID_Name = "{000208B9-0000-0000-C000-000000000046}"
	Const IID_ChartObject = "{000208CF-0000-0000-C000-000000000046}"
	Const IID_ChartObjects = "{000208D0-0000-0000-C000-000000000046}"
	Const IID_Mailer = "{000208D1-0000-0000-C000-000000000046}"
	Const IID_CustomViews = "{00024422-0000-0000-C000-000000000046}"
	Const IID_CustomView = "{00024423-0000-0000-C000-000000000046}"
	Const IID_FormatConditions = "{00024424-0000-0000-C000-000000000046}"
	Const IID_FormatCondition = "{00024425-0000-0000-C000-000000000046}"
	Const IID_Comments = "{00024426-0000-0000-C000-000000000046}"
	Const IID_Comment = "{00024427-0000-0000-C000-000000000046}"
	Const IID_RefreshEvents = "{0002441B-0000-0000-C000-000000000046}"
	Const IID__QueryTable = "{00024428-0000-0000-C000-000000000046}"
	Const IID_QueryTables = "{00024429-0000-0000-C000-000000000046}"
	Const IID_Parameter = "{0002442A-0000-0000-C000-000000000046}"
	Const IID_Parameters = "{0002442B-0000-0000-C000-000000000046}"
	Const IID_ODBCError = "{0002442C-0000-0000-C000-000000000046}"
	Const IID_ODBCErrors = "{0002442D-0000-0000-C000-000000000046}"
	Const IID_Validation = "{0002442F-0000-0000-C000-000000000046}"
	Const IID_Hyperlinks = "{00024430-0000-0000-C000-000000000046}"
	Const IID_Hyperlink = "{00024431-0000-0000-C000-000000000046}"
	Const IID_AutoFilter = "{00024432-0000-0000-C000-000000000046}"
	Const IID_Filters = "{00024433-0000-0000-C000-000000000046}"
	Const IID_Filter = "{00024434-0000-0000-C000-000000000046}"
	Const IID_AutoCorrect = "{000208D4-0000-0000-C000-000000000046}"
	Const IID_Border = "{00020854-0000-0000-C000-000000000046}"
	Const IID_Interior = "{00020870-0000-0000-C000-000000000046}"
	Const IID_ChartFillFormat = "{00024435-0000-0000-C000-000000000046}"
	Const IID_ChartColorFormat = "{00024436-0000-0000-C000-000000000046}"
	Const IID_Axis = "{00020848-0000-0000-C000-000000000046}"
	Const IID_ChartTitle = "{00020849-0000-0000-C000-000000000046}"
	Const IID_AxisTitle = "{0002084A-0000-0000-C000-000000000046}"
	Const IID_ChartGroup = "{00020859-0000-0000-C000-000000000046}"
	Const IID_ChartGroups = "{0002085A-0000-0000-C000-000000000046}"
	Const IID_Axes = "{0002085B-0000-0000-C000-000000000046}"
	Const IID_Points = "{00020869-0000-0000-C000-000000000046}"
	Const IID_Point = "{0002086A-0000-0000-C000-000000000046}"
	Const IID_Series = "{0002086B-0000-0000-C000-000000000046}"
	Const IID_SeriesCollection = "{0002086C-0000-0000-C000-000000000046}"
	Const IID_DataLabel = "{000208B2-0000-0000-C000-000000000046}"
	Const IID_DataLabels = "{000208B3-0000-0000-C000-000000000046}"
	Const IID_LegendEntry = "{000208BA-0000-0000-C000-000000000046}"
	Const IID_LegendEntries = "{000208BB-0000-0000-C000-000000000046}"
	Const IID_LegendKey = "{000208BC-0000-0000-C000-000000000046}"
	Const IID_Trendlines = "{000208BD-0000-0000-C000-000000000046}"
	Const IID_Trendline = "{000208BE-0000-0000-C000-000000000046}"
	Const IID_Corners = "{000208C0-0000-0000-C000-000000000046}"
	Const IID_SeriesLines = "{000208C1-0000-0000-C000-000000000046}"
	Const IID_HiLoLines = "{000208C2-0000-0000-C000-000000000046}"
	Const IID_Gridlines = "{000208C3-0000-0000-C000-000000000046}"
	Const IID_DropLines = "{000208C4-0000-0000-C000-000000000046}"
	Const IID_LeaderLines = "{00024437-0000-0000-C000-000000000046}"
	Const IID_UpBars = "{000208C5-0000-0000-C000-000000000046}"
	Const IID_DownBars = "{000208C6-0000-0000-C000-000000000046}"
	Const IID_Floor = "{000208C7-0000-0000-C000-000000000046}"
	Const IID_Walls = "{000208C8-0000-0000-C000-000000000046}"
	Const IID_TickLabels = "{000208C9-0000-0000-C000-000000000046}"
	Const IID_PlotArea = "{000208CB-0000-0000-C000-000000000046}"
	Const IID_ChartArea = "{000208CC-0000-0000-C000-000000000046}"
	Const IID_Legend = "{000208CD-0000-0000-C000-000000000046}"
	Const IID_ErrorBars = "{000208CE-0000-0000-C000-000000000046}"
	Const IID_DataTable = "{00020843-0000-0000-C000-000000000046}"
	Const IID_Phonetic = "{00024438-0000-0000-C000-000000000046}"
	Const IID_Shape = "{00024439-0000-0000-C000-000000000046}"
	Const IID_Shapes = "{0002443A-0000-0000-C000-000000000046}"
	Const IID_ShapeRange = "{0002443B-0000-0000-C000-000000000046}"
	Const IID_GroupShapes = "{0002443C-0000-0000-C000-000000000046}"
	Const IID_TextFrame = "{0002443D-0000-0000-C000-000000000046}"
	Const IID_ConnectorFormat = "{0002443E-0000-0000-C000-000000000046}"
	Const IID_FreeformBuilder = "{0002443F-0000-0000-C000-000000000046}"
	Const IID_ControlFormat = "{00024440-0000-0000-C000-000000000046}"
	Const IID_OLEFormat = "{00024441-0000-0000-C000-000000000046}"
	Const IID_LinkFormat = "{00024442-0000-0000-C000-000000000046}"
	Const IID_PublishObjects = "{00024443-0000-0000-C000-000000000046}"
	Const IID_OLEDBError = "{00024445-0000-0000-C000-000000000046}"
	Const IID_OLEDBErrors = "{00024446-0000-0000-C000-000000000046}"
	Const IID_Phonetics = "{00024447-0000-0000-C000-000000000046}"
	Const IID_PivotLayout = "{0002444A-0000-0000-C000-000000000046}"
	Const IID_DisplayUnitLabel = "{0002084C-0000-0000-C000-000000000046}"
	Const IID_CellFormat = "{00024450-0000-0000-C000-000000000046}"
	Const IID_UsedObjects = "{00024451-0000-0000-C000-000000000046}"
	Const IID_CustomProperties = "{00024452-0000-0000-C000-000000000046}"
	Const IID_CustomProperty = "{00024453-0000-0000-C000-000000000046}"
	Const IID_CalculatedMembers = "{00024454-0000-0000-C000-000000000046}"
	Const IID_CalculatedMember = "{00024455-0000-0000-C000-000000000046}"
	Const IID_Watches = "{00024456-0000-0000-C000-000000000046}"
	Const IID_Watch = "{00024457-0000-0000-C000-000000000046}"
	Const IID_PivotCell = "{00024458-0000-0000-C000-000000000046}"
	Const IID_Graphic = "{00024459-0000-0000-C000-000000000046}"
	Const IID_AutoRecover = "{0002445A-0000-0000-C000-000000000046}"
	Const IID_ErrorCheckingOptions = "{0002445B-0000-0000-C000-000000000046}"
	Const IID_Errors = "{0002445C-0000-0000-C000-000000000046}"
	Const IID_Error = "{0002445D-0000-0000-C000-000000000046}"
	Const IID_SmartTagAction = "{0002445E-0000-0000-C000-000000000046}"
	Const IID_SmartTagActions = "{0002445F-0000-0000-C000-000000000046}"
	Const IID_SmartTag = "{00024460-0000-0000-C000-000000000046}"
	Const IID_SmartTags = "{00024461-0000-0000-C000-000000000046}"
	Const IID_SmartTagRecognizer = "{00024462-0000-0000-C000-000000000046}"
	Const IID_SmartTagRecognizers = "{00024463-0000-0000-C000-000000000046}"
	Const IID_SmartTagOptions = "{00024464-0000-0000-C000-000000000046}"
	Const IID_SpellingOptions = "{00024465-0000-0000-C000-000000000046}"
	Const IID_Speech = "{00024466-0000-0000-C000-000000000046}"
	Const IID_Protection = "{00024467-0000-0000-C000-000000000046}"
	Const IID_PivotItemList = "{00024468-0000-0000-C000-000000000046}"
	Const IID_Tab = "{00024469-0000-0000-C000-000000000046}"
	Const IID_AllowEditRanges = "{0002446A-0000-0000-C000-000000000046}"
	Const IID_AllowEditRange = "{0002446B-0000-0000-C000-000000000046}"
	Const IID_UserAccessList = "{0002446C-0000-0000-C000-000000000046}"
	Const IID_UserAccess = "{0002446D-0000-0000-C000-000000000046}"
	Const IID_RTD = "{0002446E-0000-0000-C000-000000000046}"
	Const IID_Diagram = "{0002446F-0000-0000-C000-000000000046}"
	Const IID_ListObjects = "{00024470-0000-0000-C000-000000000046}"
	Const IID_ListObject = "{00024471-0000-0000-C000-000000000046}"
	Const IID_ListColumns = "{00024472-0000-0000-C000-000000000046}"
	Const IID_ListColumn = "{00024473-0000-0000-C000-000000000046}"
	Const IID_ListRows = "{00024474-0000-0000-C000-000000000046}"
	Const IID_ListRow = "{00024475-0000-0000-C000-000000000046}"
	Const IID_XmlNamespace = "{00024476-0000-0000-C000-000000000046}"
	Const IID_XmlNamespaces = "{00024477-0000-0000-C000-000000000046}"
	Const IID_XmlDataBinding = "{00024478-0000-0000-C000-000000000046}"
	Const IID_XmlSchema = "{00024479-0000-0000-C000-000000000046}"
	Const IID_XmlSchemas = "{0002447A-0000-0000-C000-000000000046}"
	Const IID_XmlMap = "{0002447B-0000-0000-C000-000000000046}"
	Const IID_XmlMaps = "{0002447C-0000-0000-C000-000000000046}"
	Const IID_ListDataFormat = "{0002447D-0000-0000-C000-000000000046}"
	Const IID_XPath = "{0002447E-0000-0000-C000-000000000046}"
	Const IID_PivotLineCells = "{0002447F-0000-0000-C000-000000000046}"
	Const IID_PivotLine = "{00024480-0000-0000-C000-000000000046}"
	Const IID_PivotLines = "{00024481-0000-0000-C000-000000000046}"
	Const IID_PivotAxis = "{00024482-0000-0000-C000-000000000046}"
	Const IID_PivotFilter = "{00024483-0000-0000-C000-000000000046}"
	Const IID_PivotFilters = "{00024484-0000-0000-C000-000000000046}"
	Const IID_WorkbookConnection = "{00024485-0000-0000-C000-000000000046}"
	Const IID_Connections = "{00024486-0000-0000-C000-000000000046}"
	Const IID_WorksheetView = "{00024487-0000-0000-C000-000000000046}"
	Const IID_ChartView = "{00024488-0000-0000-C000-000000000046}"
	Const IID_ModuleView = "{00024489-0000-0000-C000-000000000046}"
	Const IID_DialogSheetView = "{0002448A-0000-0000-C000-000000000046}"
	Const IID_SheetViews = "{0002448C-0000-0000-C000-000000000046}"
	Const IID_OLEDBConnection = "{0002448D-0000-0000-C000-000000000046}"
	Const IID_ODBCConnection = "{0002448E-0000-0000-C000-000000000046}"
	Const IID_Action = "{0002448F-0000-0000-C000-000000000046}"
	Const IID_Actions = "{00024490-0000-0000-C000-000000000046}"
	Const IID_FormatColor = "{00024491-0000-0000-C000-000000000046}"
	Const IID_ConditionValue = "{00024492-0000-0000-C000-000000000046}"
	Const IID_ColorScale = "{00024493-0000-0000-C000-000000000046}"
	Const IID_ColorScaleCriteria = "{00024494-0000-0000-C000-000000000046}"
	Const IID_ColorScaleCriterion = "{00024495-0000-0000-C000-000000000046}"
	Const IID_Databar = "{00024496-0000-0000-C000-000000000046}"
	Const IID_IconSetCondition = "{00024497-0000-0000-C000-000000000046}"
	Const IID_IconCriteria = "{00024498-0000-0000-C000-000000000046}"
	Const IID_IconCriterion = "{00024499-0000-0000-C000-000000000046}"
	Const IID_Icon = "{0002449A-0000-0000-C000-000000000046}"
	Const IID_IconSet = "{0002449B-0000-0000-C000-000000000046}"
	Const IID_IconSets = "{0002449C-0000-0000-C000-000000000046}"
	Const IID_Top10 = "{0002449D-0000-0000-C000-000000000046}"
	Const IID_AboveAverage = "{0002449E-0000-0000-C000-000000000046}"
	Const IID_UniqueValues = "{0002449F-0000-0000-C000-000000000046}"
	Const IID_Ranges = "{000244A0-0000-0000-C000-000000000046}"
	Const IID_HeaderFooter = "{000244A1-0000-0000-C000-000000000046}"
	Const IID_Page = "{000244A2-0000-0000-C000-000000000046}"
	Const IID_Pages = "{000244A3-0000-0000-C000-000000000046}"
	Const IID_ServerViewableItems = "{000244A4-0000-0000-C000-000000000046}"
	Const IID_TableStyleElement = "{000244A5-0000-0000-C000-000000000046}"
	Const IID_TableStyleElements = "{000244A6-0000-0000-C000-000000000046}"
	Const IID_TableStyle = "{000244A7-0000-0000-C000-000000000046}"
	Const IID_TableStyles = "{000244A8-0000-0000-C000-000000000046}"
	Const IID_SortField = "{000244A9-0000-0000-C000-000000000046}"
	Const IID_SortFields = "{000244AA-0000-0000-C000-000000000046}"
	Const IID_Sort = "{000244AB-0000-0000-C000-000000000046}"
	Const IID_Research = "{000244AC-0000-0000-C000-000000000046}"
	Const IID_ColorStop = "{000244AD-0000-0000-C000-000000000046}"
	Const IID_ColorStops = "{000244AE-0000-0000-C000-000000000046}"
	Const IID_LinearGradient = "{000244AF-0000-0000-C000-000000000046}"
	Const IID_RectangularGradient = "{000244B0-0000-0000-C000-000000000046}"
	Const IID_MultiThreadedCalculation = "{000244B1-0000-0000-C000-000000000046}"
	Const IID_ChartFormat = "{000244B2-0000-0000-C000-000000000046}"
	Const IID_FileExportConverter = "{000244B3-0000-0000-C000-000000000046}"
	Const IID_FileExportConverters = "{000244B4-0000-0000-C000-000000000046}"
	Const IID_AddIns2 = "{000244B5-0000-0000-C000-000000000046}"
	Const IID_SparklineGroups = "{000244B6-0000-0000-C000-000000000046}"
	Const IID_SparklineGroup = "{000244B7-0000-0000-C000-000000000046}"
	Const IID_SparkPoints = "{000244B8-0000-0000-C000-000000000046}"
	Const IID_Sparkline = "{000244B9-0000-0000-C000-000000000046}"
	Const IID_SparkAxes = "{000244BA-0000-0000-C000-000000000046}"
	Const IID_SparkHorizontalAxis = "{000244BB-0000-0000-C000-000000000046}"
	Const IID_SparkVerticalAxis = "{000244BC-0000-0000-C000-000000000046}"
	Const IID_SparkColor = "{000244BD-0000-0000-C000-000000000046}"
	Const IID_DataBarBorder = "{000244BE-0000-0000-C000-000000000046}"
	Const IID_NegativeBarFormat = "{000244BF-0000-0000-C000-000000000046}"
	Const IID_ValueChange = "{000244C0-0000-0000-C000-000000000046}"
	Const IID_PivotTableChangeList = "{000244C1-0000-0000-C000-000000000046}"
	Const IID_DisplayFormat = "{000244C2-0000-0000-C000-000000000046}"
	Const IID_SlicerCaches = "{000244C3-0000-0000-C000-000000000046}"
	Const IID_SlicerCache = "{000244C4-0000-0000-C000-000000000046}"
	Const IID_SlicerCacheLevels = "{000244C5-0000-0000-C000-000000000046}"
	Const IID_SlicerCacheLevel = "{000244C6-0000-0000-C000-000000000046}"
	Const IID_Slicers = "{000244C7-0000-0000-C000-000000000046}"
	Const IID_Slicer = "{000244C8-0000-0000-C000-000000000046}"
	Const IID_SlicerItem = "{000244C9-0000-0000-C000-000000000046}"
	Const IID_SlicerItems = "{000244CA-0000-0000-C000-000000000046}"
	Const IID_SlicerPivotTables = "{000244CB-0000-0000-C000-000000000046}"
	Const IID_ProtectedViewWindows = "{000244CC-0000-0000-C000-000000000046}"
	Const IID_ProtectedViewWindow = "{000244CD-0000-0000-C000-000000000046}"
	Const IID_TableObject = "{000244CE-0000-0000-C000-000000000046}"
	Const IID_PivotValueCell = "{000244CF-0000-0000-C000-000000000046}"
	Const IID_QuickAnalysis = "{000244D0-0000-0000-C000-000000000046}"
	Const IID_ModelConnection = "{000244D1-0000-0000-C000-000000000046}"
	Const IID_WorksheetDataConnection = "{000244D2-0000-0000-C000-000000000046}"
	Const IID_TextConnection = "{000244D3-0000-0000-C000-000000000046}"
	Const IID_DataFeedConnection = "{000244D4-0000-0000-C000-000000000046}"
	Const IID_ModelTableColumn = "{000244D5-0000-0000-C000-000000000046}"
	Const IID_ModelTableColumns = "{000244D6-0000-0000-C000-000000000046}"
	Const IID_ModelTable = "{000244D7-0000-0000-C000-000000000046}"
	Const IID_ModelTables = "{000244D8-0000-0000-C000-000000000046}"
	Const IID_ModelRelationship = "{000244D9-0000-0000-C000-000000000046}"
	Const IID_ModelRelationships = "{000244DA-0000-0000-C000-000000000046}"
	Const IID_Model = "{000244DB-0000-0000-C000-000000000046}"
	Const IID_FullSeriesCollection = "{000244DC-0000-0000-C000-000000000046}"
	Const IID_ChartCategory = "{000244DD-0000-0000-C000-000000000046}"
	Const IID_CategoryCollection = "{000244DE-0000-0000-C000-000000000046}"
	Const IID_TimelineState = "{000244DF-0000-0000-C000-000000000046}"
	Const IID_TimelineViewState = "{000244E0-0000-0000-C000-000000000046}"
	Const IID_ModelTableNames = "{000244E1-0000-0000-C000-000000000046}"
	Const IID_ModelTableNameChange = "{000244E2-0000-0000-C000-000000000046}"
	Const IID_ModelTableNameChanges = "{000244E3-0000-0000-C000-000000000046}"
	Const IID_ModelChanges = "{000244E4-0000-0000-C000-000000000046}"
	Const IID_ModelColumnName = "{000244E5-0000-0000-C000-000000000046}"
	Const IID_ModelColumnNames = "{000244E6-0000-0000-C000-000000000046}"
	Const IID_ModelColumnChange = "{000244E7-0000-0000-C000-000000000046}"
	Const IID_ModelColumnChanges = "{000244E8-0000-0000-C000-000000000046}"
	Const IID_ModelMeasureName = "{000244E9-0000-0000-C000-000000000046}"
	Const IID_ModelMeasureNames = "{000244EA-0000-0000-C000-000000000046}"
	Const IID_WorkbookQuery = "{000244EB-0000-0000-C000-000000000046}"
	Const IID_Queries = "{000244EC-0000-0000-C000-000000000046}"
	Const IID_ModelMeasure = "{000244ED-0000-0000-C000-000000000046}"
	Const IID_ModelMeasures = "{000244EE-0000-0000-C000-000000000046}"
	Const IID_ModelFormatGeneral = "{000244EF-0000-0000-C000-000000000046}"
	Const IID_ModelFormatDate = "{000244F0-0000-0000-C000-000000000046}"
	Const IID_ModelFormatDecimalNumber = "{000244F1-0000-0000-C000-000000000046}"
	Const IID_ModelFormatWholeNumber = "{000244F2-0000-0000-C000-000000000046}"
	Const IID_ModelFormatPercentageNumber = "{000244F3-0000-0000-C000-000000000046}"
	Const IID_ModelFormatScientificNumber = "{000244F4-0000-0000-C000-000000000046}"
	Const IID_ModelFormatCurrency = "{000244F5-0000-0000-C000-000000000046}"
	Const IID_ModelFormatBoolean = "{000244F6-0000-0000-C000-000000000046}"
	

	Enum Constants
		xlAll = -4104
		xlAutomatic = -4105
		xlBoth = 1
		xlCenter = -4108
		xlChecker = 9
		xlCircle = 8
		xlCorner = 2
		xlCrissCross = 16
		xlCross = 4
		xlDiamond = 2
		xlDistributed = -4117
		xlDoubleAccounting = 5
		xlFixedValue = 1
		xlFormats = -4122
		xlGray16 = 17
		xlGray8 = 18
		xlGrid = 15
		xlHigh = -4127
		xlInside = 2
		xlJustify = -4130
		xlLightDown = 13
		xlLightHorizontal = 11
		xlLightUp = 14
		xlLightVertical = 12
		xlLow = -4134
		xlManual = -4135
		xlMinusValues = 3
		xlModule = -4141
		xlNextToAxis = 4
		xlNone = -4142
		xlNotes = -4144
		xlOff = -4146
		xlOn = 1
		xlPercent = 2
		xlPlus = 9
		xlPlusValues = 2
		xlSemiGray75 = 10
		xlShowLabel = 4
		xlShowLabelAndPercent = 5
		xlShowPercent = 3
		xlShowValue = 2
		xlSimple = -4154
		xlSingle = 2
		xlSingleAccounting = 4
		xlSolid = 1
		xlSquare = 1
		xlStar = 5
		xlStError = 4
		xlToolbarButton = 2
		xlTriangle = 3
		xlGray25 = -4124
		xlGray50 = -4125
		xlGray75 = -4126
		xlBottom = -4107
		xlLeft = -4131
		xlRight = -4152
		xlTop = -4160
		xl3DBar = -4099
		xl3DSurface = -4103
		xlBar = 2
		xlColumn = 3
		xlCombination = -4111
		xlCustom = -4114
		xlDefaultAutoFormat = -1
		xlMaximum = 2
		xlMinimum = 4
		xlOpaque = 3
		xlTransparent = 2
		xlBidi = -5000
		xlLatin = -5001
		xlContext = -5002
		xlLTR = -5003
		xlRTL = -5004
		xlFullScript = 1
		xlPartialScript = 2
		xlMixedScript = 3
		xlMixedAuthorizedScript = 4
		xlVisualCursor = 2
		xlLogicalCursor = 1
		xlSystem = 1
		xlPartial = 3
		xlHindiNumerals = 3
		xlBidiCalendar = 3
		xlGregorian = 2
		xlComplete = 4
		xlScale = 3
		xlClosed = 3
		xlColor1 = 7
		xlColor2 = 8
		xlColor3 = 9
		xlConstants = 2
		xlContents = 2
		xlBelow = 1
		xlCascade = 7
		xlCenterAcrossSelection = 7
		xlChart4 = 2
		xlChartSeries = 17
		xlChartShort = 6
		xlChartTitles = 18
		xlClassic1 = 1
		xlClassic2 = 2
		xlClassic3 = 3
		xl3DEffects1 = 13
		xl3DEffects2 = 14
		xlAbove = 0
		xlAccounting1 = 4
		xlAccounting2 = 5
		xlAccounting3 = 6
		xlAccounting4 = 17
		xlAdd = 2
		xlDebugCodePane = 13
		xlDesktop = 9
		xlDirect = 1
		xlDivide = 5
		xlDoubleClosed = 5
		xlDoubleOpen = 4
		xlDoubleQuote = 1
		xlEntireChart = 20
		xlExcelMenus = 1
		xlExtended = 3
		xlFill = 5
		xlFirst = 0
		xlFloating = 5
		xlFormula = 5
		xlGeneral = 1
		xlGridline = 22
		xlIcons = 1
		xlImmediatePane = 12
		xlInteger = 2
		xlLast = 1
		xlLastCell = 11
		xlList1 = 10
		xlList2 = 11
		xlList3 = 12
		xlLocalFormat1 = 15
		xlLocalFormat2 = 16
		xlLong = 3
		xlLotusHelp = 2
		xlMacrosheetCell = 7
		xlMixed = 2
		xlMultiply = 4
		xlNarrow = 1
		xlNoDocuments = 3
		xlOpen = 2
		xlOutside = 3
		xlReference = 4
		xlSemiautomatic = 2
		xlShort = 1
		xlSingleQuote = 2
		xlStrict = 2
		xlSubtract = 3
		xlTextBox = 16
		xlTiled = 1
		xlTitleBar = 8
		xlToolbar = 1
		xlVisible = 12
		xlWatchPane = 11
		xlWide = 3
		xlWorkbookTab = 6
		xlWorksheet4 = 1
		xlWorksheetCell = 3
		xlWorksheetShort = 5
		xlAllExceptBorders = 7
		xlLeftToRight = 2
		xlTopToBottom = 1
		xlVeryHidden = 2
		xlDrawingObject = 14
	End Enum

	Enum XlCreator
		xlCreatorCode = 1480803660
	End Enum

	Enum XlChartGallery
		xlBuiltIn = 21
		xlUserDefined = 22
		xlAnyGallery = 23
	End Enum

	Enum XlColorIndex
		xlColorIndexAutomatic = -4105
		xlColorIndexNone = -4142
	End Enum

	Enum XlEndStyleCap
		xlCap = 1
		xlNoCap = 2
	End Enum

	Enum XlRowCol
		xlColumns = 2
		xlRows = 1
	End Enum

	Enum XlScaleType
		xlScaleLinear = -4132
		xlScaleLogarithmic = -4133
	End Enum

	Enum XlDataSeriesType
		xlAutoFill = 4
		xlChronological = 3
		xlGrowth = 2
		xlDataSeriesLinear = -4132
	End Enum

	Enum XlAxisCrosses
		xlAxisCrossesAutomatic = -4105
		xlAxisCrossesCustom = -4114
		xlAxisCrossesMaximum = 2
		xlAxisCrossesMinimum = 4
	End Enum

	Enum XlAxisGroup
		xlPrimary = 1
		xlSecondary = 2
	End Enum

	Enum XlBackground
		xlBackgroundAutomatic = -4105
		xlBackgroundOpaque = 3
		xlBackgroundTransparent = 2
	End Enum

	Enum XlWindowState
		xlMaximized = -4137
		xlMinimized = -4140
		xlNormal = -4143
	End Enum

	Enum XlAxisType
		xlCategory = 1
		xlSeriesAxis = 3
		xlValue = 2
	End Enum

	Enum XlArrowHeadLength
		xlArrowHeadLengthLong = 3
		xlArrowHeadLengthMedium = -4138
		xlArrowHeadLengthShort = 1
	End Enum

	Enum XlVAlign
		xlVAlignBottom = -4107
		xlVAlignCenter = -4108
		xlVAlignDistributed = -4117
		xlVAlignJustify = -4130
		xlVAlignTop = -4160
	End Enum

	Enum XlTickMark
		xlTickMarkCross = 4
		xlTickMarkInside = 2
		xlTickMarkNone = -4142
		xlTickMarkOutside = 3
	End Enum

	Enum XlErrorBarDirection
		xlX = -4168
		xlY = 1
	End Enum

	Enum XlErrorBarInclude
		xlErrorBarIncludeBoth = 1
		xlErrorBarIncludeMinusValues = 3
		xlErrorBarIncludeNone = -4142
		xlErrorBarIncludePlusValues = 2
	End Enum

	Enum XlDisplayBlanksAs
		xlInterpolated = 3
		xlNotPlotted = 1
		xlZero = 2
	End Enum

	Enum XlArrowHeadStyle
		xlArrowHeadStyleClosed = 3
		xlArrowHeadStyleDoubleClosed = 5
		xlArrowHeadStyleDoubleOpen = 4
		xlArrowHeadStyleNone = -4142
		xlArrowHeadStyleOpen = 2
	End Enum

	Enum XlArrowHeadWidth
		xlArrowHeadWidthMedium = -4138
		xlArrowHeadWidthNarrow = 1
		xlArrowHeadWidthWide = 3
	End Enum

	Enum XlHAlign
		xlHAlignCenter = -4108
		xlHAlignCenterAcrossSelection = 7
		xlHAlignDistributed = -4117
		xlHAlignFill = 5
		xlHAlignGeneral = 1
		xlHAlignJustify = -4130
		xlHAlignLeft = -4131
		xlHAlignRight = -4152
	End Enum

	Enum XlTickLabelPosition
		xlTickLabelPositionHigh = -4127
		xlTickLabelPositionLow = -4134
		xlTickLabelPositionNextToAxis = 4
		xlTickLabelPositionNone = -4142
	End Enum

	Enum XlLegendPosition
		xlLegendPositionBottom = -4107
		xlLegendPositionCorner = 2
		xlLegendPositionLeft = -4131
		xlLegendPositionRight = -4152
		xlLegendPositionTop = -4160
		xlLegendPositionCustom = -4161
	End Enum

	Enum XlChartPictureType
		xlStackScale = 3
		xlStack = 2
		xlStretch = 1
	End Enum

	Enum XlChartPicturePlacement
		xlSides = 1
		xlEnd = 2
		xlEndSides = 3
		xlFront = 4
		xlFrontSides = 5
		xlFrontEnd = 6
		xlAllFaces = 7
	End Enum

	Enum XlOrientation
		xlDownward = -4170
		xlHorizontal = -4128
		xlUpward = -4171
		xlVertical = -4166
	End Enum

	Enum XlTickLabelOrientation
		xlTickLabelOrientationAutomatic = -4105
		xlTickLabelOrientationDownward = -4170
		xlTickLabelOrientationHorizontal = -4128
		xlTickLabelOrientationUpward = -4171
		xlTickLabelOrientationVertical = -4166
	End Enum

	Enum XlBorderWeight
		xlHairline = 1
		xlMedium = -4138
		xlThick = 4
		xlThin = 2
	End Enum

	Enum XlDataSeriesDate
		xlDay = 1
		xlMonth = 3
		xlWeekday = 2
		xlYear = 4
	End Enum

	Enum XlUnderlineStyle
		xlUnderlineStyleDouble = -4119
		xlUnderlineStyleDoubleAccounting = 5
		xlUnderlineStyleNone = -4142
		xlUnderlineStyleSingle = 2
		xlUnderlineStyleSingleAccounting = 4
	End Enum

	Enum XlErrorBarType
		xlErrorBarTypeCustom = -4114
		xlErrorBarTypeFixedValue = 1
		xlErrorBarTypePercent = 2
		xlErrorBarTypeStDev = -4155
		xlErrorBarTypeStError = 4
	End Enum

	Enum XlTrendlineType
		xlExponential = 5
		xlLinear = -4132
		xlLogarithmic = -4133
		xlMovingAvg = 6
		xlPolynomial = 3
		xlPower = 4
	End Enum

	Enum XlLineStyle
		xlContinuous = 1
		xlDash = -4115
		xlDashDot = 4
		xlDashDotDot = 5
		xlDot = -4118
		xlDouble = -4119
		xlSlantDashDot = 13
		xlLineStyleNone = -4142
	End Enum

	Enum XlDataLabelsType
		xlDataLabelsShowNone = -4142
		xlDataLabelsShowValue = 2
		xlDataLabelsShowPercent = 3
		xlDataLabelsShowLabel = 4
		xlDataLabelsShowLabelAndPercent = 5
		xlDataLabelsShowBubbleSizes = 6
	End Enum

	Enum XlMarkerStyle
		xlMarkerStyleAutomatic = -4105
		xlMarkerStyleCircle = 8
		xlMarkerStyleDash = -4115
		xlMarkerStyleDiamond = 2
		xlMarkerStyleDot = -4118
		xlMarkerStyleNone = -4142
		xlMarkerStylePicture = -4147
		xlMarkerStylePlus = 9
		xlMarkerStyleSquare = 1
		xlMarkerStyleStar = 5
		xlMarkerStyleTriangle = 3
		xlMarkerStyleX = -4168
	End Enum

	Enum XlPictureConvertorType
		xlBMP = 1
		xlCGM = 7
		xlDRW = 4
		xlDXF = 5
		xlEPS = 8
		xlHGL = 6
		xlPCT = 13
		xlPCX = 10
		xlPIC = 11
		xlPLT = 12
		xlTIF = 9
		xlWMF = 2
		xlWPG = 3
	End Enum

	Enum XlPattern
		xlPatternAutomatic = -4105
		xlPatternChecker = 9
		xlPatternCrissCross = 16
		xlPatternDown = -4121
		xlPatternGray16 = 17
		xlPatternGray25 = -4124
		xlPatternGray50 = -4125
		xlPatternGray75 = -4126
		xlPatternGray8 = 18
		xlPatternGrid = 15
		xlPatternHorizontal = -4128
		xlPatternLightDown = 13
		xlPatternLightHorizontal = 11
		xlPatternLightUp = 14
		xlPatternLightVertical = 12
		xlPatternNone = -4142
		xlPatternSemiGray75 = 10
		xlPatternSolid = 1
		xlPatternUp = -4162
		xlPatternVertical = -4166
		xlPatternLinearGradient = 4000
		xlPatternRectangularGradient = 4001
	End Enum

	Enum XlChartSplitType
		xlSplitByPosition = 1
		xlSplitByPercentValue = 3
		xlSplitByCustomSplit = 4
		xlSplitByValue = 2
	End Enum

	Enum XlDisplayUnit
		xlHundreds = -2
		xlThousands = -3
		xlTenThousands = -4
		xlHundredThousands = -5
		xlMillions = -6
		xlTenMillions = -7
		xlHundredMillions = -8
		xlThousandMillions = -9
		xlMillionMillions = -10
	End Enum

	Enum XlDataLabelPosition
		xlLabelPositionCenter = -4108
		xlLabelPositionAbove = 0
		xlLabelPositionBelow = 1
		xlLabelPositionLeft = -4131
		xlLabelPositionRight = -4152
		xlLabelPositionOutsideEnd = 2
		xlLabelPositionInsideEnd = 3
		xlLabelPositionInsideBase = 4
		xlLabelPositionBestFit = 5
		xlLabelPositionMixed = 6
		xlLabelPositionCustom = 7
	End Enum

	Enum XlTimeUnit
		xlDays = 0
		xlMonths = 1
		xlYears = 2
	End Enum

	Enum XlCategoryType
		xlCategoryScale = 2
		xlTimeScale = 3
		xlAutomaticScale = -4105
	End Enum

	Enum XlBarShape
		xlBox = 0
		xlPyramidToPoint = 1
		xlPyramidToMax = 2
		xlCylinder = 3
		xlConeToPoint = 4
		xlConeToMax = 5
	End Enum

	Enum XlChartType
		xlColumnClustered = 51
		xlColumnStacked = 52
		xlColumnStacked100 = 53
		xl3DColumnClustered = 54
		xl3DColumnStacked = 55
		xl3DColumnStacked100 = 56
		xlBarClustered = 57
		xlBarStacked = 58
		xlBarStacked100 = 59
		xl3DBarClustered = 60
		xl3DBarStacked = 61
		xl3DBarStacked100 = 62
		xlLineStacked = 63
		xlLineStacked100 = 64
		xlLineMarkers = 65
		xlLineMarkersStacked = 66
		xlLineMarkersStacked100 = 67
		xlPieOfPie = 68
		xlPieExploded = 69
		xl3DPieExploded = 70
		xlBarOfPie = 71
		xlXYScatterSmooth = 72
		xlXYScatterSmoothNoMarkers = 73
		xlXYScatterLines = 74
		xlXYScatterLinesNoMarkers = 75
		xlAreaStacked = 76
		xlAreaStacked100 = 77
		xl3DAreaStacked = 78
		xl3DAreaStacked100 = 79
		xlDoughnutExploded = 80
		xlRadarMarkers = 81
		xlRadarFilled = 82
		xlSurface = 83
		xlSurfaceWireframe = 84
		xlSurfaceTopView = 85
		xlSurfaceTopViewWireframe = 86
		xlBubble = 15
		xlBubble3DEffect = 87
		xlStockHLC = 88
		xlStockOHLC = 89
		xlStockVHLC = 90
		xlStockVOHLC = 91
		xlCylinderColClustered = 92
		xlCylinderColStacked = 93
		xlCylinderColStacked100 = 94
		xlCylinderBarClustered = 95
		xlCylinderBarStacked = 96
		xlCylinderBarStacked100 = 97
		xlCylinderCol = 98
		xlConeColClustered = 99
		xlConeColStacked = 100
		xlConeColStacked100 = 101
		xlConeBarClustered = 102
		xlConeBarStacked = 103
		xlConeBarStacked100 = 104
		xlConeCol = 105
		xlPyramidColClustered = 106
		xlPyramidColStacked = 107
		xlPyramidColStacked100 = 108
		xlPyramidBarClustered = 109
		xlPyramidBarStacked = 110
		xlPyramidBarStacked100 = 111
		xlPyramidCol = 112
		xl3DColumn = -4100
		xlLine = 4
		xl3DLine = -4101
		xl3DPie = -4102
		xlPie = 5
		xlXYScatter = -4169
		xl3DArea = -4098
		xlArea = 1
		xlDoughnut = -4120
		xlRadar = -4151
		xlTreemap = 117
		xlHistogram = 118
		xlWaterfall = 119
		xlSunburst = 120
		xlBoxwhisker = 121
		xlPareto = 122
	End Enum

	Enum XlChartItem
		xlDataLabel = 0
		xlChartArea = 2
		xlSeries = 3
		xlChartTitle = 4
		xlWalls = 5
		xlCorners = 6
		xlDataTable = 7
		xlTrendline = 8
		xlErrorBars = 9
		xlXErrorBars = 10
		xlYErrorBars = 11
		xlLegendEntry = 12
		xlLegendKey = 13
		xlShape = 14
		xlMajorGridlines = 15
		xlMinorGridlines = 16
		xlAxisTitle = 17
		xlUpBars = 18
		xlPlotArea = 19
		xlDownBars = 20
		xlAxis = 21
		xlSeriesLines = 22
		xlFloor = 23
		xlLegend = 24
		xlHiLoLines = 25
		xlDropLines = 26
		xlRadarAxisLabels = 27
		xlNothing = 28
		xlLeaderLines = 29
		xlDisplayUnitLabel = 30
		xlPivotChartFieldButton = 31
		xlPivotChartDropZone = 32
		xlPivotChartExpandEntireFieldButton = 33
		xlPivotChartCollapseEntireFieldButton = 34
	End Enum

	Enum XlSizeRepresents
		xlSizeIsWidth = 2
		xlSizeIsArea = 1
	End Enum

	Enum XlInsertShiftDirection
		xlShiftDown = -4121
		xlShiftToRight = -4161
	End Enum

	Enum XlDeleteShiftDirection
		xlShiftToLeft = -4159
		xlShiftUp = -4162
	End Enum

	Enum XlDirection
		xlDown = -4121
		xlToLeft = -4159
		xlToRight = -4161
		xlUp = -4162
	End Enum

	Enum XlConsolidationFunction
		xlAverage = -4106
		xlCount = -4112
		xlCountNums = -4113
		xlMax = -4136
		xlMin = -4139
		xlProduct = -4149
		xlStDev = -4155
		xlStDevP = -4156
		xlSum = -4157
		xlVar = -4164
		xlVarP = -4165
		xlUnknown = 1000
		xlDistinctCount = 11
	End Enum

	Enum XlSheetType
		xlChart = -4109
		xlDialogSheet = -4116
		xlExcel4IntlMacroSheet = 4
		xlExcel4MacroSheet = 3
		xlWorksheet = -4167
	End Enum

	Enum XlLocationInTable
		xlColumnHeader = -4110
		xlColumnItem = 5
		xlDataHeader = 3
		xlDataItem = 7
		xlPageHeader = 2
		xlPageItem = 6
		xlRowHeader = -4153
		xlRowItem = 4
		xlTableBody = 8
	End Enum

	Enum XlFindLookIn
		xlFormulas = -4123
		xlComments = -4144
		xlValues = -4163
	End Enum

	Enum XlWindowType
		xlChartAsWindow = 5
		xlChartInPlace = 4
		xlClipboard = 3
		xlInfo = -4129
		xlWorkbook = 1
	End Enum

	Enum XlPivotFieldDataType
		xlDate = 2
		xlNumber = -4145
		xlText = -4158
	End Enum

	Enum XlCopyPictureFormat
		xlBitmap = 2
		xlPicture = -4147
	End Enum

	Enum XlPivotTableSourceType
		xlScenario = 4
		xlConsolidation = 3
		xlDatabase = 1
		xlExternal = 2
		xlPivotTable = -4148
	End Enum

	Enum XlReferenceStyle
		xlA1 = 1
		xlR1C1 = -4150
	End Enum

	Enum XlMSApplication
		xlMicrosoftAccess = 4
		xlMicrosoftFoxPro = 5
		xlMicrosoftMail = 3
		xlMicrosoftPowerPoint = 2
		xlMicrosoftProject = 6
		xlMicrosoftSchedulePlus = 7
		xlMicrosoftWord = 1
	End Enum

	Enum XlMouseButton
		xlNoButton = 0
		xlPrimaryButton = 1
		xlSecondaryButton = 2
	End Enum

	Enum XlCutCopyMode
		xlCopy = 1
		xlCut = 2
	End Enum

	Enum XlFillWith
		xlFillWithAll = -4104
		xlFillWithContents = 2
		xlFillWithFormats = -4122
	End Enum

	Enum XlFilterAction
		xlFilterCopy = 2
		xlFilterInPlace = 1
	End Enum

	Enum XlOrder
		xlDownThenOver = 1
		xlOverThenDown = 2
	End Enum

	Enum XlLinkType
		xlLinkTypeExcelLinks = 1
		xlLinkTypeOLELinks = 2
	End Enum

	Enum XlApplyNamesOrder
		xlColumnThenRow = 2
		xlRowThenColumn = 1
	End Enum

	Enum XlEnableCancelKey
		xlDisabled = 0
		xlErrorHandler = 2
		xlInterrupt = 1
	End Enum

	Enum XlPageBreak
		xlPageBreakAutomatic = -4105
		xlPageBreakManual = -4135
		xlPageBreakNone = -4142
	End Enum

	Enum XlOLEType
		xlOLEControl = 2
		xlOLEEmbed = 1
		xlOLELink = 0
	End Enum

	Enum XlPageOrientation
		xlLandscape = 2
		xlPortrait = 1
	End Enum

	Enum XlLinkInfo
		xlEditionDate = 2
		xlUpdateState = 1
		xlLinkInfoStatus = 3
	End Enum

	Enum XlCommandUnderlines
		xlCommandUnderlinesAutomatic = -4105
		xlCommandUnderlinesOff = -4146
		xlCommandUnderlinesOn = 1
	End Enum

	Enum XlOLEVerb
		xlVerbOpen = 2
		xlVerbPrimary = 1
	End Enum

	Enum XlCalculation
		xlCalculationAutomatic = -4105
		xlCalculationManual = -4135
		xlCalculationSemiautomatic = 2
	End Enum

	Enum XlFileAccess
		xlReadOnly = 3
		xlReadWrite = 2
	End Enum

	Enum XlEditionType
		xlPublisher = 1
		xlSubscriber = 2
	End Enum

	Enum XlObjectSize
		xlFitToPage = 2
		xlFullPage = 3
		xlScreenSize = 1
	End Enum

	Enum XlLookAt
		xlPart = 2
		xlWhole = 1
	End Enum

	Enum XlMailSystem
		xlMAPI = 1
		xlNoMailSystem = 0
		xlPowerTalk = 2
	End Enum

	Enum XlLinkInfoType
		xlLinkInfoOLELinks = 2
		xlLinkInfoPublishers = 5
		xlLinkInfoSubscribers = 6
	End Enum

	Enum XlCVError
		xlErrDiv0 = 2007
		xlErrNA = 2042
		xlErrName = 2029
		xlErrNull = 2000
		xlErrNum = 2036
		xlErrRef = 2023
		xlErrValue = 2015
	End Enum

	Enum XlEditionFormat
		xlBIFF = 2
		xlPICT = 1
		xlRTF = 4
		xlVALU = 8
	End Enum

	Enum XlLink
		xlExcelLinks = 1
		xlOLELinks = 2
		xlPublishers = 5
		xlSubscribers = 6
	End Enum

	Enum XlCellType
		xlCellTypeBlanks = 4
		xlCellTypeConstants = 2
		xlCellTypeFormulas = -4123
		xlCellTypeLastCell = 11
		xlCellTypeComments = -4144
		xlCellTypeVisible = 12
		xlCellTypeAllFormatConditions = -4172
		xlCellTypeSameFormatConditions = -4173
		xlCellTypeAllValidation = -4174
		xlCellTypeSameValidation = -4175
	End Enum

	Enum XlArrangeStyle
		xlArrangeStyleCascade = 7
		xlArrangeStyleHorizontal = -4128
		xlArrangeStyleTiled = 1
		xlArrangeStyleVertical = -4166
	End Enum

	Enum XlMousePointer
		xlIBeam = 3
		xlDefault = -4143
		xlNorthwestArrow = 1
		xlWait = 2
	End Enum

	Enum XlEditionOptionsOption
		xlAutomaticUpdate = 4
		xlCancel = 1
		xlChangeAttributes = 6
		xlManualUpdate = 5
		xlOpenSource = 3
		xlSelect = 3
		xlSendPublisher = 2
		xlUpdateSubscriber = 2
	End Enum

	Enum XlAutoFillType
		xlFillCopy = 1
		xlFillDays = 5
		xlFillDefault = 0
		xlFillFormats = 3
		xlFillMonths = 7
		xlFillSeries = 2
		xlFillValues = 4
		xlFillWeekdays = 6
		xlFillYears = 8
		xlGrowthTrend = 10
		xlLinearTrend = 9
		xlFlashFill = 11
	End Enum

	Enum XlAutoFilterOperator
		xlAnd = 1
		xlBottom10Items = 4
		xlBottom10Percent = 6
		xlOr = 2
		xlTop10Items = 3
		xlTop10Percent = 5
		xlFilterValues = 7
		xlFilterCellColor = 8
		xlFilterFontColor = 9
		xlFilterIcon = 10
		xlFilterDynamic = 11
		xlFilterNoFill = 12
		xlFilterAutomaticFontColor = 13
		xlFilterNoIcon = 14
	End Enum

	Enum XlClipboardFormat
		xlClipboardFormatBIFF12 = 63
		xlClipboardFormatBIFF = 8
		xlClipboardFormatBIFF2 = 18
		xlClipboardFormatBIFF3 = 20
		xlClipboardFormatBIFF4 = 30
		xlClipboardFormatBinary = 15
		xlClipboardFormatBitmap = 9
		xlClipboardFormatCGM = 13
		xlClipboardFormatCSV = 5
		xlClipboardFormatDIF = 4
		xlClipboardFormatDspText = 12
		xlClipboardFormatEmbeddedObject = 21
		xlClipboardFormatEmbedSource = 22
		xlClipboardFormatLink = 11
		xlClipboardFormatLinkSource = 23
		xlClipboardFormatLinkSourceDesc = 32
		xlClipboardFormatMovie = 24
		xlClipboardFormatNative = 14
		xlClipboardFormatObjectDesc = 31
		xlClipboardFormatObjectLink = 19
		xlClipboardFormatOwnerLink = 17
		xlClipboardFormatPICT = 2
		xlClipboardFormatPrintPICT = 3
		xlClipboardFormatRTF = 7
		xlClipboardFormatScreenPICT = 29
		xlClipboardFormatStandardFont = 28
		xlClipboardFormatStandardScale = 27
		xlClipboardFormatSYLK = 6
		xlClipboardFormatTable = 16
		xlClipboardFormatText = 0
		xlClipboardFormatToolFace = 25
		xlClipboardFormatToolFacePICT = 26
		xlClipboardFormatVALU = 1
		xlClipboardFormatWK1 = 10
	End Enum

	Enum XlFileFormat
		xlAddIn = 18
		xlCSV = 6
		xlCSVMac = 22
		xlCSVMSDOS = 24
		xlCSVWindows = 23
		xlDBF2 = 7
		xlDBF3 = 8
		xlDBF4 = 11
		xlDIF = 9
		xlExcel2 = 16
		xlExcel2FarEast = 27
		xlExcel3 = 29
		xlExcel4 = 33
		xlExcel5 = 39
		xlExcel7 = 39
		xlExcel9795 = 43
		xlExcel4Workbook = 35
		xlIntlAddIn = 26
		xlIntlMacro = 25
		xlWorkbookNormal = -4143
		xlSYLK = 2
		xlTemplate = 17
		xlCurrentPlatformText = -4158
		xlTextMac = 19
		xlTextMSDOS = 21
		xlTextPrinter = 36
		xlTextWindows = 20
		xlWJ2WD1 = 14
		xlWK1 = 5
		xlWK1ALL = 31
		xlWK1FMT = 30
		xlWK3 = 15
		xlWK4 = 38
		xlWK3FM3 = 32
		xlWKS = 4
		xlWorks2FarEast = 28
		xlWQ1 = 34
		xlWJ3 = 40
		xlWJ3FJ3 = 41
		xlUnicodeText = 42
		xlHtml = 44
		xlWebArchive = 45
		xlXMLSpreadsheet = 46
		xlExcel12 = 50
		xlOpenXMLWorkbook = 51
		xlOpenXMLWorkbookMacroEnabled = 52
		xlOpenXMLTemplateMacroEnabled = 53
		xlTemplate8 = 17
		xlOpenXMLTemplate = 54
		xlAddIn8 = 18
		xlOpenXMLAddIn = 55
		xlExcel8 = 56
		xlOpenDocumentSpreadsheet = 60
		xlOpenXMLStrictWorkbook = 61
		xlWorkbookDefault = 51
	End Enum

	Enum XlApplicationInternational
		xl24HourClock = 33
		xl4DigitYears = 43
		xlAlternateArraySeparator = 16
		xlColumnSeparator = 14
		xlCountryCode = 1
		xlCountrySetting = 2
		xlCurrencyBefore = 37
		xlCurrencyCode = 25
		xlCurrencyDigits = 27
		xlCurrencyLeadingZeros = 40
		xlCurrencyMinusSign = 38
		xlCurrencyNegative = 28
		xlCurrencySpaceBefore = 36
		xlCurrencyTrailingZeros = 39
		xlDateOrder = 32
		xlDateSeparator = 17
		xlDayCode = 21
		xlDayLeadingZero = 42
		xlDecimalSeparator = 3
		xlGeneralFormatName = 26
		xlHourCode = 22
		xlLeftBrace = 12
		xlLeftBracket = 10
		xlListSeparator = 5
		xlLowerCaseColumnLetter = 9
		xlLowerCaseRowLetter = 8
		xlMDY = 44
		xlMetric = 35
		xlMinuteCode = 23
		xlMonthCode = 20
		xlMonthLeadingZero = 41
		xlMonthNameChars = 30
		xlNoncurrencyDigits = 29
		xlNonEnglishFunctions = 34
		xlRightBrace = 13
		xlRightBracket = 11
		xlRowSeparator = 15
		xlSecondCode = 24
		xlThousandsSeparator = 4
		xlTimeLeadingZero = 45
		xlTimeSeparator = 18
		xlUpperCaseColumnLetter = 7
		xlUpperCaseRowLetter = 6
		xlWeekdayNameChars = 31
		xlYearCode = 19
		xlUICultureTag = 46
	End Enum

	Enum XlPageBreakExtent
		xlPageBreakFull = 1
		xlPageBreakPartial = 2
	End Enum

	Enum XlCellInsertionMode
		xlOverwriteCells = 0
		xlInsertDeleteCells = 1
		xlInsertEntireRows = 2
	End Enum

	Enum XlFormulaLabel
		xlNoLabels = -4142
		xlRowLabels = 1
		xlColumnLabels = 2
		xlMixedLabels = 3
	End Enum

	Enum XlHighlightChangesTime
		xlSinceMyLastSave = 1
		xlAllChanges = 2
		xlNotYetReviewed = 3
	End Enum

	Enum XlCommentDisplayMode
		xlNoIndicator = 0
		xlCommentIndicatorOnly = -1
		xlCommentAndIndicator = 1
	End Enum

	Enum XlFormatConditionType
		xlCellValue = 1
		xlExpression = 2
		xlColorScale = 3
		xlDatabar = 4
		xlTop10 = 5
		xlIconSets = 6
		xlUniqueValues = 8
		xlTextString = 9
		xlBlanksCondition = 10
		xlTimePeriod = 11
		xlAboveAverageCondition = 12
		xlNoBlanksCondition = 13
		xlErrorsCondition = 16
		xlNoErrorsCondition = 17
	End Enum

	Enum XlFormatConditionOperator
		xlBetween = 1
		xlNotBetween = 2
		xlEqual = 3
		xlNotEqual = 4
		xlGreater = 5
		xlLess = 6
		xlGreaterEqual = 7
		xlLessEqual = 8
	End Enum

	Enum XlEnableSelection
		xlNoRestrictions = 0
		xlUnlockedCells = 1
		xlNoSelection = -4142
	End Enum

	Enum XlDVType
		xlValidateInputOnly = 0
		xlValidateWholeNumber = 1
		xlValidateDecimal = 2
		xlValidateList = 3
		xlValidateDate = 4
		xlValidateTime = 5
		xlValidateTextLength = 6
		xlValidateCustom = 7
	End Enum

	Enum XlIMEMode
		xlIMEModeNoControl = 0
		xlIMEModeOn = 1
		xlIMEModeOff = 2
		xlIMEModeDisable = 3
		xlIMEModeHiragana = 4
		xlIMEModeKatakana = 5
		xlIMEModeKatakanaHalf = 6
		xlIMEModeAlphaFull = 7
		xlIMEModeAlpha = 8
		xlIMEModeHangulFull = 9
		xlIMEModeHangul = 10
	End Enum

	Enum XlDVAlertStyle
		xlValidAlertStop = 1
		xlValidAlertWarning = 2
		xlValidAlertInformation = 3
	End Enum

	Enum XlChartLocation
		xlLocationAsNewSheet = 1
		xlLocationAsObject = 2
		xlLocationAutomatic = 3
	End Enum

	Enum XlPaperSize
		xlPaper10x14 = 16
		xlPaper11x17 = 17
		xlPaperA3 = 8
		xlPaperA4 = 9
		xlPaperA4Small = 10
		xlPaperA5 = 11
		xlPaperB4 = 12
		xlPaperB5 = 13
		xlPaperCsheet = 24
		xlPaperDsheet = 25
		xlPaperEnvelope10 = 20
		xlPaperEnvelope11 = 21
		xlPaperEnvelope12 = 22
		xlPaperEnvelope14 = 23
		xlPaperEnvelope9 = 19
		xlPaperEnvelopeB4 = 33
		xlPaperEnvelopeB5 = 34
		xlPaperEnvelopeB6 = 35
		xlPaperEnvelopeC3 = 29
		xlPaperEnvelopeC4 = 30
		xlPaperEnvelopeC5 = 28
		xlPaperEnvelopeC6 = 31
		xlPaperEnvelopeC65 = 32
		xlPaperEnvelopeDL = 27
		xlPaperEnvelopeItaly = 36
		xlPaperEnvelopeMonarch = 37
		xlPaperEnvelopePersonal = 38
		xlPaperEsheet = 26
		xlPaperExecutive = 7
		xlPaperFanfoldLegalGerman = 41
		xlPaperFanfoldStdGerman = 40
		xlPaperFanfoldUS = 39
		xlPaperFolio = 14
		xlPaperLedger = 4
		xlPaperLegal = 5
		xlPaperLetter = 1
		xlPaperLetterSmall = 2
		xlPaperNote = 18
		xlPaperQuarto = 15
		xlPaperStatement = 6
		xlPaperTabloid = 3
		xlPaperUser = 256
	End Enum

	Enum XlPasteSpecialOperation
		xlPasteSpecialOperationAdd = 2
		xlPasteSpecialOperationDivide = 5
		xlPasteSpecialOperationMultiply = 4
		xlPasteSpecialOperationNone = -4142
		xlPasteSpecialOperationSubtract = 3
	End Enum

	Enum XlPasteType
		xlPasteAll = -4104
		xlPasteAllUsingSourceTheme = 13
		xlPasteAllMergingConditionalFormats = 14
		xlPasteAllExceptBorders = 7
		xlPasteFormats = -4122
		xlPasteFormulas = -4123
		xlPasteComments = -4144
		xlPasteValues = -4163
		xlPasteColumnWidths = 8
		xlPasteValidation = 6
		xlPasteFormulasAndNumberFormats = 11
		xlPasteValuesAndNumberFormats = 12
	End Enum

	Enum XlPhoneticCharacterType
		xlKatakanaHalf = 0
		xlKatakana = 1
		xlHiragana = 2
		xlNoConversion = 3
	End Enum

	Enum XlPhoneticAlignment
		xlPhoneticAlignNoControl = 0
		xlPhoneticAlignLeft = 1
		xlPhoneticAlignCenter = 2
		xlPhoneticAlignDistributed = 3
	End Enum

	Enum XlPictureAppearance
		xlPrinter = 2
		xlScreen = 1
	End Enum

	Enum XlPivotFieldOrientation
		xlColumnField = 2
		xlDataField = 4
		xlHidden = 0
		xlPageField = 3
		xlRowField = 1
	End Enum

	Enum XlPivotFieldCalculation
		xlDifferenceFrom = 2
		xlIndex = 9
		xlNoAdditionalCalculation = -4143
		xlPercentDifferenceFrom = 4
		xlPercentOf = 3
		xlPercentOfColumn = 7
		xlPercentOfRow = 6
		xlPercentOfTotal = 8
		xlRunningTotal = 5
		xlPercentOfParentRow = 10
		xlPercentOfParentColumn = 11
		xlPercentOfParent = 12
		xlPercentRunningTotal = 13
		xlRankAscending = 14
		xlRankDecending = 15
	End Enum

	Enum XlPlacement
		xlFreeFloating = 3
		xlMove = 2
		xlMoveAndSize = 1
	End Enum

	Enum XlPlatform
		xlMacintosh = 1
		xlMSDOS = 3
		xlWindows = 2
	End Enum

	Enum XlPrintLocation
		xlPrintSheetEnd = 1
		xlPrintInPlace = 16
		xlPrintNoComments = -4142
	End Enum

	Enum XlPriority
		xlPriorityHigh = -4127
		xlPriorityLow = -4134
		xlPriorityNormal = -4143
	End Enum

	Enum XlPTSelectionMode
		xlLabelOnly = 1
		xlDataAndLabel = 0
		xlDataOnly = 2
		xlOrigin = 3
		xlButton = 15
		xlBlanks = 4
		xlFirstRow = 256
	End Enum

	Enum XlRangeAutoFormat
		xlRangeAutoFormat3DEffects1 = 13
		xlRangeAutoFormat3DEffects2 = 14
		xlRangeAutoFormatAccounting1 = 4
		xlRangeAutoFormatAccounting2 = 5
		xlRangeAutoFormatAccounting3 = 6
		xlRangeAutoFormatAccounting4 = 17
		xlRangeAutoFormatClassic1 = 1
		xlRangeAutoFormatClassic2 = 2
		xlRangeAutoFormatClassic3 = 3
		xlRangeAutoFormatColor1 = 7
		xlRangeAutoFormatColor2 = 8
		xlRangeAutoFormatColor3 = 9
		xlRangeAutoFormatList1 = 10
		xlRangeAutoFormatList2 = 11
		xlRangeAutoFormatList3 = 12
		xlRangeAutoFormatLocalFormat1 = 15
		xlRangeAutoFormatLocalFormat2 = 16
		xlRangeAutoFormatLocalFormat3 = 19
		xlRangeAutoFormatLocalFormat4 = 20
		xlRangeAutoFormatReport1 = 21
		xlRangeAutoFormatReport2 = 22
		xlRangeAutoFormatReport3 = 23
		xlRangeAutoFormatReport4 = 24
		xlRangeAutoFormatReport5 = 25
		xlRangeAutoFormatReport6 = 26
		xlRangeAutoFormatReport7 = 27
		xlRangeAutoFormatReport8 = 28
		xlRangeAutoFormatReport9 = 29
		xlRangeAutoFormatReport10 = 30
		xlRangeAutoFormatClassicPivotTable = 31
		xlRangeAutoFormatTable1 = 32
		xlRangeAutoFormatTable2 = 33
		xlRangeAutoFormatTable3 = 34
		xlRangeAutoFormatTable4 = 35
		xlRangeAutoFormatTable5 = 36
		xlRangeAutoFormatTable6 = 37
		xlRangeAutoFormatTable7 = 38
		xlRangeAutoFormatTable8 = 39
		xlRangeAutoFormatTable9 = 40
		xlRangeAutoFormatTable10 = 41
		xlRangeAutoFormatPTNone = 42
		xlRangeAutoFormatNone = -4142
		xlRangeAutoFormatSimple = -4154
	End Enum

	Enum XlReferenceType
		xlAbsolute = 1
		xlAbsRowRelColumn = 2
		xlRelative = 4
		xlRelRowAbsColumn = 3
	End Enum

	Enum XlLayoutFormType
		xlTabular = 0
		xlOutline = 1
	End Enum

	Enum XlRoutingSlipDelivery
		xlAllAtOnce = 2
		xlOneAfterAnother = 1
	End Enum

	Enum XlRoutingSlipStatus
		xlNotYetRouted = 0
		xlRoutingComplete = 2
		xlRoutingInProgress = 1
	End Enum

	Enum XlRunAutoMacro
		xlAutoActivate = 3
		xlAutoClose = 2
		xlAutoDeactivate = 4
		xlAutoOpen = 1
	End Enum

	Enum XlSaveAction
		xlDoNotSaveChanges = 2
		xlSaveChanges = 1
	End Enum

	Enum XlSaveAsAccessMode
		xlExclusive = 3
		xlNoChange = 1
		xlShared = 2
	End Enum

	Enum XlSaveConflictResolution
		xlLocalSessionChanges = 2
		xlOtherSessionChanges = 3
		xlUserResolution = 1
	End Enum

	Enum XlSearchDirection
		xlNext = 1
		xlPrevious = 2
	End Enum

	Enum XlSearchOrder
		xlByColumns = 2
		xlByRows = 1
	End Enum

	Enum XlSheetVisibility
		xlSheetVisible = -1
		xlSheetHidden = 0
		xlSheetVeryHidden = 2
	End Enum

	Enum XlSortMethod
		xlPinYin = 1
		xlStroke = 2
	End Enum

	Enum XlSortMethodOld
		xlCodePage = 2
		xlSyllabary = 1
	End Enum

	Enum XlSortOrder
		xlAscending = 1
		xlDescending = 2
	End Enum

	Enum XlSortOrientation
		xlSortRows = 2
		xlSortColumns = 1
	End Enum

	Enum XlSortType
		xlSortLabels = 2
		xlSortValues = 1
	End Enum

	Enum XlSpecialCellsValue
		xlErrors = 16
		xlLogical = 4
		xlNumbers = 1
		xlTextValues = 2
	End Enum

	Enum XlSubscribeToFormat
		xlSubscribeToPicture = -4147
		xlSubscribeToText = -4158
	End Enum

	Enum XlSummaryRow
		xlSummaryAbove = 0
		xlSummaryBelow = 1
	End Enum

	Enum XlSummaryColumn
		xlSummaryOnLeft = -4131
		xlSummaryOnRight = -4152
	End Enum

	Enum XlSummaryReportType
		xlSummaryPivotTable = -4148
		xlStandardSummary = 1
	End Enum

	Enum XlTabPosition
		xlTabPositionFirst = 0
		xlTabPositionLast = 1
	End Enum

	Enum XlTextParsingType
		xlDelimited = 1
		xlFixedWidth = 2
	End Enum

	Enum XlTextQualifier
		xlTextQualifierDoubleQuote = 1
		xlTextQualifierNone = -4142
		xlTextQualifierSingleQuote = 2
	End Enum

	Enum XlWBATemplate
		xlWBATChart = -4109
		xlWBATExcel4IntlMacroSheet = 4
		xlWBATExcel4MacroSheet = 3
		xlWBATWorksheet = -4167
	End Enum

	Enum XlWindowView
		xlNormalView = 1
		xlPageBreakPreview = 2
		xlPageLayoutView = 3
	End Enum

	Enum XlXLMMacroType
		xlCommand = 2
		xlFunction = 1
		xlNotXLM = 3
	End Enum

	Enum XlYesNoGuess
		xlGuess = 0
		xlNo = 2
		xlYes = 1
	End Enum

	Enum XlBordersIndex
		xlInsideHorizontal = 12
		xlInsideVertical = 11
		xlDiagonalDown = 5
		xlDiagonalUp = 6
		xlEdgeBottom = 9
		xlEdgeLeft = 7
		xlEdgeRight = 10
		xlEdgeTop = 8
	End Enum

	Enum XlToolbarProtection
		xlNoButtonChanges = 1
		xlNoChanges = 4
		xlNoDockingChanges = 3
		xlToolbarProtectionNone = -4143
		xlNoShapeChanges = 2
	End Enum

	Enum XlBuiltInDialog
		xlDialogOpen = 1
		xlDialogOpenLinks = 2
		xlDialogSaveAs = 5
		xlDialogFileDelete = 6
		xlDialogPageSetup = 7
		xlDialogPrint = 8
		xlDialogPrinterSetup = 9
		xlDialogArrangeAll = 12
		xlDialogWindowSize = 13
		xlDialogWindowMove = 14
		xlDialogRun = 17
		xlDialogSetPrintTitles = 23
		xlDialogFont = 26
		xlDialogDisplay = 27
		xlDialogProtectDocument = 28
		xlDialogCalculation = 32
		xlDialogExtract = 35
		xlDialogDataDelete = 36
		xlDialogSort = 39
		xlDialogDataSeries = 40
		xlDialogTable = 41
		xlDialogFormatNumber = 42
		xlDialogAlignment = 43
		xlDialogStyle = 44
		xlDialogBorder = 45
		xlDialogCellProtection = 46
		xlDialogColumnWidth = 47
		xlDialogClear = 52
		xlDialogPasteSpecial = 53
		xlDialogEditDelete = 54
		xlDialogInsert = 55
		xlDialogPasteNames = 58
		xlDialogDefineName = 61
		xlDialogCreateNames = 62
		xlDialogFormulaGoto = 63
		xlDialogFormulaFind = 64
		xlDialogGalleryArea = 67
		xlDialogGalleryBar = 68
		xlDialogGalleryColumn = 69
		xlDialogGalleryLine = 70
		xlDialogGalleryPie = 71
		xlDialogGalleryScatter = 72
		xlDialogCombination = 73
		xlDialogGridlines = 76
		xlDialogAxes = 78
		xlDialogAttachText = 80
		xlDialogPatterns = 84
		xlDialogMainChart = 85
		xlDialogOverlay = 86
		xlDialogScale = 87
		xlDialogFormatLegend = 88
		xlDialogFormatText = 89
		xlDialogParse = 91
		xlDialogUnhide = 94
		xlDialogWorkspace = 95
		xlDialogActivate = 103
		xlDialogCopyPicture = 108
		xlDialogDeleteName = 110
		xlDialogDeleteFormat = 111
		xlDialogNew = 119
		xlDialogRowHeight = 127
		xlDialogFormatMove = 128
		xlDialogFormatSize = 129
		xlDialogFormulaReplace = 130
		xlDialogSelectSpecial = 132
		xlDialogApplyNames = 133
		xlDialogReplaceFont = 134
		xlDialogSplit = 137
		xlDialogOutline = 142
		xlDialogSaveWorkbook = 145
		xlDialogCopyChart = 147
		xlDialogFormatFont = 150
		xlDialogNote = 154
		xlDialogSetUpdateStatus = 159
		xlDialogColorPalette = 161
		xlDialogChangeLink = 166
		xlDialogAppMove = 170
		xlDialogAppSize = 171
		xlDialogMainChartType = 185
		xlDialogOverlayChartType = 186
		xlDialogOpenMail = 188
		xlDialogSendMail = 189
		xlDialogStandardFont = 190
		xlDialogConsolidate = 191
		xlDialogSortSpecial = 192
		xlDialogGallery3dArea = 193
		xlDialogGallery3dColumn = 194
		xlDialogGallery3dLine = 195
		xlDialogGallery3dPie = 196
		xlDialogView3d = 197
		xlDialogGoalSeek = 198
		xlDialogWorkgroup = 199
		xlDialogFillGroup = 200
		xlDialogUpdateLink = 201
		xlDialogPromote = 202
		xlDialogDemote = 203
		xlDialogShowDetail = 204
		xlDialogObjectProperties = 207
		xlDialogSaveNewObject = 208
		xlDialogApplyStyle = 212
		xlDialogAssignToObject = 213
		xlDialogObjectProtection = 214
		xlDialogCreatePublisher = 217
		xlDialogSubscribeTo = 218
		xlDialogShowToolbar = 220
		xlDialogPrintPreview = 222
		xlDialogEditColor = 223
		xlDialogFormatMain = 225
		xlDialogFormatOverlay = 226
		xlDialogEditSeries = 228
		xlDialogDefineStyle = 229
		xlDialogGalleryRadar = 249
		xlDialogEditionOptions = 251
		xlDialogZoom = 256
		xlDialogInsertObject = 259
		xlDialogSize = 261
		xlDialogMove = 262
		xlDialogFormatAuto = 269
		xlDialogGallery3dBar = 272
		xlDialogGallery3dSurface = 273
		xlDialogCustomizeToolbar = 276
		xlDialogWorkbookAdd = 281
		xlDialogWorkbookMove = 282
		xlDialogWorkbookCopy = 283
		xlDialogWorkbookOptions = 284
		xlDialogSaveWorkspace = 285
		xlDialogChartWizard = 288
		xlDialogAssignToTool = 293
		xlDialogPlacement = 300
		xlDialogFillWorkgroup = 301
		xlDialogWorkbookNew = 302
		xlDialogScenarioCells = 305
		xlDialogScenarioAdd = 307
		xlDialogScenarioEdit = 308
		xlDialogScenarioSummary = 311
		xlDialogPivotTableWizard = 312
		xlDialogPivotFieldProperties = 313
		xlDialogOptionsCalculation = 318
		xlDialogOptionsEdit = 319
		xlDialogOptionsView = 320
		xlDialogAddinManager = 321
		xlDialogMenuEditor = 322
		xlDialogAttachToolbars = 323
		xlDialogOptionsChart = 325
		xlDialogVbaInsertFile = 328
		xlDialogVbaProcedureDefinition = 330
		xlDialogRoutingSlip = 336
		xlDialogMailLogon = 339
		xlDialogInsertPicture = 342
		xlDialogGalleryDoughnut = 344
		xlDialogChartTrend = 350
		xlDialogWorkbookInsert = 354
		xlDialogOptionsTransition = 355
		xlDialogOptionsGeneral = 356
		xlDialogFilterAdvanced = 370
		xlDialogMailNextLetter = 378
		xlDialogDataLabel = 379
		xlDialogInsertTitle = 380
		xlDialogFontProperties = 381
		xlDialogMacroOptions = 382
		xlDialogWorkbookUnhide = 384
		xlDialogWorkbookName = 386
		xlDialogGalleryCustom = 388
		xlDialogAddChartAutoformat = 390
		xlDialogChartAddData = 392
		xlDialogTabOrder = 394
		xlDialogSubtotalCreate = 398
		xlDialogWorkbookTabSplit = 415
		xlDialogWorkbookProtect = 417
		xlDialogScrollbarProperties = 420
		xlDialogPivotShowPages = 421
		xlDialogTextToColumns = 422
		xlDialogFormatCharttype = 423
		xlDialogPivotFieldGroup = 433
		xlDialogPivotFieldUngroup = 434
		xlDialogCheckboxProperties = 435
		xlDialogLabelProperties = 436
		xlDialogListboxProperties = 437
		xlDialogEditboxProperties = 438
		xlDialogOpenText = 441
		xlDialogPushbuttonProperties = 445
		xlDialogFilter = 447
		xlDialogFunctionWizard = 450
		xlDialogSaveCopyAs = 456
		xlDialogOptionsListsAdd = 458
		xlDialogSeriesAxes = 460
		xlDialogSeriesX = 461
		xlDialogSeriesY = 462
		xlDialogErrorbarX = 463
		xlDialogErrorbarY = 464
		xlDialogFormatChart = 465
		xlDialogSeriesOrder = 466
		xlDialogMailEditMailer = 470
		xlDialogStandardWidth = 472
		xlDialogScenarioMerge = 473
		xlDialogProperties = 474
		xlDialogSummaryInfo = 474
		xlDialogFindFile = 475
		xlDialogActiveCellFont = 476
		xlDialogVbaMakeAddin = 478
		xlDialogFileSharing = 481
		xlDialogAutoCorrect = 485
		xlDialogCustomViews = 493
		xlDialogInsertNameLabel = 496
		xlDialogSeriesShape = 504
		xlDialogChartOptionsDataLabels = 505
		xlDialogChartOptionsDataTable = 506
		xlDialogSetBackgroundPicture = 509
		xlDialogDataValidation = 525
		xlDialogChartType = 526
		xlDialogChartLocation = 527
		_xlDialogPhonetic = 538
		xlDialogChartSourceData = 540
		_xlDialogChartSourceData = 541
		xlDialogSeriesOptions = 557
		xlDialogPivotTableOptions = 567
		xlDialogPivotSolveOrder = 568
		xlDialogPivotCalculatedField = 570
		xlDialogPivotCalculatedItem = 572
		xlDialogConditionalFormatting = 583
		xlDialogInsertHyperlink = 596
		xlDialogProtectSharing = 620
		xlDialogOptionsME = 647
		xlDialogPublishAsWebPage = 653
		xlDialogPhonetic = 656
		xlDialogNewWebQuery = 667
		xlDialogImportTextFile = 666
		xlDialogExternalDataProperties = 530
		xlDialogWebOptionsGeneral = 683
		xlDialogWebOptionsFiles = 684
		xlDialogWebOptionsPictures = 685
		xlDialogWebOptionsEncoding = 686
		xlDialogWebOptionsFonts = 687
		xlDialogPivotClientServerSet = 689
		xlDialogPropertyFields = 754
		xlDialogSearch = 731
		xlDialogEvaluateFormula = 709
		xlDialogDataLabelMultiple = 723
		xlDialogChartOptionsDataLabelMultiple = 724
		xlDialogErrorChecking = 732
		xlDialogWebOptionsBrowsers = 773
		xlDialogCreateList = 796
		xlDialogPermission = 832
		xlDialogMyPermission = 834
		xlDialogDocumentInspector = 862
		xlDialogNameManager = 977
		xlDialogNewName = 978
		xlDialogSparklineInsertLine = 1133
		xlDialogSparklineInsertColumn = 1134
		xlDialogSparklineInsertWinLoss = 1135
		xlDialogSlicerSettings = 1179
		xlDialogSlicerCreation = 1182
		xlDialogSlicerPivotTableConnections = 1184
		xlDialogPivotTableSlicerConnections = 1183
		xlDialogPivotTableWhatIfAnalysisSettings = 1153
		xlDialogSetManager = 1109
		xlDialogSetMDXEditor = 1208
		xlDialogSetTupleEditorOnRows = 1107
		xlDialogSetTupleEditorOnColumns = 1108
		xlDialogManageRelationships = 1271
		xlDialogCreateRelationship = 1272
		xlDialogRecommendedPivotTables = 1258
		xlDialogForecastETS = 1299
	End Enum

	Enum XlParameterType
		xlPrompt = 0
		xlConstant = 1
		xlRange = 2
	End Enum

	Enum XlParameterDataType
		xlParamTypeUnknown = 0
		xlParamTypeChar = 1
		xlParamTypeNumeric = 2
		xlParamTypeDecimal = 3
		xlParamTypeInteger = 4
		xlParamTypeSmallInt = 5
		xlParamTypeFloat = 6
		xlParamTypeReal = 7
		xlParamTypeDouble = 8
		xlParamTypeVarChar = 12
		xlParamTypeDate = 9
		xlParamTypeTime = 10
		xlParamTypeTimestamp = 11
		xlParamTypeLongVarChar = -1
		xlParamTypeBinary = -2
		xlParamTypeVarBinary = -3
		xlParamTypeLongVarBinary = -4
		xlParamTypeBigInt = -5
		xlParamTypeTinyInt = -6
		xlParamTypeBit = -7
		xlParamTypeWChar = -8
	End Enum

	Enum XlFormControl
		xlButtonControl = 0
		xlCheckBox = 1
		xlDropDown = 2
		xlEditBox = 3
		xlGroupBox = 4
		xlLabel = 5
		xlListBox = 6
		xlOptionButton = 7
		xlScrollBar = 8
		xlSpinner = 9
	End Enum

	Enum XlSourceType
		xlSourceWorkbook = 0
		xlSourceSheet = 1
		xlSourcePrintArea = 2
		xlSourceAutoFilter = 3
		xlSourceRange = 4
		xlSourceChart = 5
		xlSourcePivotTable = 6
		xlSourceQuery = 7
	End Enum

	Enum XlHtmlType
		xlHtmlStatic = 0
		xlHtmlCalc = 1
		xlHtmlList = 2
		xlHtmlChart = 3
	End Enum

	Enum XlPivotFormatType
		xlReport1 = 0
		xlReport2 = 1
		xlReport3 = 2
		xlReport4 = 3
		xlReport5 = 4
		xlReport6 = 5
		xlReport7 = 6
		xlReport8 = 7
		xlReport9 = 8
		xlReport10 = 9
		xlTable1 = 10
		xlTable2 = 11
		xlTable3 = 12
		xlTable4 = 13
		xlTable5 = 14
		xlTable6 = 15
		xlTable7 = 16
		xlTable8 = 17
		xlTable9 = 18
		xlTable10 = 19
		xlPTClassic = 20
		xlPTNone = 21
	End Enum

	Enum XlCmdType
		xlCmdCube = 1
		xlCmdSql = 2
		xlCmdTable = 3
		xlCmdDefault = 4
		xlCmdList = 5
		xlCmdTableCollection = 6
		xlCmdExcel = 7
		xlCmdDAX = 8
	End Enum

	Enum XlColumnDataType
		xlGeneralFormat = 1
		xlTextFormat = 2
		xlMDYFormat = 3
		xlDMYFormat = 4
		xlYMDFormat = 5
		xlMYDFormat = 6
		xlDYMFormat = 7
		xlYDMFormat = 8
		xlSkipColumn = 9
		xlEMDFormat = 10
	End Enum

	Enum XlQueryType
		xlODBCQuery = 1
		xlDAORecordset = 2
		xlWebQuery = 4
		xlOLEDBQuery = 5
		xlTextImport = 6
		xlADORecordset = 7
	End Enum

	Enum XlWebSelectionType
		xlEntirePage = 1
		xlAllTables = 2
		xlSpecifiedTables = 3
	End Enum

	Enum XlCubeFieldType
		xlHierarchy = 1
		xlMeasure = 2
		xlSet = 3
	End Enum

	Enum XlWebFormatting
		xlWebFormattingAll = 1
		xlWebFormattingRTF = 2
		xlWebFormattingNone = 3
	End Enum

	Enum XlDisplayDrawingObjects
		xlDisplayShapes = -4104
		xlHide = 3
		xlPlaceholders = 2
	End Enum

	Enum XlSubtototalLocationType
		xlAtTop = 1
		xlAtBottom = 2
	End Enum

	Enum XlPivotTableVersionList
		xlPivotTableVersion2000 = 0
		xlPivotTableVersion10 = 1
		xlPivotTableVersion11 = 2
		xlPivotTableVersion12 = 3
		xlPivotTableVersion14 = 4
		xlPivotTableVersion15 = 5
		xlPivotTableVersionCurrent = -1
	End Enum

	Enum XlPrintErrors
		xlPrintErrorsDisplayed = 0
		xlPrintErrorsBlank = 1
		xlPrintErrorsDash = 2
		xlPrintErrorsNA = 3
	End Enum

	Enum XlPivotCellType
		xlPivotCellValue = 0
		xlPivotCellPivotItem = 1
		xlPivotCellSubtotal = 2
		xlPivotCellGrandTotal = 3
		xlPivotCellDataField = 4
		xlPivotCellPivotField = 5
		xlPivotCellPageFieldItem = 6
		xlPivotCellCustomSubtotal = 7
		xlPivotCellDataPivotField = 8
		xlPivotCellBlankCell = 9
	End Enum

	Enum XlPivotTableMissingItems
		xlMissingItemsDefault = -1
		xlMissingItemsNone = 0
		xlMissingItemsMax = 32500
		xlMissingItemsMax2 = 1048576
	End Enum

	Enum XlCalculationState
		xlDone = 0
		xlCalculating = 1
		xlPending = 2
	End Enum

	Enum XlCalculationInterruptKey
		xlNoKey = 0
		xlEscKey = 1
		xlAnyKey = 2
	End Enum

	Enum XlSortDataOption
		xlSortNormal = 0
		xlSortTextAsNumbers = 1
	End Enum

	Enum XlUpdateLinks
		xlUpdateLinksUserSetting = 1
		xlUpdateLinksNever = 2
		xlUpdateLinksAlways = 3
	End Enum

	Enum XlLinkStatus
		xlLinkStatusOK = 0
		xlLinkStatusMissingFile = 1
		xlLinkStatusMissingSheet = 2
		xlLinkStatusOld = 3
		xlLinkStatusSourceNotCalculated = 4
		xlLinkStatusIndeterminate = 5
		xlLinkStatusNotStarted = 6
		xlLinkStatusInvalidName = 7
		xlLinkStatusSourceNotOpen = 8
		xlLinkStatusSourceOpen = 9
		xlLinkStatusCopiedValues = 10
	End Enum

	Enum XlSearchWithin
		xlWithinSheet = 1
		xlWithinWorkbook = 2
	End Enum

	Enum XlCorruptLoad
		xlNormalLoad = 0
		xlRepairFile = 1
		xlExtractData = 2
	End Enum

	Enum XlRobustConnect
		xlAsRequired = 0
		xlAlways = 1
		xlNever = 2
	End Enum

	Enum XlErrorChecks
		xlEvaluateToError = 1
		xlTextDate = 2
		xlNumberAsText = 3
		xlInconsistentFormula = 4
		xlOmittedCells = 5
		xlUnlockedFormulaCells = 6
		xlEmptyCellReferences = 7
		xlListDataValidation = 8
		xlInconsistentListFormula = 9
	End Enum

	Enum XlDataLabelSeparator
		xlDataLabelSeparatorDefault = 1
	End Enum

	Enum XlSmartTagDisplayMode
		xlIndicatorAndButton = 0
		xlDisplayNone = 1
		xlButtonOnly = 2
	End Enum

	Enum XlRangeValueDataType
		xlRangeValueDefault = 10
		xlRangeValueXMLSpreadsheet = 11
		xlRangeValueMSPersistXML = 12
	End Enum

	Enum XlSpeakDirection
		xlSpeakByRows = 0
		xlSpeakByColumns = 1
	End Enum

	Enum XlInsertFormatOrigin
		xlFormatFromLeftOrAbove = 0
		xlFormatFromRightOrBelow = 1
	End Enum

	Enum XlArabicModes
		xlArabicNone = 0
		xlArabicStrictAlefHamza = 1
		xlArabicStrictFinalYaa = 2
		xlArabicBothStrict = 3
	End Enum

	Enum XlImportDataAs
		xlQueryTable = 0
		xlPivotTableReport = 1
		xlTable = 2
	End Enum

	Enum XlCalculatedMemberType
		xlCalculatedMember = 0
		xlCalculatedSet = 1
		xlCalculatedMeasure = 2
	End Enum

	Enum XlHebrewModes
		xlHebrewFullScript = 0
		xlHebrewPartialScript = 1
		xlHebrewMixedScript = 2
		xlHebrewMixedAuthorizedScript = 3
	End Enum

	Enum XlListObjectSourceType
		xlSrcExternal = 0
		xlSrcRange = 1
		xlSrcXml = 2
		xlSrcQuery = 3
		xlSrcModel = 4
	End Enum

	Enum XlTextVisualLayoutType
		xlTextVisualLTR = 1
		xlTextVisualRTL = 2
	End Enum

	Enum XlListDataType
		xlListDataTypeNone = 0
		xlListDataTypeText = 1
		xlListDataTypeMultiLineText = 2
		xlListDataTypeNumber = 3
		xlListDataTypeCurrency = 4
		xlListDataTypeDateTime = 5
		xlListDataTypeChoice = 6
		xlListDataTypeChoiceMulti = 7
		xlListDataTypeListLookup = 8
		xlListDataTypeCheckbox = 9
		xlListDataTypeHyperLink = 10
		xlListDataTypeCounter = 11
		xlListDataTypeMultiLineRichText = 12
	End Enum

	Enum XlTotalsCalculation
		xlTotalsCalculationNone = 0
		xlTotalsCalculationSum = 1
		xlTotalsCalculationAverage = 2
		xlTotalsCalculationCount = 3
		xlTotalsCalculationCountNums = 4
		xlTotalsCalculationMin = 5
		xlTotalsCalculationMax = 6
		xlTotalsCalculationStdDev = 7
		xlTotalsCalculationVar = 8
		xlTotalsCalculationCustom = 9
	End Enum

	Enum XlXmlLoadOption
		xlXmlLoadPromptUser = 0
		xlXmlLoadOpenXml = 1
		xlXmlLoadImportToList = 2
		xlXmlLoadMapXml = 3
	End Enum

	Enum XlSmartTagControlType
		xlSmartTagControlSmartTag = 1
		xlSmartTagControlLink = 2
		xlSmartTagControlHelp = 3
		xlSmartTagControlHelpURL = 4
		xlSmartTagControlSeparator = 5
		xlSmartTagControlButton = 6
		xlSmartTagControlLabel = 7
		xlSmartTagControlImage = 8
		xlSmartTagControlCheckbox = 9
		xlSmartTagControlTextbox = 10
		xlSmartTagControlListbox = 11
		xlSmartTagControlCombo = 12
		xlSmartTagControlActiveX = 13
		xlSmartTagControlRadioGroup = 14
	End Enum

	Enum XlListConflict
		xlListConflictDialog = 0
		xlListConflictRetryAllConflicts = 1
		xlListConflictDiscardAllConflicts = 2
		xlListConflictError = 3
	End Enum

	Enum XlXmlExportResult
		xlXmlExportSuccess = 0
		xlXmlExportValidationFailed = 1
	End Enum

	Enum XlXmlImportResult
		xlXmlImportSuccess = 0
		xlXmlImportElementsTruncated = 1
		xlXmlImportValidationFailed = 2
	End Enum

	Enum XlRemoveDocInfoType
		xlRDIComments = 1
		xlRDIRemovePersonalInformation = 4
		xlRDIEmailHeader = 5
		xlRDIRoutingSlip = 6
		xlRDISendForReview = 7
		xlRDIDocumentProperties = 8
		xlRDIDocumentWorkspace = 10
		xlRDIInkAnnotations = 11
		xlRDIScenarioComments = 12
		xlRDIPublishInfo = 13
		xlRDIDocumentServerProperties = 14
		xlRDIDocumentManagementPolicy = 15
		xlRDIContentType = 16
		xlRDIDefinedNameComments = 18
		xlRDIInactiveDataConnections = 19
		xlRDIPrinterPath = 20
		xlRDIInlineWebExtensions = 21
		xlRDITaskpaneWebExtensions = 22
		xlRDIExcelDataModel = 23
		xlRDIAll = 99
	End Enum

	Enum XlRgbColor
		rgbAliceBlue = 16775408
		rgbAntiqueWhite = 14150650
		rgbAqua = 16776960
		rgbAquamarine = 13959039
		rgbAzure = 16777200
		rgbBeige = 14480885
		rgbBisque = 12903679
		rgbBlack = 0
		rgbBlanchedAlmond = 13495295
		rgbBlue = 16711680
		rgbBlueViolet = 14822282
		rgbBrown = 2763429
		rgbBurlyWood = 8894686
		rgbCadetBlue = 10526303
		rgbChartreuse = 65407
		rgbCoral = 5275647
		rgbCornflowerBlue = 15570276
		rgbCornsilk = 14481663
		rgbCrimson = 3937500
		rgbDarkBlue = 9109504
		rgbDarkCyan = 9145088
		rgbDarkGoldenrod = 755384
		rgbDarkGreen = 25600
		rgbDarkGray = 11119017
		rgbDarkGrey = 11119017
		rgbDarkKhaki = 7059389
		rgbDarkMagenta = 9109643
		rgbDarkOliveGreen = 3107669
		rgbDarkOrange = 36095
		rgbDarkOrchid = 13382297
		rgbDarkRed = 139
		rgbDarkSalmon = 8034025
		rgbDarkSeaGreen = 9419919
		rgbDarkSlateBlue = 9125192
		rgbDarkSlateGray = 5197615
		rgbDarkSlateGrey = 5197615
		rgbDarkTurquoise = 13749760
		rgbDarkViolet = 13828244
		rgbDeepPink = 9639167
		rgbDeepSkyBlue = 16760576
		rgbDimGray = 6908265
		rgbDimGrey = 6908265
		rgbDodgerBlue = 16748574
		rgbFireBrick = 2237106
		rgbFloralWhite = 15792895
		rgbForestGreen = 2263842
		rgbFuchsia = 16711935
		rgbGainsboro = 14474460
		rgbGhostWhite = 16775416
		rgbGold = 55295
		rgbGoldenrod = 2139610
		rgbGray = 8421504
		rgbGreen = 32768
		rgbGrey = 8421504
		rgbGreenYellow = 3145645
		rgbHoneydew = 15794160
		rgbHotPink = 11823615
		rgbIndianRed = 6053069
		rgbIndigo = 8519755
		rgbIvory = 15794175
		rgbKhaki = 9234160
		rgbLavender = 16443110
		rgbLavenderBlush = 16118015
		rgbLawnGreen = 64636
		rgbLemonChiffon = 13499135
		rgbLightBlue = 15128749
		rgbLightCoral = 8421616
		rgbLightCyan = 9145088
		rgbLightGoldenrodYellow = 13826810
		rgbLightGray = 13882323
		rgbLightGreen = 9498256
		rgbLightGrey = 13882323
		rgbLightPink = 12695295
		rgbLightSalmon = 8036607
		rgbLightSeaGreen = 11186720
		rgbLightSkyBlue = 16436871
		rgbLightSlateGray = 10061943
		rgbLightSlateGrey = 10061943
		rgbLightSteelBlue = 14599344
		rgbLightYellow = 14745599
		rgbLime = 65280
		rgbLimeGreen = 3329330
		rgbLinen = 15134970
		rgbMaroon = 128
		rgbMediumAquamarine = 11206502
		rgbMediumBlue = 13434880
		rgbMediumOrchid = 13850042
		rgbMediumPurple = 14381203
		rgbMediumSeaGreen = 7451452
		rgbMediumSlateBlue = 15624315
		rgbMediumSpringGreen = 10156544
		rgbMediumTurquoise = 13422920
		rgbMediumVioletRed = 8721863
		rgbMidnightBlue = 7346457
		rgbMintCream = 16449525
		rgbMistyRose = 14804223
		rgbMoccasin = 11920639
		rgbNavajoWhite = 11394815
		rgbNavy = 8388608
		rgbNavyBlue = 8388608
		rgbOldLace = 15136253
		rgbOlive = 32896
		rgbOliveDrab = 2330219
		rgbOrange = 42495
		rgbOrangeRed = 17919
		rgbOrchid = 14053594
		rgbPaleGoldenrod = 7071982
		rgbPaleGreen = 10025880
		rgbPaleTurquoise = 15658671
		rgbPaleVioletRed = 9662683
		rgbPapayaWhip = 14020607
		rgbPeachPuff = 12180223
		rgbPeru = 4163021
		rgbPink = 13353215
		rgbPlum = 14524637
		rgbPowderBlue = 15130800
		rgbPurple = 8388736
		rgbRed = 255
		rgbRosyBrown = 9408444
		rgbRoyalBlue = 14772545
		rgbSalmon = 7504122
		rgbSandyBrown = 6333684
		rgbSeaGreen = 5737262
		rgbSeashell = 15660543
		rgbSienna = 2970272
		rgbSilver = 12632256
		rgbSkyBlue = 15453831
		rgbSlateBlue = 13458026
		rgbSlateGray = 9470064
		rgbSlateGrey = 9470064
		rgbSnow = 16448255
		rgbSpringGreen = 8388352
		rgbSteelBlue = 11829830
		rgbTan = 9221330
		rgbTeal = 8421376
		rgbThistle = 14204888
		rgbTomato = 4678655
		rgbTurquoise = 13688896
		rgbYellow = 65535
		rgbYellowGreen = 3329434
		rgbViolet = 15631086
		rgbWheat = 11788021
		rgbWhite = 16777215
		rgbWhiteSmoke = 16119285
	End Enum

	Enum XlStdColorScale
		xlColorScaleRYG = 1
		xlColorScaleGYR = 2
		xlColorScaleBlackWhite = 3
		xlColorScaleWhiteBlack = 4
	End Enum

	Enum XlConditionValueTypes
		xlConditionValueNone = -1
		xlConditionValueNumber = 0
		xlConditionValueLowestValue = 1
		xlConditionValueHighestValue = 2
		xlConditionValuePercent = 3
		xlConditionValueFormula = 4
		xlConditionValuePercentile = 5
		xlConditionValueAutomaticMin = 6
		xlConditionValueAutomaticMax = 7
	End Enum

	Enum XlFormatFilterTypes
		xlFilterBottom = 0
		xlFilterTop = 1
		xlFilterBottomPercent = 2
		xlFilterTopPercent = 3
	End Enum

	Enum XlContainsOperator
		xlContains = 0
		xlDoesNotContain = 1
		xlBeginsWith = 2
		xlEndsWith = 3
	End Enum

	Enum XlAboveBelow
		xlAboveAverage = 0
		xlBelowAverage = 1
		xlEqualAboveAverage = 2
		xlEqualBelowAverage = 3
		xlAboveStdDev = 4
		xlBelowStdDev = 5
	End Enum

	Enum XlLookFor
		xlLookForBlanks = 0
		xlLookForErrors = 1
		xlLookForFormulas = 2
	End Enum

	Enum XlTimePeriods
		xlToday = 0
		xlYesterday = 1
		xlLast7Days = 2
		xlThisWeek = 3
		xlLastWeek = 4
		xlLastMonth = 5
		xlTomorrow = 6
		xlNextWeek = 7
		xlNextMonth = 8
		xlThisMonth = 9
	End Enum

	Enum XlDupeUnique
		xlUnique = 0
		xlDuplicate = 1
	End Enum

	Enum XlTopBottom
		xlTop10Top = 1
		xlTop10Bottom = 0
	End Enum

	Enum XlIconSet
		xlCustomSet = -1
		xl3Arrows = 1
		xl3ArrowsGray = 2
		xl3Flags = 3
		xl3TrafficLights1 = 4
		xl3TrafficLights2 = 5
		xl3Signs = 6
		xl3Symbols = 7
		xl3Symbols2 = 8
		xl4Arrows = 9
		xl4ArrowsGray = 10
		xl4RedToBlack = 11
		xl4CRV = 12
		xl4TrafficLights = 13
		xl5Arrows = 14
		xl5ArrowsGray = 15
		xl5CRV = 16
		xl5Quarters = 17
		xl3Stars = 18
		xl3Triangles = 19
		xl5Boxes = 20
	End Enum

	Enum XlThemeFont
		xlThemeFontNone = 0
		xlThemeFontMajor = 1
		xlThemeFontMinor = 2
	End Enum

	Enum XlPivotLineType
		xlPivotLineRegular = 0
		xlPivotLineSubtotal = 1
		xlPivotLineGrandTotal = 2
		xlPivotLineBlank = 3
	End Enum

	Enum XlCheckInVersionType
		xlCheckInMinorVersion = 0
		xlCheckInMajorVersion = 1
		xlCheckInOverwriteVersion = 2
	End Enum

	Enum XlPropertyDisplayedIn
		xlDisplayPropertyInPivotTable = 1
		xlDisplayPropertyInTooltip = 2
		xlDisplayPropertyInPivotTableAndTooltip = 3
	End Enum

	Enum XlConnectionType
		xlConnectionTypeOLEDB = 1
		xlConnectionTypeODBC = 2
		xlConnectionTypeXMLMAP = 3
		xlConnectionTypeTEXT = 4
		xlConnectionTypeWEB = 5
		xlConnectionTypeDATAFEED = 6
		xlConnectionTypeMODEL = 7
		xlConnectionTypeWORKSHEET = 8
		xlConnectionTypeNOSOURCE = 9
	End Enum

	Enum XlActionType
		xlActionTypeUrl = 1
		xlActionTypeRowset = 16
		xlActionTypeReport = 128
		xlActionTypeDrillthrough = 256
	End Enum

	Enum XlLayoutRowType
		xlCompactRow = 0
		xlTabularRow = 1
		xlOutlineRow = 2
	End Enum

	Enum XlMeasurementUnits
		xlInches = 0
		xlCentimeters = 1
		xlMillimeters = 2
	End Enum

	Enum XlPivotFilterType
		xlTopCount = 1
		xlBottomCount = 2
		xlTopPercent = 3
		xlBottomPercent = 4
		xlTopSum = 5
		xlBottomSum = 6
		xlValueEquals = 7
		xlValueDoesNotEqual = 8
		xlValueIsGreaterThan = 9
		xlValueIsGreaterThanOrEqualTo = 10
		xlValueIsLessThan = 11
		xlValueIsLessThanOrEqualTo = 12
		xlValueIsBetween = 13
		xlValueIsNotBetween = 14
		xlCaptionEquals = 15
		xlCaptionDoesNotEqual = 16
		xlCaptionBeginsWith = 17
		xlCaptionDoesNotBeginWith = 18
		xlCaptionEndsWith = 19
		xlCaptionDoesNotEndWith = 20
		xlCaptionContains = 21
		xlCaptionDoesNotContain = 22
		xlCaptionIsGreaterThan = 23
		xlCaptionIsGreaterThanOrEqualTo = 24
		xlCaptionIsLessThan = 25
		xlCaptionIsLessThanOrEqualTo = 26
		xlCaptionIsBetween = 27
		xlCaptionIsNotBetween = 28
		xlSpecificDate = 29
		xlNotSpecificDate = 30
		xlBefore = 31
		xlBeforeOrEqualTo = 32
		xlAfter = 33
		xlAfterOrEqualTo = 34
		xlDateBetween = 35
		xlDateNotBetween = 36
		xlDateTomorrow = 37
		xlDateToday = 38
		xlDateYesterday = 39
		xlDateNextWeek = 40
		xlDateThisWeek = 41
		xlDateLastWeek = 42
		xlDateNextMonth = 43
		xlDateThisMonth = 44
		xlDateLastMonth = 45
		xlDateNextQuarter = 46
		xlDateThisQuarter = 47
		xlDateLastQuarter = 48
		xlDateNextYear = 49
		xlDateThisYear = 50
		xlDateLastYear = 51
		xlYearToDate = 52
		xlAllDatesInPeriodQuarter1 = 53
		xlAllDatesInPeriodQuarter2 = 54
		xlAllDatesInPeriodQuarter3 = 55
		xlAllDatesInPeriodQuarter4 = 56
		xlAllDatesInPeriodJanuary = 57
		xlAllDatesInPeriodFebruary = 58
		xlAllDatesInPeriodMarch = 59
		xlAllDatesInPeriodApril = 60
		xlAllDatesInPeriodMay = 61
		xlAllDatesInPeriodJune = 62
		xlAllDatesInPeriodJuly = 63
		xlAllDatesInPeriodAugust = 64
		xlAllDatesInPeriodSeptember = 65
		xlAllDatesInPeriodOctober = 66
		xlAllDatesInPeriodNovember = 67
		xlAllDatesInPeriodDecember = 68
	End Enum

	Enum XlCredentialsMethod
		xlCredentialsMethodIntegrated = 0
		xlCredentialsMethodNone = 1
		xlCredentialsMethodStored = 2
	End Enum

	Enum XlCubeFieldSubType
		xlCubeHierarchy = 1
		xlCubeMeasure = 2
		xlCubeSet = 3
		xlCubeAttribute = 4
		xlCubeCalculatedMeasure = 5
		xlCubeKPIValue = 6
		xlCubeKPIGoal = 7
		xlCubeKPIStatus = 8
		xlCubeKPITrend = 9
		xlCubeKPIWeight = 10
		xlCubeImplicitMeasure = 11
	End Enum

	Enum XlSortOn
		xlSortOnValues = 0
		xlSortOnCellColor = 1
		xlSortOnFontColor = 2
		xlSortOnIcon = 3
	End Enum

	Enum XlDynamicFilterCriteria
		xlFilterToday = 1
		xlFilterYesterday = 2
		xlFilterTomorrow = 3
		xlFilterThisWeek = 4
		xlFilterLastWeek = 5
		xlFilterNextWeek = 6
		xlFilterThisMonth = 7
		xlFilterLastMonth = 8
		xlFilterNextMonth = 9
		xlFilterThisQuarter = 10
		xlFilterLastQuarter = 11
		xlFilterNextQuarter = 12
		xlFilterThisYear = 13
		xlFilterLastYear = 14
		xlFilterNextYear = 15
		xlFilterYearToDate = 16
		xlFilterAllDatesInPeriodQuarter1 = 17
		xlFilterAllDatesInPeriodQuarter2 = 18
		xlFilterAllDatesInPeriodQuarter3 = 19
		xlFilterAllDatesInPeriodQuarter4 = 20
		xlFilterAllDatesInPeriodJanuary = 21
		xlFilterAllDatesInPeriodFebruray = 22
		xlFilterAllDatesInPeriodMarch = 23
		xlFilterAllDatesInPeriodApril = 24
		xlFilterAllDatesInPeriodMay = 25
		xlFilterAllDatesInPeriodJune = 26
		xlFilterAllDatesInPeriodJuly = 27
		xlFilterAllDatesInPeriodAugust = 28
		xlFilterAllDatesInPeriodSeptember = 29
		xlFilterAllDatesInPeriodOctober = 30
		xlFilterAllDatesInPeriodNovember = 31
		xlFilterAllDatesInPeriodDecember = 32
		xlFilterAboveAverage = 33
		xlFilterBelowAverage = 34
	End Enum

	Enum XlFilterAllDatesInPeriod
		xlFilterAllDatesInPeriodYear = 0
		xlFilterAllDatesInPeriodMonth = 1
		xlFilterAllDatesInPeriodDay = 2
		xlFilterAllDatesInPeriodHour = 3
		xlFilterAllDatesInPeriodMinute = 4
		xlFilterAllDatesInPeriodSecond = 5
	End Enum

	Enum XlTableStyleElementType
		xlWholeTable = 0
		xlHeaderRow = 1
		xlTotalRow = 2
		xlGrandTotalRow = 2
		xlFirstColumn = 3
		xlLastColumn = 4
		xlGrandTotalColumn = 4
		xlRowStripe1 = 5
		xlRowStripe2 = 6
		xlColumnStripe1 = 7
		xlColumnStripe2 = 8
		xlFirstHeaderCell = 9
		xlLastHeaderCell = 10
		xlFirstTotalCell = 11
		xlLastTotalCell = 12
		xlSubtotalColumn1 = 13
		xlSubtotalColumn2 = 14
		xlSubtotalColumn3 = 15
		xlSubtotalRow1 = 16
		xlSubtotalRow2 = 17
		xlSubtotalRow3 = 18
		xlBlankRow = 19
		xlColumnSubheading1 = 20
		xlColumnSubheading2 = 21
		xlColumnSubheading3 = 22
		xlRowSubheading1 = 23
		xlRowSubheading2 = 24
		xlRowSubheading3 = 25
		xlPageFieldLabels = 26
		xlPageFieldValues = 27
		xlSlicerUnselectedItemWithData = 28
		xlSlicerUnselectedItemWithNoData = 29
		xlSlicerSelectedItemWithData = 30
		xlSlicerSelectedItemWithNoData = 31
		xlSlicerHoveredUnselectedItemWithData = 32
		xlSlicerHoveredSelectedItemWithData = 33
		xlSlicerHoveredUnselectedItemWithNoData = 34
		xlSlicerHoveredSelectedItemWithNoData = 35
		xlTimelineSelectionLabel = 36
		xlTimelineTimeLevel = 37
		xlTimelinePeriodLabels1 = 38
		xlTimelinePeriodLabels2 = 39
		xlTimelineSelectedTimeBlock = 40
		xlTimelineUnselectedTimeBlock = 41
		xlTimelineSelectedTimeBlockSpace = 42
	End Enum

	Enum XlPivotConditionScope
		xlSelectionScope = 0
		xlFieldsScope = 1
		xlDataFieldScope = 2
	End Enum

	Enum XlCalcFor
		xlAllValues = 0
		xlRowGroups = 1
		xlColGroups = 2
	End Enum

	Enum XlThemeColor
		xlThemeColorDark1 = 1
		xlThemeColorLight1 = 2
		xlThemeColorDark2 = 3
		xlThemeColorLight2 = 4
		xlThemeColorAccent1 = 5
		xlThemeColorAccent2 = 6
		xlThemeColorAccent3 = 7
		xlThemeColorAccent4 = 8
		xlThemeColorAccent5 = 9
		xlThemeColorAccent6 = 10
		xlThemeColorHyperlink = 11
		xlThemeColorFollowedHyperlink = 12
	End Enum

	Enum XlFixedFormatType
		xlTypePDF = 0
		xlTypeXPS = 1
	End Enum

	Enum XlFixedFormatQuality
		xlQualityStandard = 0
		xlQualityMinimum = 1
	End Enum

	Enum XlChartElementPosition
		xlChartElementPositionAutomatic = -4105
		xlChartElementPositionCustom = -4114
	End Enum

	Enum XlGenerateTableRefs
		xlGenerateTableRefA1 = 0
		xlGenerateTableRefStruct = 1
	End Enum

	Enum XlGradientFillType
		xlGradientFillLinear = 0
		xlGradientFillPath = 1
	End Enum

	Enum XlThreadMode
		xlThreadModeAutomatic = 0
		xlThreadModeManual = 1
	End Enum

	Enum XlOartHorizontalOverflow
		xlOartHorizontalOverflowOverflow = 0
		xlOartHorizontalOverflowClip = 1
	End Enum

	Enum XlOartVerticalOverflow
		xlOartVerticalOverflowOverflow = 0
		xlOartVerticalOverflowClip = 1
		xlOartVerticalOverflowEllipsis = 2
	End Enum

	Enum XlSparkScale
		xlSparkScaleGroup = 1
		xlSparkScaleSingle = 2
		xlSparkScaleCustom = 3
	End Enum

	Enum XlSparkType
		xlSparkLine = 1
		xlSparkColumn = 2
		xlSparkColumnStacked100 = 3
	End Enum

	Enum XlSparklineRowCol
		xlSparklineNonSquare = 0
		xlSparklineRowsSquare = 1
		xlSparklineColumnsSquare = 2
	End Enum

	Enum XlDataBarFillType
		xlDataBarFillSolid = 0
		xlDataBarFillGradient = 1
	End Enum

	Enum XlDataBarBorderType
		xlDataBarBorderNone = 0
		xlDataBarBorderSolid = 1
	End Enum

	Enum XlDataBarAxisPosition
		xlDataBarAxisAutomatic = 0
		xlDataBarAxisMidpoint = 1
		xlDataBarAxisNone = 2
	End Enum

	Enum XlDataBarNegativeColorType
		xlDataBarColor = 0
		xlDataBarSameAsPositive = 1
	End Enum

	Enum XlAllocation
		xlManualAllocation = 1
		xlAutomaticAllocation = 2
	End Enum

	Enum XlAllocationValue
		xlAllocateValue = 1
		xlAllocateIncrement = 2
	End Enum

	Enum XlAllocationMethod
		xlEqualAllocation = 1
		xlWeightedAllocation = 2
	End Enum

	Enum XlCellChangedState
		xlCellNotChanged = 1
		xlCellChanged = 2
		xlCellChangeApplied = 3
	End Enum

	Enum XlPivotFieldRepeatLabels
		xlDoNotRepeatLabels = 1
		xlRepeatLabels = 2
	End Enum

	Enum XlPieSliceIndex
		xlOuterCounterClockwisePoint = 1
		xlOuterCenterPoint = 2
		xlOuterClockwisePoint = 3
		xlMidClockwiseRadiusPoint = 4
		xlCenterPoint = 5
		xlMidCounterClockwiseRadiusPoint = 6
		xlInnerClockwisePoint = 7
		xlInnerCenterPoint = 8
		xlInnerCounterClockwisePoint = 9
	End Enum

	Enum XlSpanishModes
		xlSpanishTuteoOnly = 0
		xlSpanishTuteoAndVoseo = 1
		xlSpanishVoseoOnly = 2
	End Enum

	Enum XlSlicerCrossFilterType
		xlSlicerNoCrossFilter = 1
		xlSlicerCrossFilterShowItemsWithDataAtTop = 2
		xlSlicerCrossFilterShowItemsWithNoData = 3
		xlSlicerCrossFilterHideButtonsWithNoData = 4
	End Enum

	Enum XlSlicerSort
		xlSlicerSortDataSourceOrder = 1
		xlSlicerSortAscending = 2
		xlSlicerSortDescending = 3
	End Enum

	Enum XlIcon
		xlIconNoCellIcon = -1
		xlIconGreenUpArrow = 1
		xlIconYellowSideArrow = 2
		xlIconRedDownArrow = 3
		xlIconGrayUpArrow = 4
		xlIconGraySideArrow = 5
		xlIconGrayDownArrow = 6
		xlIconGreenFlag = 7
		xlIconYellowFlag = 8
		xlIconRedFlag = 9
		xlIconGreenCircle = 10
		xlIconYellowCircle = 11
		xlIconRedCircleWithBorder = 12
		xlIconBlackCircleWithBorder = 13
		xlIconGreenTrafficLight = 14
		xlIconYellowTrafficLight = 15
		xlIconRedTrafficLight = 16
		xlIconYellowTriangle = 17
		xlIconRedDiamond = 18
		xlIconGreenCheckSymbol = 19
		xlIconYellowExclamationSymbol = 20
		xlIconRedCrossSymbol = 21
		xlIconGreenCheck = 22
		xlIconYellowExclamation = 23
		xlIconRedCross = 24
		xlIconYellowUpInclineArrow = 25
		xlIconYellowDownInclineArrow = 26
		xlIconGrayUpInclineArrow = 27
		xlIconGrayDownInclineArrow = 28
		xlIconRedCircle = 29
		xlIconPinkCircle = 30
		xlIconGrayCircle = 31
		xlIconBlackCircle = 32
		xlIconCircleWithOneWhiteQuarter = 33
		xlIconCircleWithTwoWhiteQuarters = 34
		xlIconCircleWithThreeWhiteQuarters = 35
		xlIconWhiteCircleAllWhiteQuarters = 36
		xlIcon0Bars = 37
		xlIcon1Bar = 38
		xlIcon2Bars = 39
		xlIcon3Bars = 40
		xlIcon4Bars = 41
		xlIconGoldStar = 42
		xlIconHalfGoldStar = 43
		xlIconSilverStar = 44
		xlIconGreenUpTriangle = 45
		xlIconYellowDash = 46
		xlIconRedDownTriangle = 47
		xlIcon4FilledBoxes = 48
		xlIcon3FilledBoxes = 49
		xlIcon2FilledBoxes = 50
		xlIcon1FilledBox = 51
		xlIcon0FilledBoxes = 52
	End Enum

	Enum XlProtectedViewCloseReason
		xlProtectedViewCloseNormal = 0
		xlProtectedViewCloseEdit = 1
		xlProtectedViewCloseForced = 2
	End Enum

	Enum XlProtectedViewWindowState
		xlProtectedViewWindowNormal = 0
		xlProtectedViewWindowMinimized = 1
		xlProtectedViewWindowMaximized = 2
	End Enum

	Enum XlFileValidationPivotMode
		xlFileValidationPivotDefault = 0
		xlFileValidationPivotRun = 1
		xlFileValidationPivotSkip = 2
	End Enum

	Enum XlPieSliceLocation
		xlHorizontalCoordinate = 1
		xlVerticalCoordinate = 2
	End Enum

	Enum XlPortugueseReform
		xlPortuguesePreReform = 1
		xlPortuguesePostReform = 2
		xlPortugueseBoth = 3
	End Enum

	Enum XlQuickAnalysisMode
		xlLensOnly = 0
		xlFormatConditions = 1
		xlRecommendedCharts = 2
		xlTotals = 3
		xlTables = 4
		xlSparklines = 5
	End Enum

	Enum XlSlicerCacheType
		xlSlicer = 1
		xlTimeline = 2
	End Enum

	Enum XlCategoryLabelLevel
		xlCategoryLabelLevelNone = -3
		xlCategoryLabelLevelCustom = -2
		xlCategoryLabelLevelAll = -1
	End Enum

	Enum XlSeriesNameLevel
		xlSeriesNameLevelNone = -3
		xlSeriesNameLevelCustom = -2
		xlSeriesNameLevelAll = -1
	End Enum

	Enum XlCalcMemNumberFormatType
		xlNumberFormatTypeDefault = 0
		xlNumberFormatTypeNumber = 1
		xlNumberFormatTypePercent = 2
	End Enum

	Enum XlTimelineLevel
		xlTimelineLevelYears = 0
		xlTimelineLevelQuarters = 1
		xlTimelineLevelMonths = 2
		xlTimelineLevelDays = 3
	End Enum

	Enum XlFilterStatus
		xlFilterStatusOK = 0
		xlFilterStatusDateWrongOrder = 1
		xlFilterStatusDateHasTime = 2
		xlFilterStatusInvalidDate = 3
	End Enum

	Enum XlModelChangeSource
		xlChangeByExcel = 0
		xlChangeByPowerPivotAddIn = 1
	End Enum

	Enum XlParentDataLabelOptions
		xlParentDataLabelOptionsNone = 0
		xlParentDataLabelOptionsBanner = 1
		xlParentDataLabelOptionsOverlapping = 2
	End Enum

	Enum XlBinsType
		xlBinsTypeAutomatic = 0
		xlBinsTypeCategorical = 1
		xlBinsTypeManual = 2
		xlBinsTypeBinSize = 3
		xlBinsTypeBinCount = 4
	End Enum

	Enum XlForecastDataCompletion
		xlForecastDataCompletionZeros = 0
		xlForecastDataCompletionInterpolate = 1
	End Enum

	Enum XlForecastAggregation
		xlForecastAggregationAverage = 1
		xlForecastAggregationCount = 2
		xlForecastAggregationCountA = 3
		xlForecastAggregationMax = 4
		xlForecastAggregationMedian = 5
		xlForecastAggregationMin = 6
		xlForecastAggregationSum = 7
	End Enum

	Enum XlForecastChartType
		xlForecastChartTypeLine = 0
		xlForecastChartTypeColumn = 1
	End Enum

	' Interface pre declaration.
	Type IFont As IFont_
	Type IWindow As IWindow_
	Type IWindows As IWindows_
	Type IAppEvents As IAppEvents_
	Type IWorksheetFunction As IWorksheetFunction_
	Type IRange As IRange_
	Type IChartEvents As IChartEvents_
	Type IVPageBreak As IVPageBreak_
	Type IHPageBreak As IHPageBreak_
	Type IHPageBreaks As IHPageBreaks_
	Type IVPageBreaks As IVPageBreaks_
	Type IRecentFile As IRecentFile_
	Type IRecentFiles As IRecentFiles_
	Type IDocEvents As IDocEvents_
	Type IStyle As IStyle_
	Type IStyles As IStyles_
	Type IBorders As IBorders_
	Type IAddIn As IAddIn_
	Type IAddIns As IAddIns_
	Type IToolbar As IToolbar_
	Type IToolbars As IToolbars_
	Type IToolbarButton As IToolbarButton_
	Type IToolbarButtons As IToolbarButtons_
	Type IAreas As IAreas_
	Type IWorkbookEvents As IWorkbookEvents_
	Type IMenuBars As IMenuBars_
	Type IMenuBar As IMenuBar_
	Type IMenus As IMenus_
	Type IMenu As IMenu_
	Type IMenuItems As IMenuItems_
	Type IMenuItem As IMenuItem_
	Type ICharts As ICharts_
	Type IDrawingObjects As IDrawingObjects_
	Type IPivotCache As IPivotCache_
	Type IPivotCaches As IPivotCaches_
	Type IPivotFormula As IPivotFormula_
	Type IPivotFormulas As IPivotFormulas_
	Type IPivotTable As IPivotTable_
	Type IPivotTables As IPivotTables_
	Type IPivotField As IPivotField_
	Type IPivotFields As IPivotFields_
	Type ICalculatedFields As ICalculatedFields_
	Type IPivotItem As IPivotItem_
	Type IPivotItems As IPivotItems_
	Type ICalculatedItems As ICalculatedItems_
	Type ICharacters As ICharacters_
	Type IDialogs As IDialogs_
	Type IDialog As IDialog_
	Type ISoundNote As ISoundNote_
	Type IButton As IButton_
	Type IButtons As IButtons_
	Type ICheckBox As ICheckBox_
	Type ICheckBoxes As ICheckBoxes_
	Type IOptionButton As IOptionButton_
	Type IOptionButtons As IOptionButtons_
	Type IEditBox As IEditBox_
	Type IEditBoxes As IEditBoxes_
	Type IScrollBar As IScrollBar_
	Type IScrollBars As IScrollBars_
	Type IListBox As IListBox_
	Type IListBoxes As IListBoxes_
	Type IGroupBox As IGroupBox_
	Type IGroupBoxes As IGroupBoxes_
	Type IDropDown As IDropDown_
	Type IDropDowns As IDropDowns_
	Type ISpinner As ISpinner_
	Type ISpinners As ISpinners_
	Type IDialogFrame As IDialogFrame_
	Type ILabel As ILabel_
	Type ILabels As ILabels_
	Type IPanes As IPanes_
	Type IPane As IPane_
	Type IScenarios As IScenarios_
	Type IScenario As IScenario_
	Type IGroupObject As IGroupObject_
	Type IGroupObjects As IGroupObjects_
	Type ILine As ILine_
	Type ILines As ILines_
	Type IRectangle As IRectangle_
	Type IRectangles As IRectangles_
	Type IOval As IOval_
	Type IOvals As IOvals_
	Type IArc As IArc_
	Type IArcs As IArcs_
	Type IOLEObjectEvents As IOLEObjectEvents_
	Type _IOLEObject As _IOLEObject_
	Type IOLEObjects As IOLEObjects_
	Type ITextBox As ITextBox_
	Type ITextBoxes As ITextBoxes_
	Type IPicture As IPicture_
	Type IPictures As IPictures_
	Type IDrawing As IDrawing_
	Type IDrawings As IDrawings_
	Type IRoutingSlip As IRoutingSlip_
	Type IOutline As IOutline_
	Type IModule As IModule_
	Type IModules As IModules_
	Type IDialogSheet As IDialogSheet_
	Type IDialogSheets As IDialogSheets_
	Type IWorksheets As IWorksheets_
	Type IPageSetup As IPageSetup_
	Type INames As INames_
	Type IName As IName_
	Type IChartObject As IChartObject_
	Type IChartObjects As IChartObjects_
	Type IMailer As IMailer_
	Type ICustomViews As ICustomViews_
	Type ICustomView As ICustomView_
	Type IFormatConditions As IFormatConditions_
	Type IFormatCondition As IFormatCondition_
	Type IComments As IComments_
	Type IComment As IComment_
	Type IRefreshEvents As IRefreshEvents_
	Type _IQueryTable As _IQueryTable_
	Type IQueryTables As IQueryTables_
	Type IParameter As IParameter_
	Type IParameters As IParameters_
	Type IODBCError As IODBCError_
	Type IODBCErrors As IODBCErrors_
	Type IValidation As IValidation_
	Type IHyperlinks As IHyperlinks_
	Type IHyperlink As IHyperlink_
	Type IAutoFilter As IAutoFilter_
	Type IFilters As IFilters_
	Type IFilter As IFilter_
	Type IAutoCorrect As IAutoCorrect_
	Type IBorder As IBorder_
	Type IInterior As IInterior_
	Type IChartFillFormat As IChartFillFormat_
	Type IChartColorFormat As IChartColorFormat_
	Type IAxis As IAxis_
	Type IChartTitle As IChartTitle_
	Type IAxisTitle As IAxisTitle_
	Type IChartGroup As IChartGroup_
	Type IChartGroups As IChartGroups_
	Type IAxes As IAxes_
	Type IPoints As IPoints_
	Type IPoint As IPoint_
	Type ISeries As ISeries_
	Type ISeriesCollection As ISeriesCollection_
	Type IDataLabel As IDataLabel_
	Type IDataLabels As IDataLabels_
	Type ILegendEntry As ILegendEntry_
	Type ILegendEntries As ILegendEntries_
	Type ILegendKey As ILegendKey_
	Type ITrendlines As ITrendlines_
	Type ITrendline As ITrendline_
	Type ICorners As ICorners_
	Type ISeriesLines As ISeriesLines_
	Type IHiLoLines As IHiLoLines_
	Type IGridlines As IGridlines_
	Type IDropLines As IDropLines_
	Type ILeaderLines As ILeaderLines_
	Type IUpBars As IUpBars_
	Type IDownBars As IDownBars_
	Type IFloor As IFloor_
	Type IWalls As IWalls_
	Type ITickLabels As ITickLabels_
	Type IPlotArea As IPlotArea_
	Type IChartArea As IChartArea_
	Type ILegend As ILegend_
	Type IErrorBars As IErrorBars_
	Type IDataTable As IDataTable_
	Type IPhonetic As IPhonetic_
	Type IShape As IShape_
	Type IShapes As IShapes_
	Type IShapeRange As IShapeRange_
	Type IGroupShapes As IGroupShapes_
	Type ITextFrame As ITextFrame_
	Type IConnectorFormat As IConnectorFormat_
	Type IFreeformBuilder As IFreeformBuilder_
	Type IControlFormat As IControlFormat_
	Type IOLEFormat As IOLEFormat_
	Type ILinkFormat As ILinkFormat_
	Type IPublishObjects As IPublishObjects_
	Type IOLEDBError As IOLEDBError_
	Type IOLEDBErrors As IOLEDBErrors_
	Type IPhonetics As IPhonetics_
	Type IPivotLayout As IPivotLayout_
	Type IDisplayUnitLabel As IDisplayUnitLabel_
	Type ICellFormat As ICellFormat_
	Type IUsedObjects As IUsedObjects_
	Type ICustomProperties As ICustomProperties_
	Type ICustomProperty As ICustomProperty_
	Type ICalculatedMembers As ICalculatedMembers_
	Type ICalculatedMember As ICalculatedMember_
	Type IWatches As IWatches_
	Type IWatch As IWatch_
	Type IPivotCell As IPivotCell_
	Type IGraphic As IGraphic_
	Type IAutoRecover As IAutoRecover_
	Type IErrorCheckingOptions As IErrorCheckingOptions_
	Type IErrors As IErrors_
	Type IError As IError_
	Type ISmartTagAction As ISmartTagAction_
	Type ISmartTagActions As ISmartTagActions_
	Type ISmartTag As ISmartTag_
	Type ISmartTags As ISmartTags_
	Type ISmartTagRecognizer As ISmartTagRecognizer_
	Type ISmartTagRecognizers As ISmartTagRecognizers_
	Type ISmartTagOptions As ISmartTagOptions_
	Type ISpellingOptions As ISpellingOptions_
	Type ISpeech As ISpeech_
	Type IProtection As IProtection_
	Type IPivotItemList As IPivotItemList_
	Type ITab As ITab_
	Type IAllowEditRanges As IAllowEditRanges_
	Type IAllowEditRange As IAllowEditRange_
	Type IUserAccessList As IUserAccessList_
	Type IUserAccess As IUserAccess_
	Type IRTD As IRTD_
	Type IDiagram As IDiagram_
	Type IListObjects As IListObjects_
	Type IListObject As IListObject_
	Type IListColumns As IListColumns_
	Type IListColumn As IListColumn_
	Type IListRows As IListRows_
	Type IListRow As IListRow_
	Type IXmlNamespace As IXmlNamespace_
	Type IXmlNamespaces As IXmlNamespaces_
	Type IXmlDataBinding As IXmlDataBinding_
	Type IXmlSchema As IXmlSchema_
	Type IXmlSchemas As IXmlSchemas_
	Type IXmlMap As IXmlMap_
	Type IXmlMaps As IXmlMaps_
	Type IListDataFormat As IListDataFormat_
	Type IXPath As IXPath_
	Type IPivotLineCells As IPivotLineCells_
	Type IPivotLine As IPivotLine_
	Type IPivotLines As IPivotLines_
	Type IPivotAxis As IPivotAxis_
	Type IPivotFilter As IPivotFilter_
	Type IPivotFilters As IPivotFilters_
	Type IWorkbookConnection As IWorkbookConnection_
	Type IConnections As IConnections_
	Type IWorksheetView As IWorksheetView_
	Type IChartView As IChartView_
	Type IModuleView As IModuleView_
	Type IDialogSheetView As IDialogSheetView_
	Type ISheetViews As ISheetViews_
	Type IOLEDBConnection As IOLEDBConnection_
	Type IODBCConnection As IODBCConnection_
	Type IAction As IAction_
	Type IActions As IActions_
	Type IFormatColor As IFormatColor_
	Type IConditionValue As IConditionValue_
	Type IColorScale As IColorScale_
	Type IColorScaleCriteria As IColorScaleCriteria_
	Type IColorScaleCriterion As IColorScaleCriterion_
	Type IDatabar As IDatabar_
	Type IIconSetCondition As IIconSetCondition_
	Type IIconCriteria As IIconCriteria_
	Type IIconCriterion As IIconCriterion_
	Type IIcon As IIcon_
	Type IIconSet As IIconSet_
	Type IIconSets As IIconSets_
	Type ITop10 As ITop10_
	Type IAboveAverage As IAboveAverage_
	Type IUniqueValues As IUniqueValues_
	Type IRanges As IRanges_
	Type IHeaderFooter As IHeaderFooter_
	Type IPage As IPage_
	Type IPages As IPages_
	Type IServerViewableItems As IServerViewableItems_
	Type ITableStyleElement As ITableStyleElement_
	Type ITableStyleElements As ITableStyleElements_
	Type ITableStyle As ITableStyle_
	Type ITableStyles As ITableStyles_
	Type ISortField As ISortField_
	Type ISortFields As ISortFields_
	Type ISort As ISort_
	Type IResearch As IResearch_
	Type IColorStop As IColorStop_
	Type IColorStops As IColorStops_
	Type ILinearGradient As ILinearGradient_
	Type IRectangularGradient As IRectangularGradient_
	Type IMultiThreadedCalculation As IMultiThreadedCalculation_
	Type IChartFormat As IChartFormat_
	Type IFileExportConverter As IFileExportConverter_
	Type IFileExportConverters As IFileExportConverters_
	Type IAddIns2 As IAddIns2_
	Type ISparklineGroups As ISparklineGroups_
	Type ISparklineGroup As ISparklineGroup_
	Type ISparkPoints As ISparkPoints_
	Type ISparkline As ISparkline_
	Type ISparkAxes As ISparkAxes_
	Type ISparkHorizontalAxis As ISparkHorizontalAxis_
	Type ISparkVerticalAxis As ISparkVerticalAxis_
	Type ISparkColor As ISparkColor_
	Type IDataBarBorder As IDataBarBorder_
	Type INegativeBarFormat As INegativeBarFormat_
	Type IValueChange As IValueChange_
	Type IPivotTableChangeList As IPivotTableChangeList_
	Type IDisplayFormat As IDisplayFormat_
	Type ISlicerCaches As ISlicerCaches_
	Type ISlicerCache As ISlicerCache_
	Type ISlicerCacheLevels As ISlicerCacheLevels_
	Type ISlicerCacheLevel As ISlicerCacheLevel_
	Type ISlicers As ISlicers_
	Type ISlicer As ISlicer_
	Type ISlicerItem As ISlicerItem_
	Type ISlicerItems As ISlicerItems_
	Type ISlicerPivotTables As ISlicerPivotTables_
	Type IProtectedViewWindows As IProtectedViewWindows_
	Type IProtectedViewWindow As IProtectedViewWindow_
	Type ITableObject As ITableObject_
	Type IPivotValueCell As IPivotValueCell_
	Type IQuickAnalysis As IQuickAnalysis_
	Type IModelConnection As IModelConnection_
	Type IWorksheetDataConnection As IWorksheetDataConnection_
	Type ITextConnection As ITextConnection_
	Type IDataFeedConnection As IDataFeedConnection_
	Type IModelTableColumn As IModelTableColumn_
	Type IModelTableColumns As IModelTableColumns_
	Type IModelTable As IModelTable_
	Type IModelTables As IModelTables_
	Type IModelRelationship As IModelRelationship_
	Type IModelRelationships As IModelRelationships_
	Type IModel As IModel_
	Type IFullSeriesCollection As IFullSeriesCollection_
	Type IChartCategory As IChartCategory_
	Type ICategoryCollection As ICategoryCollection_
	Type ITimelineState As ITimelineState_
	Type ITimelineViewState As ITimelineViewState_
	Type IModelTableNames As IModelTableNames_
	Type IModelTableNameChange As IModelTableNameChange_
	Type IModelTableNameChanges As IModelTableNameChanges_
	Type IModelChanges As IModelChanges_
	Type IModelColumnName As IModelColumnName_
	Type IModelColumnNames As IModelColumnNames_
	Type IModelColumnChange As IModelColumnChange_
	Type IModelColumnChanges As IModelColumnChanges_
	Type IModelMeasureName As IModelMeasureName_
	Type IModelMeasureNames As IModelMeasureNames_
	Type IWorkbookQuery As IWorkbookQuery_
	Type IQueries As IQueries_
	Type IModelMeasure As IModelMeasure_
	Type IModelMeasures As IModelMeasures_
	Type IModelFormatGeneral As IModelFormatGeneral_
	Type IModelFormatDate As IModelFormatDate_
	Type IModelFormatDecimalNumber As IModelFormatDecimalNumber_
	Type IModelFormatWholeNumber As IModelFormatWholeNumber_
	Type IModelFormatPercentageNumber As IModelFormatPercentageNumber_
	Type IModelFormatScientificNumber As IModelFormatScientificNumber_
	Type IModelFormatCurrency As IModelFormatCurrency_
	Type IModelFormatBoolean As IModelFormatBoolean_
	Type IDummy As IDummy_
	Type ICanvasShapes As ICanvasShapes_

	' Default interface pre declaration for component classes.
	Type QueryTable As _QueryTable
	Type Application As _Application
	Type Chart As _Chart
	Type Worksheet As _Worksheet
	Type Global As _Global
	Type Workbook As _Workbook
	Type OLEObject As _OLEObject

	' Dual interface pre declaration.
	Type Adjustments As Adjustments_
	Type CalloutFormat As CalloutFormat_
	Type ColorFormat As ColorFormat_
	Type LineFormat As LineFormat_
	Type ShapeNode As ShapeNode_
	Type ShapeNodes As ShapeNodes_
	Type PictureFormat As PictureFormat_
	Type ShadowFormat As ShadowFormat_
	Type TextEffectFormat As TextEffectFormat_
	Type ThreeDFormat As ThreeDFormat_
	Type FillFormat As FillFormat_
	Type DiagramNodes As DiagramNodes_
	Type DiagramNodeChildren As DiagramNodeChildren_
	Type DiagramNode As DiagramNode_
	Type IRTDUpdateEvent As IRTDUpdateEvent_
	Type IRtdServer As IRtdServer_
	Type TextFrame2 As TextFrame2_
	Type _Application As _Application_
	Type _Chart As _Chart_
	Type Sheets As Sheets_
	Type _Worksheet As _Worksheet_
	Type _Global As _Global_
	Type _Workbook As _Workbook_
	Type Workbooks As Workbooks_
	Type PublishObject As PublishObject_
	Type DefaultWebOptions As DefaultWebOptions_
	Type WebOptions As WebOptions_
	Type TreeviewControl As TreeviewControl_
	Type CubeField As CubeField_
	Type CubeFields As CubeFields_
	Type Font As Font_
	Type Window As Window_
	Type Windows As Windows_
	Type AppEvents As AppEvents_
	Type WorksheetFunction As WorksheetFunction_
	Type Range As Range_
	Type ChartEvents As ChartEvents_
	Type VPageBreak As VPageBreak_
	Type HPageBreak As HPageBreak_
	Type HPageBreaks As HPageBreaks_
	Type VPageBreaks As VPageBreaks_
	Type RecentFile As RecentFile_
	Type RecentFiles As RecentFiles_
	Type DocEvents As DocEvents_
	Type Style As Style_
	Type Styles As Styles_
	Type Borders As Borders_
	Type AddIn As AddIn_
	Type AddIns As AddIns_
	Type Toolbar As Toolbar_
	Type Toolbars As Toolbars_
	Type ToolbarButton As ToolbarButton_
	Type ToolbarButtons As ToolbarButtons_
	Type Areas As Areas_
	Type WorkbookEvents As WorkbookEvents_
	Type MenuBars As MenuBars_
	Type MenuBar As MenuBar_
	Type Menus As Menus_
	Type Menu As Menu_
	Type MenuItems As MenuItems_
	Type MenuItem As MenuItem_
	Type Charts As Charts_
	Type DrawingObjects As DrawingObjects_
	Type PivotCache As PivotCache_
	Type PivotCaches As PivotCaches_
	Type PivotFormula As PivotFormula_
	Type PivotFormulas As PivotFormulas_
	Type PivotTable As PivotTable_
	Type PivotTables As PivotTables_
	Type PivotField As PivotField_
	Type PivotFields As PivotFields_
	Type CalculatedFields As CalculatedFields_
	Type PivotItem As PivotItem_
	Type PivotItems As PivotItems_
	Type CalculatedItems As CalculatedItems_
	Type Characters As Characters_
	Type Dialogs As Dialogs_
	Type Dialog As Dialog_
	Type SoundNote As SoundNote_
	Type Button As Button_
	Type Buttons As Buttons_
	Type CheckBox As CheckBox_
	Type CheckBoxes As CheckBoxes_
	Type OptionButton As OptionButton_
	Type OptionButtons As OptionButtons_
	Type EditBox As EditBox_
	Type EditBoxes As EditBoxes_
	Type ScrollBar As ScrollBar_
	Type ScrollBars As ScrollBars_
	Type ListBox As ListBox_
	Type ListBoxes As ListBoxes_
	Type GroupBox As GroupBox_
	Type GroupBoxes As GroupBoxes_
	Type DropDown As DropDown_
	Type DropDowns As DropDowns_
	Type Spinner As Spinner_
	Type Spinners As Spinners_
	Type DialogFrame As DialogFrame_
	Type Label As Label_
	Type Labels As Labels_
	Type Panes As Panes_
	Type Pane As Pane_
	Type Scenarios As Scenarios_
	Type Scenario As Scenario_
	Type GroupObject As GroupObject_
	Type GroupObjects As GroupObjects_
	Type Line As Line_
	Type Lines As Lines_
	Type Rectangle As Rectangle_
	Type Rectangles As Rectangles_
	Type Oval As Oval_
	Type Ovals As Ovals_
	Type Arc As Arc_
	Type Arcs As Arcs_
	Type OLEObjectEvents As OLEObjectEvents_
	Type _OLEObject As _OLEObject_
	Type OLEObjects As OLEObjects_
	Type TextBox As TextBox_
	Type TextBoxes As TextBoxes_
	Type Picture As Picture_
	Type Pictures As Pictures_
	Type Drawing As Drawing_
	Type Drawings As Drawings_
	Type RoutingSlip As RoutingSlip_
	Type Outline As Outline_
	Type Module As Module_
	Type Modules As Modules_
	Type DialogSheet As DialogSheet_
	Type DialogSheets As DialogSheets_
	Type Worksheets As Worksheets_
	Type PageSetup As PageSetup_
	Type Names As Names_
	Type Name As Name_
	Type ChartObject As ChartObject_
	Type ChartObjects As ChartObjects_
	Type Mailer As Mailer_
	Type CustomViews As CustomViews_
	Type CustomView As CustomView_
	Type FormatConditions As FormatConditions_
	Type FormatCondition As FormatCondition_
	Type Comments As Comments_
	Type Comment As Comment_
	Type RefreshEvents As RefreshEvents_
	Type _QueryTable As _QueryTable_
	Type QueryTables As QueryTables_
	Type Parameter As Parameter_
	Type Parameters As Parameters_
	Type ODBCError As ODBCError_
	Type ODBCErrors As ODBCErrors_
	Type Validation As Validation_
	Type Hyperlinks As Hyperlinks_
	Type Hyperlink As Hyperlink_
	Type AutoFilter As AutoFilter_
	Type Filters As Filters_
	Type Filter As Filter_
	Type AutoCorrect As AutoCorrect_
	Type Border As Border_
	Type Interior As Interior_
	Type ChartFillFormat As ChartFillFormat_
	Type ChartColorFormat As ChartColorFormat_
	Type Axis As Axis_
	Type ChartTitle As ChartTitle_
	Type AxisTitle As AxisTitle_
	Type ChartGroup As ChartGroup_
	Type ChartGroups As ChartGroups_
	Type Axes As Axes_
	Type Points As Points_
	Type Point As Point_
	Type Series As Series_
	Type SeriesCollection As SeriesCollection_
	Type DataLabel As DataLabel_
	Type DataLabels As DataLabels_
	Type LegendEntry As LegendEntry_
	Type LegendEntries As LegendEntries_
	Type LegendKey As LegendKey_
	Type Trendlines As Trendlines_
	Type Trendline As Trendline_
	Type Corners As Corners_
	Type SeriesLines As SeriesLines_
	Type HiLoLines As HiLoLines_
	Type Gridlines As Gridlines_
	Type DropLines As DropLines_
	Type LeaderLines As LeaderLines_
	Type UpBars As UpBars_
	Type DownBars As DownBars_
	Type Floor As Floor_
	Type Walls As Walls_
	Type TickLabels As TickLabels_
	Type PlotArea As PlotArea_
	Type ChartArea As ChartArea_
	Type Legend As Legend_
	Type ErrorBars As ErrorBars_
	Type DataTable As DataTable_
	Type Phonetic As Phonetic_
	Type Shape As Shape_
	Type Shapes As Shapes_
	Type ShapeRange As ShapeRange_
	Type GroupShapes As GroupShapes_
	Type TextFrame As TextFrame_
	Type ConnectorFormat As ConnectorFormat_
	Type FreeformBuilder As FreeformBuilder_
	Type ControlFormat As ControlFormat_
	Type OLEFormat As OLEFormat_
	Type LinkFormat As LinkFormat_
	Type PublishObjects As PublishObjects_
	Type OLEDBError As OLEDBError_
	Type OLEDBErrors As OLEDBErrors_
	Type Phonetics As Phonetics_
	Type PivotLayout As PivotLayout_
	Type DisplayUnitLabel As DisplayUnitLabel_
	Type CellFormat As CellFormat_
	Type UsedObjects As UsedObjects_
	Type CustomProperties As CustomProperties_
	Type CustomProperty As CustomProperty_
	Type CalculatedMembers As CalculatedMembers_
	Type CalculatedMember As CalculatedMember_
	Type Watches As Watches_
	Type Watch As Watch_
	Type PivotCell As PivotCell_
	Type Graphic As Graphic_
	Type AutoRecover As AutoRecover_
	Type ErrorCheckingOptions As ErrorCheckingOptions_
	Type Errors As Errors_
	Type Error_t As Error_t_
	Type SmartTagAction As SmartTagAction_
	Type SmartTagActions As SmartTagActions_
	Type SmartTag As SmartTag_
	Type SmartTags As SmartTags_
	Type SmartTagRecognizer As SmartTagRecognizer_
	Type SmartTagRecognizers As SmartTagRecognizers_
	Type SmartTagOptions As SmartTagOptions_
	Type SpellingOptions As SpellingOptions_
	Type Speech As Speech_
	Type Protection As Protection_
	Type PivotItemList As PivotItemList_
	Type Tab As Tab_
	Type AllowEditRanges As AllowEditRanges_
	Type AllowEditRange As AllowEditRange_
	Type UserAccessList As UserAccessList_
	Type UserAccess As UserAccess_
	Type RTD As RTD_
	Type Diagram As Diagram_
	Type ListObjects As ListObjects_
	Type ListObject As ListObject_
	Type ListColumns As ListColumns_
	Type ListColumn As ListColumn_
	Type ListRows As ListRows_
	Type ListRow As ListRow_
	Type XmlNamespace As XmlNamespace_
	Type XmlNamespaces As XmlNamespaces_
	Type XmlDataBinding As XmlDataBinding_
	Type XmlSchema As XmlSchema_
	Type XmlSchemas As XmlSchemas_
	Type XmlMap As XmlMap_
	Type XmlMaps As XmlMaps_
	Type ListDataFormat As ListDataFormat_
	Type XPath As XPath_
	Type PivotLineCells As PivotLineCells_
	Type PivotLine As PivotLine_
	Type PivotLines As PivotLines_
	Type PivotAxis As PivotAxis_
	Type PivotFilter As PivotFilter_
	Type PivotFilters As PivotFilters_
	Type WorkbookConnection As WorkbookConnection_
	Type Connections As Connections_
	Type WorksheetView As WorksheetView_
	Type ChartView As ChartView_
	Type ModuleView As ModuleView_
	Type DialogSheetView As DialogSheetView_
	Type SheetViews As SheetViews_
	Type OLEDBConnection As OLEDBConnection_
	Type ODBCConnection As ODBCConnection_
	Type Action As Action_
	Type Actions As Actions_
	Type FormatColor As FormatColor_
	Type ConditionValue As ConditionValue_
	Type ColorScale As ColorScale_
	Type ColorScaleCriteria As ColorScaleCriteria_
	Type ColorScaleCriterion As ColorScaleCriterion_
	Type Databar As Databar_
	Type IconSetCondition As IconSetCondition_
	Type IconCriteria As IconCriteria_
	Type IconCriterion As IconCriterion_
	Type Icon As Icon_
	Type IconSet As IconSet_
	Type IconSets As IconSets_
	Type Top10 As Top10_
	Type AboveAverage As AboveAverage_
	Type UniqueValues As UniqueValues_
	Type Ranges As Ranges_
	Type HeaderFooter As HeaderFooter_
	Type Page As Page_
	Type Pages As Pages_
	Type ServerViewableItems As ServerViewableItems_
	Type TableStyleElement As TableStyleElement_
	Type TableStyleElements As TableStyleElements_
	Type TableStyle As TableStyle_
	Type TableStyles As TableStyles_
	Type SortField As SortField_
	Type SortFields As SortFields_
	Type Sort As Sort_
	Type Research As Research_
	Type ColorStop As ColorStop_
	Type ColorStops As ColorStops_
	Type LinearGradient As LinearGradient_
	Type RectangularGradient As RectangularGradient_
	Type MultiThreadedCalculation As MultiThreadedCalculation_
	Type ChartFormat As ChartFormat_
	Type FileExportConverter As FileExportConverter_
	Type FileExportConverters As FileExportConverters_
	Type AddIns2 As AddIns2_
	Type SparklineGroups As SparklineGroups_
	Type SparklineGroup As SparklineGroup_
	Type SparkPoints As SparkPoints_
	Type Sparkline As Sparkline_
	Type SparkAxes As SparkAxes_
	Type SparkHorizontalAxis As SparkHorizontalAxis_
	Type SparkVerticalAxis As SparkVerticalAxis_
	Type SparkColor As SparkColor_
	Type DataBarBorder As DataBarBorder_
	Type NegativeBarFormat As NegativeBarFormat_
	Type ValueChange As ValueChange_
	Type PivotTableChangeList As PivotTableChangeList_
	Type DisplayFormat As DisplayFormat_
	Type SlicerCaches As SlicerCaches_
	Type SlicerCache As SlicerCache_
	Type SlicerCacheLevels As SlicerCacheLevels_
	Type SlicerCacheLevel As SlicerCacheLevel_
	Type Slicers As Slicers_
	Type Slicer As Slicer_
	Type SlicerItem As SlicerItem_
	Type SlicerItems As SlicerItems_
	Type SlicerPivotTables As SlicerPivotTables_
	Type ProtectedViewWindows As ProtectedViewWindows_
	Type ProtectedViewWindow As ProtectedViewWindow_
	Type TableObject As TableObject_
	Type PivotValueCell As PivotValueCell_
	Type QuickAnalysis As QuickAnalysis_
	Type ModelConnection As ModelConnection_
	Type WorksheetDataConnection As WorksheetDataConnection_
	Type TextConnection As TextConnection_
	Type DataFeedConnection As DataFeedConnection_
	Type ModelTableColumn As ModelTableColumn_
	Type ModelTableColumns As ModelTableColumns_
	Type ModelTable As ModelTable_
	Type ModelTables As ModelTables_
	Type ModelRelationship As ModelRelationship_
	Type ModelRelationships As ModelRelationships_
	Type Model As Model_
	Type FullSeriesCollection As FullSeriesCollection_
	Type ChartCategory As ChartCategory_
	Type CategoryCollection As CategoryCollection_
	Type TimelineState As TimelineState_
	Type TimelineViewState As TimelineViewState_
	Type ModelTableNames As ModelTableNames_
	Type ModelTableNameChange As ModelTableNameChange_
	Type ModelTableNameChanges As ModelTableNameChanges_
	Type ModelChanges As ModelChanges_
	Type ModelColumnName As ModelColumnName_
	Type ModelColumnNames As ModelColumnNames_
	Type ModelColumnChange As ModelColumnChange_
	Type ModelColumnChanges As ModelColumnChanges_
	Type ModelMeasureName As ModelMeasureName_
	Type ModelMeasureNames As ModelMeasureNames_
	Type WorkbookQuery As WorkbookQuery_
	Type Queries As Queries_
	Type ModelMeasure As ModelMeasure_
	Type ModelMeasures As ModelMeasures_
	Type ModelFormatGeneral As ModelFormatGeneral_
	Type ModelFormatDate As ModelFormatDate_
	Type ModelFormatDecimalNumber As ModelFormatDecimalNumber_
	Type ModelFormatWholeNumber As ModelFormatWholeNumber_
	Type ModelFormatPercentageNumber As ModelFormatPercentageNumber_
	Type ModelFormatScientificNumber As ModelFormatScientificNumber_
	Type ModelFormatCurrency As ModelFormatCurrency_
	Type ModelFormatBoolean As ModelFormatBoolean_

	Type IFont_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Background (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Background (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Bold (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Bold (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Color (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Color (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ColorIndex (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ColorIndex (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_FontStyle (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_FontStyle (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Italic (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Italic (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_OutlineFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_OutlineFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Size (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Size (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Strikethrough (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Strikethrough (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Subscript (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Subscript (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Superscript (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Superscript (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Underline (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Underline (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ThemeColor (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ThemeColor (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_TintAndShade (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_TintAndShade (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ThemeFont (Byval RHS As XlThemeFont Ptr) As HRESULT
		Declare Abstract Function Let_ThemeFont (Byval RHS As XlThemeFont) As HRESULT
	End Type 'IFont_

	Type IWindow_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Activate (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function ActivateNext (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function ActivatePrevious (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActiveCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActiveChart (Byval RHS As Chart Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActivePane (Byval RHS As Pane Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActiveSheet (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Close (Byval SaveChanges As Variant Ptr, Byval Filename As Variant Ptr, Byval RouteWorkbook As Variant Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_DisplayFormulas (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayFormulas (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayGridlines (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayGridlines (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayHeadings (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayHeadings (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayHorizontalScrollBar (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayHorizontalScrollBar (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayOutline (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayOutline (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get__DisplayRightToLeft (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let__DisplayRightToLeft (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayVerticalScrollBar (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayVerticalScrollBar (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayWorkbookTabs (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayWorkbookTabs (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayZeros (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayZeros (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_EnableResize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableResize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_FreezePanes (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_FreezePanes (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_GridlineColor (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_GridlineColor (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_GridlineColorIndex (Byval RHS As XlColorIndex Ptr) As HRESULT
		Declare Abstract Function Let_GridlineColorIndex (Byval RHS As XlColorIndex) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function LargeScroll (Byval Down As Variant Ptr, Byval Up As Variant Ptr, Byval ToRight As Variant Ptr, Byval ToLeft As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function NewWindow (Byval RHS As Window Ptr Ptr) As HRESULT
		Declare Abstract Function Get_OnWindow (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnWindow (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Panes (Byval RHS As Panes Ptr Ptr) As HRESULT
		Declare Abstract Function _PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function PrintPreview (Byval EnableChanges As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RangeSelection (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ScrollColumn (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ScrollColumn (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_ScrollRow (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ScrollRow (Byval RHS As Long) As HRESULT
		Declare Abstract Function ScrollWorkbookTabs (Byval Sheets As Variant Ptr, Byval Position As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SelectedSheets (Byval RHS As Sheets Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Selection (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function SmallScroll (Byval Down As Variant Ptr, Byval Up As Variant Ptr, Byval ToRight As Variant Ptr, Byval ToLeft As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Split (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Split (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SplitColumn (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_SplitColumn (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_SplitHorizontal (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_SplitHorizontal (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_SplitRow (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_SplitRow (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_SplitVertical (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_SplitVertical (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TabRatio (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_TabRatio (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As XlWindowType Ptr) As HRESULT
		Declare Abstract Function Get_UsableHeight (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_UsableWidth (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_VisibleRange (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_WindowNumber (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_WindowState (Byval RHS As XlWindowState Ptr) As HRESULT
		Declare Abstract Function Let_WindowState (Byval RHS As XlWindowState) As HRESULT
		Declare Abstract Function Get_Zoom (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Zoom (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_View (Byval RHS As XlWindowView Ptr) As HRESULT
		Declare Abstract Function Let_View (Byval RHS As XlWindowView) As HRESULT
		Declare Abstract Function Get_DisplayRightToLeft (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayRightToLeft (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function PointsToScreenPixelsX (Byval Points As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function PointsToScreenPixelsY (Byval Points As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function RangeFromPoint (Byval x As Long, Byval y As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function ScrollIntoView (Byval Left As Long, Byval Top As Long, Byval Width As Long, Byval Height As Long, Byval Start As Variant Ptr) As HRESULT
		Declare Abstract Function Get_SheetViews (Byval RHS As SheetViews Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActiveSheetView (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DisplayRuler (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayRuler (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AutoFilterDateGrouping (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoFilterDateGrouping (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayWhitespace (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayWhitespace (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Hwnd (Byval RHS As Long Ptr) As HRESULT
	End Type 'IWindow_

	Type IWindows_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Arrange (Byval ArrangeStyle As XlArrangeStyle, Byval ActiveWorkbook As Variant Ptr, Byval SyncHorizontal As Variant Ptr, Byval SyncVertical As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As Window Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As Window Ptr Ptr) As HRESULT
		Declare Abstract Function CompareSideBySideWith (Byval WindowName As Variant Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function BreakSideBySide (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_SyncScrollingSideBySide (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SyncScrollingSideBySide (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function ResetPositionsSideBySide () As HRESULT
	End Type 'IWindows_

	Type IAppEvents_ Extends CAIDispatch
		Declare Abstract Function NewWorkbook (Byval Wb As Workbook Ptr) As HRESULT
		Declare Abstract Function SheetSelectionChange (Byval Sh As IDispatch Ptr, Byval Target As Range Ptr) As HRESULT
		Declare Abstract Function SheetBeforeDoubleClick (Byval Sh As IDispatch Ptr, Byval Target As Range Ptr, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function SheetBeforeRightClick (Byval Sh As IDispatch Ptr, Byval Target As Range Ptr, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function SheetActivate (Byval Sh As IDispatch Ptr) As HRESULT
		Declare Abstract Function SheetDeactivate (Byval Sh As IDispatch Ptr) As HRESULT
		Declare Abstract Function SheetCalculate (Byval Sh As IDispatch Ptr) As HRESULT
		Declare Abstract Function SheetChange (Byval Sh As IDispatch Ptr, Byval Target As Range Ptr) As HRESULT
		Declare Abstract Function WorkbookOpen (Byval Wb As Workbook Ptr) As HRESULT
		Declare Abstract Function WorkbookActivate (Byval Wb As Workbook Ptr) As HRESULT
		Declare Abstract Function WorkbookDeactivate (Byval Wb As Workbook Ptr) As HRESULT
		Declare Abstract Function WorkbookBeforeClose (Byval Wb As Workbook Ptr, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function WorkbookBeforeSave (Byval Wb As Workbook Ptr, Byval SaveAsUI As VARIANT_BOOL, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function WorkbookBeforePrint (Byval Wb As Workbook Ptr, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function WorkbookNewSheet (Byval Wb As Workbook Ptr, Byval Sh As IDispatch Ptr) As HRESULT
		Declare Abstract Function WorkbookAddinInstall (Byval Wb As Workbook Ptr) As HRESULT
		Declare Abstract Function WorkbookAddinUninstall (Byval Wb As Workbook Ptr) As HRESULT
		Declare Abstract Function WindowResize (Byval Wb As Workbook Ptr, Byval Wn As Window Ptr) As HRESULT
		Declare Abstract Function WindowActivate (Byval Wb As Workbook Ptr, Byval Wn As Window Ptr) As HRESULT
		Declare Abstract Function WindowDeactivate (Byval Wb As Workbook Ptr, Byval Wn As Window Ptr) As HRESULT
		Declare Abstract Function SheetFollowHyperlink (Byval Sh As IDispatch Ptr, Byval Target As Hyperlink Ptr) As HRESULT
		Declare Abstract Function SheetPivotTableUpdate (Byval Sh As IDispatch Ptr, Byval Target As PivotTable Ptr) As HRESULT
		Declare Abstract Function WorkbookPivotTableCloseConnection (Byval Wb As Workbook Ptr, Byval Target As PivotTable Ptr) As HRESULT
		Declare Abstract Function WorkbookPivotTableOpenConnection (Byval Wb As Workbook Ptr, Byval Target As PivotTable Ptr) As HRESULT
		Declare Abstract Function WorkbookSync (Byval Wb As Workbook Ptr, Byval SyncEventType As Office.MsoSyncEventType) As HRESULT
		Declare Abstract Function WorkbookBeforeXmlImport (Byval Wb As Workbook Ptr, Byval Map As XmlMap Ptr, Byval Url As BSTR, Byval IsRefresh As VARIANT_BOOL, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function WorkbookAfterXmlImport (Byval Wb As Workbook Ptr, Byval Map As XmlMap Ptr, Byval IsRefresh As VARIANT_BOOL, Byval Result As XlXmlImportResult) As HRESULT
		Declare Abstract Function WorkbookBeforeXmlExport (Byval Wb As Workbook Ptr, Byval Map As XmlMap Ptr, Byval Url As BSTR, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function WorkbookAfterXmlExport (Byval Wb As Workbook Ptr, Byval Map As XmlMap Ptr, Byval Url As BSTR, Byval Result As XlXmlExportResult) As HRESULT
		Declare Abstract Function WorkbookRowsetComplete (Byval Wb As Workbook Ptr, Byval Description As BSTR, Byval Sheet As BSTR, Byval Success As VARIANT_BOOL) As HRESULT
		Declare Abstract Function AfterCalculate () As HRESULT
		Declare Abstract Function SheetPivotTableAfterValueChange (Byval Sh As IDispatch Ptr, Byval TargetPivotTable As PivotTable Ptr, Byval TargetRange As Range Ptr) As HRESULT
		Declare Abstract Function SheetPivotTableBeforeAllocateChanges (Byval Sh As IDispatch Ptr, Byval TargetPivotTable As PivotTable Ptr, Byval ValueChangeStart As Long, Byval ValueChangeEnd As Long, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function SheetPivotTableBeforeCommitChanges (Byval Sh As IDispatch Ptr, Byval TargetPivotTable As PivotTable Ptr, Byval ValueChangeStart As Long, Byval ValueChangeEnd As Long, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function SheetPivotTableBeforeDiscardChanges (Byval Sh As IDispatch Ptr, Byval TargetPivotTable As PivotTable Ptr, Byval ValueChangeStart As Long, Byval ValueChangeEnd As Long) As HRESULT
		Declare Abstract Function ProtectedViewWindowOpen (Byval Pvw As ProtectedViewWindow Ptr) As HRESULT
		Declare Abstract Function ProtectedViewWindowBeforeEdit (Byval Pvw As ProtectedViewWindow Ptr, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function ProtectedViewWindowBeforeClose (Byval Pvw As ProtectedViewWindow Ptr, Byval Reason As XlProtectedViewCloseReason, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function ProtectedViewWindowResize (Byval Pvw As ProtectedViewWindow Ptr) As HRESULT
		Declare Abstract Function ProtectedViewWindowActivate (Byval Pvw As ProtectedViewWindow Ptr) As HRESULT
		Declare Abstract Function ProtectedViewWindowDeactivate (Byval Pvw As ProtectedViewWindow Ptr) As HRESULT
		Declare Abstract Function WorkbookAfterSave (Byval Wb As Workbook Ptr, Byval Success As VARIANT_BOOL) As HRESULT
		Declare Abstract Function WorkbookNewChart (Byval Wb As Workbook Ptr, Byval Ch As Chart Ptr) As HRESULT
		Declare Abstract Function SheetLensGalleryRenderComplete (Byval Sh As IDispatch Ptr) As HRESULT
		Declare Abstract Function SheetTableUpdate (Byval Sh As IDispatch Ptr, Byval Target As TableObject Ptr) As HRESULT
		Declare Abstract Function WorkbookModelChange (Byval Wb As Workbook Ptr, Byval Changes As ModelChanges Ptr) As HRESULT
		Declare Abstract Function SheetBeforeDelete (Byval Sh As IDispatch Ptr) As HRESULT
	End Type 'IAppEvents_

	Type IWorksheetFunction_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _WSFunction (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Count (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function IsNA (Byval Arg1 As Variant Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function IsError (Byval Arg1 As Variant Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Sum (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Average (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Min_ (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Max_ (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Npv (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function StDev (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Dollar (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Fixed (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Pi (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Ln (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Log10 (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Round (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Lookup (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Index (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Rept (Byval Arg1 As BSTR, Byval Arg2 As Double, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function And_ (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Or_ (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function DCount (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function DSum (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function DAverage (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function DMin (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function DMax (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function DStDev (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Var_ (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function DVar (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Text (Byval Arg1 As Variant Ptr, Byval Arg2 As BSTR, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function LinEst (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Trend (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function LogEst (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Growth (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Pv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Fv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function NPer (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Pmt (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Rate (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function MIrr (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Irr (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Match (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Weekday (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Search (Byval Arg1 As BSTR, Byval Arg2 As BSTR, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Transpose (Byval Arg1 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Atan2 (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Asin (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Acos (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Choose (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function HLookup (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function VLookup (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Log (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Proper (Byval Arg1 As BSTR, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Trim (Byval Arg1 As BSTR, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Replace (Byval Arg1 As BSTR, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As BSTR, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Substitute (Byval Arg1 As BSTR, Byval Arg2 As BSTR, Byval Arg3 As BSTR, Byval Arg4 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Find (Byval Arg1 As BSTR, Byval Arg2 As BSTR, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function IsErr (Byval Arg1 As Variant Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function IsText (Byval Arg1 As Variant Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function IsNumber (Byval Arg1 As Variant Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Sln (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Syd (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Ddb (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Double, Byval Arg5 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Clean (Byval Arg1 As BSTR, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function MDeterm (Byval Arg1 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function MInverse (Byval Arg1 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function MMult (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Ipmt (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Double, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Ppmt (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Double, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function CountA (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Product (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Fact (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function DProduct (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function IsNonText (Byval Arg1 As Variant Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function StDevP (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function VarP (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function DStDevP (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function DVarP (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function IsLogical (Byval Arg1 As Variant Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function DCountA (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function USDollar (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function FindB (Byval Arg1 As BSTR, Byval Arg2 As BSTR, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function SearchB (Byval Arg1 As BSTR, Byval Arg2 As BSTR, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function ReplaceB (Byval Arg1 As BSTR, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As BSTR, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function RoundUp (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function RoundDown (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Rank (Byval Arg1 As Double, Byval Arg2 As Range Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Days360 (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Vdb (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Double, Byval Arg5 As Double, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Median (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function SumProduct (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Sinh (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Cosh (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Tanh (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Asinh (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Acosh (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Atanh (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function DGet (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Db (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Double, Byval Arg5 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Frequency (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function AveDev (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function BetaDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function GammaLn (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function BetaInv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function BinomDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function ChiDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function ChiInv (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Combin (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Confidence (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function CritBinom (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Even (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function ExponDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As VARIANT_BOOL, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function FDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function FInv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Fisher (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function FisherInv (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Floor (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function GammaDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function GammaInv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Ceiling (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function HypGeomDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function LogNormDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function LogInv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function NegBinomDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function NormDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function NormSDist (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function NormInv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function NormSInv (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Standardize (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Odd (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Permut (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Poisson (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As VARIANT_BOOL, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function TDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Weibull (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function SumXMY2 (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function SumX2MY2 (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function SumX2PY2 (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function ChiTest (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Correl (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Covar (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Forecast (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function FTest (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Intercept (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Pearson (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function RSq (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function StEyx (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Slope (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function TTest (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Double, Byval Arg4 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Prob (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Double, Byval Arg4 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function DevSq (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function GeoMean (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function HarMean (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function SumSq (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Kurt (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Skew (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function ZTest (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Large (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Small (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Quartile (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Percentile (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function PercentRank (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Mode (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function TrimMean (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function TInv (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Power (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Radians (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Degrees (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Subtotal (Byval Arg1 As Double, Byval Arg2 As Range Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function SumIf (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function CountIf (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function CountBlank (Byval Arg1 As Range Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Ispmt (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Roman (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Asc (Byval Arg1 As BSTR, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Dbcs (Byval Arg1 As BSTR, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Phonetic (Byval Arg1 As Range Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function BahtText (Byval Arg1 As Double, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ThaiDayOfWeek (Byval Arg1 As Double, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ThaiDigit (Byval Arg1 As BSTR, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ThaiMonthOfYear (Byval Arg1 As Double, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ThaiNumSound (Byval Arg1 As Double, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ThaiNumString (Byval Arg1 As Double, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ThaiStringLength (Byval Arg1 As BSTR, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function IsThaiDigit (Byval Arg1 As BSTR, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function RoundBahtDown (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function RoundBahtUp (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function ThaiYear (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function RTD (Byval progID As Variant Ptr, Byval server As Variant Ptr, Byval topic1 As Variant Ptr, Byval topic2 As Variant Ptr, Byval topic3 As Variant Ptr, Byval topic4 As Variant Ptr, Byval topic5 As Variant Ptr, Byval topic6 As Variant Ptr, Byval topic7 As Variant Ptr, Byval topic8 As Variant Ptr, Byval topic9 As Variant Ptr, Byval topic10 As Variant Ptr, Byval topic11 As Variant Ptr, Byval topic12 As Variant Ptr, Byval topic13 As Variant Ptr, Byval topic14 As Variant Ptr, Byval topic15 As Variant Ptr, Byval topic16 As Variant Ptr, Byval topic17 As Variant Ptr, Byval topic18 As Variant Ptr, Byval topic19 As Variant Ptr, Byval topic20 As Variant Ptr, Byval topic21 As Variant Ptr, Byval topic22 As Variant Ptr, Byval topic23 As Variant Ptr, Byval topic24 As Variant Ptr, Byval topic25 As Variant Ptr, Byval topic26 As Variant Ptr, Byval topic27 As Variant Ptr, Byval topic28 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Hex2Bin (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Hex2Dec (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Hex2Oct (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Dec2Bin (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Dec2Hex (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Dec2Oct (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Oct2Bin (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Oct2Hex (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Oct2Dec (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Bin2Dec (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Bin2Oct (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Bin2Hex (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImSub (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImDiv (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImPower (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImAbs (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImSqrt (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImLn (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImLog2 (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImLog10 (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImSin (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImCos (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImExp (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImArgument (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImConjugate (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Imaginary (Byval Arg1 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function ImReal (Byval Arg1 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Complex (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImSum (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImProduct (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function SeriesSum (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function FactDouble (Byval Arg1 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function SqrtPi (Byval Arg1 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Quotient (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Delta (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function GeStep (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function IsEven (Byval Arg1 As Variant Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function IsOdd (Byval Arg1 As Variant Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function MRound (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Erf (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function ErfC (Byval Arg1 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function BesselJ (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function BesselK (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function BesselY (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function BesselI (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Xirr (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Xnpv (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function PriceMat (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function YieldMat (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function IntRate (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Received (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Disc (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function PriceDisc (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function YieldDisc (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function TBillEq (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function TBillPrice (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function TBillYield (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Price (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function DollarDe (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function DollarFr (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Nominal (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Effect (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function CumPrinc (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function CumIPmt (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function EDate (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function EoMonth (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function YearFrac (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function CoupDayBs (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function CoupDays (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function CoupDaysNc (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function CoupNcd (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function CoupNum (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function CoupPcd (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Duration (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function MDuration (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function OddLPrice (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function OddLYield (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function OddFPrice (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function OddFYield (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function RandBetween (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function WeekNum (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function AmorDegrc (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function AmorLinc (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Convert (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function AccrInt (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function AccrIntM (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function WorkDay (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function NetworkDays (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Gcd (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function MultiNomial (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Lcm (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function FVSchedule (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function SumIfs (Byval Arg1 As Range Ptr, Byval Arg2 As Range Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function CountIfs (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function AverageIf (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function AverageIfs (Byval Arg1 As Range Ptr, Byval Arg2 As Range Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function IfError (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Aggregate (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Range Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Confidence_Norm (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Confidence_T (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function ChiSq_Test (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function F_Test (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Covariance_P (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Covariance_S (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Expon_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As VARIANT_BOOL, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Gamma_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Gamma_Inv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Mode_Mult (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Mode_Sngl (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Norm_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Norm_Inv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Percentile_Exc (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Percentile_Inc (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function PercentRank_Exc (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function PercentRank_Inc (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Poisson_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As VARIANT_BOOL, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Quartile_Exc (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Quartile_Inc (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Rank_Avg (Byval Arg1 As Double, Byval Arg2 As Range Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Rank_Eq (Byval Arg1 As Double, Byval Arg2 As Range Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function StDev_S (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function StDev_P (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function T_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As VARIANT_BOOL, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function T_Dist_2T (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function T_Dist_RT (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function T_Inv (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function T_Inv_2T (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Var_S (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Var_P (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Weibull_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function NetworkDays_Intl (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function WorkDay_Intl (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function ISO_Ceiling (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Dummy21 (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Dummy19 (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Beta_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Beta_Inv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function ChiSq_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As VARIANT_BOOL, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function ChiSq_Dist_RT (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function ChiSq_Inv (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function ChiSq_Inv_RT (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function F_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function F_Dist_RT (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function F_Inv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function F_Inv_RT (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function HypGeom_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Double, Byval Arg5 As VARIANT_BOOL, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function LogNorm_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function LogNorm_Inv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function NegBinom_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Norm_S_Dist (Byval Arg1 As Double, Byval Arg2 As VARIANT_BOOL, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Norm_S_Inv (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function T_Test (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Double, Byval Arg4 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Z_Test (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Binom_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Binom_Inv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Erf_Precise (Byval Arg1 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function ErfC_Precise (Byval Arg1 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function GammaLn_Precise (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Ceiling_Precise (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Floor_Precise (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Acot (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Acoth (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Cot (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Coth (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Csc (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Csch (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Sec (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Sech (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function ImCot (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImTan (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImCsc (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImCsch (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImSec (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImSech (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Bitand (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Bitor (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Bitxor (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Bitlshift (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Bitrshift (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Xor_ (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Combina (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Permutationa (Byval Arg1 As Double, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function PDuration (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Base_ (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Decimal (Byval Arg1 As BSTR, Byval Arg2 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Days (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Binom_Dist_Range (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Gamma (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Gauss (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Phi (Byval Arg1 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Skew_p (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Rri (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Unichar (Byval Arg1 As Double, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Unicode (Byval Arg1 As BSTR, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Munit (Byval Arg1 As Double, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Arabic (Byval Arg1 As BSTR, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function IsoWeekNum (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function NumberValue (Byval Arg1 As BSTR, Byval Arg2 As BSTR, Byval Arg3 As BSTR, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function IsFormula (Byval Arg1 As Range Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function IfNa (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Ceiling_Math (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Floor_Math (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function ImSinh (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ImCosh (Byval Arg1 As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function FilterXML (Byval Arg1 As BSTR, Byval Arg2 As BSTR, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function WebService (Byval Arg1 As BSTR, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function EncodeURL (Byval Arg1 As BSTR, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Forecast_ETS (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Forecast_ETS_ConfInt (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Forecast_ETS_Seasonality (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Forecast_Linear (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Forecast_ETS_STAT (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Double, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval RHS As Double Ptr) As HRESULT
	End Type 'IWorksheetFunction_

	Type IRange_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Activate (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AddIndent (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AddIndent (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Address (Byval RowAbsolute As Variant Ptr, Byval ColumnAbsolute As Variant Ptr, Byval ReferenceStyle As XlReferenceStyle, Byval External As Variant Ptr, Byval RelativeTo As Variant Ptr, Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_AddressLocal (Byval RowAbsolute As Variant Ptr, Byval ColumnAbsolute As Variant Ptr, Byval ReferenceStyle As XlReferenceStyle, Byval External As Variant Ptr, Byval RelativeTo As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function AdvancedFilter (Byval Action As XlFilterAction, Byval CriteriaRange As Variant Ptr, Byval CopyToRange As Variant Ptr, Byval Unique As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function ApplyNames (Byval Names As Variant Ptr, Byval IgnoreRelativeAbsolute As Variant Ptr, Byval UseRowColumnNames As Variant Ptr, Byval OmitColumn As Variant Ptr, Byval OmitRow As Variant Ptr, Byval Order As XlApplyNamesOrder, Byval AppendLast As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function ApplyOutlineStyles (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Areas (Byval RHS As Areas Ptr Ptr) As HRESULT
		Declare Abstract Function AutoComplete (Byval String_v As BSTR, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function AutoFill (Byval Destination As Range Ptr, Byval Type_v As XlAutoFillType, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function AutoFilter (Byval Field As Variant Ptr, Byval Criteria1 As Variant Ptr, Byval Operator_v As XlAutoFilterOperator, Byval Criteria2 As Variant Ptr, Byval VisibleDropDown As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function AutoFit (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function AutoFormat (Byval Format As XlRangeAutoFormat, Byval Number As Variant Ptr, Byval Font As Variant Ptr, Byval Alignment As Variant Ptr, Byval Border As Variant Ptr, Byval Pattern As Variant Ptr, Byval Width As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function AutoOutline (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function _BorderAround (Byval LineStyle As Variant Ptr, Byval Weight As XlBorderWeight, Byval ColorIndex As XlColorIndex, Byval Color As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Borders (Byval RHS As Borders Ptr Ptr) As HRESULT
		Declare Abstract Function Calculate (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Cells (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Clear (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function ClearContents (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function ClearFormats (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function ClearNotes (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function ClearOutline (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Column (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function ColumnDifferences (Byval Comparison As Variant Ptr, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Columns (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ColumnWidth (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ColumnWidth (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Consolidate (Byval Sources As Variant Ptr, Byval Function_v As Variant Ptr, Byval TopRow As Variant Ptr, Byval LeftColumn As Variant Ptr, Byval CreateLinks As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval Destination As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyFromRecordset (Byval Data As IUnknown Ptr, Byval MaxRows As Variant Ptr, Byval MaxColumns As Variant Ptr, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function CreateNames (Byval Top As Variant Ptr, Byval Left As Variant Ptr, Byval Bottom As Variant Ptr, Byval Right As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CreatePublisher (Byval Edition As Variant Ptr, Byval Appearance As XlPictureAppearance, Byval ContainsPICT As Variant Ptr, Byval ContainsBIFF As Variant Ptr, Byval ContainsRTF As Variant Ptr, Byval ContainsVALU As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CurrentArray (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CurrentRegion (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval Destination As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function DataSeries (Byval Rowcol As Variant Ptr, Byval Type_v As XlDataSeriesType, Byval Date As XlDataSeriesDate, Byval Step_v As Variant Ptr, Byval Stop As Variant Ptr, Byval Trend As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RowIndex As Variant Ptr, Byval ColumnIndex As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RowIndex As Variant Ptr, Byval ColumnIndex As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval Shift As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Dependents (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function DialogBox_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DirectDependents (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DirectPrecedents (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function EditionOptions (Byval Type_v As XlEditionType, Byval Option As XlEditionOptionsOption, Byval Name As Variant Ptr, Byval Reference As Variant Ptr, Byval Appearance As XlPictureAppearance, Byval ChartSize As XlPictureAppearance, Byval Format As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_End (Byval Direction As XlDirection, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_EntireColumn (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_EntireRow (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function FillDown (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function FillLeft (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function FillRight (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function FillUp (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Find (Byval What As Variant Ptr, Byval After As Variant Ptr, Byval LookIn As Variant Ptr, Byval LookAt As Variant Ptr, Byval SearchOrder As Variant Ptr, Byval SearchDirection As XlSearchDirection, Byval MatchCase As Variant Ptr, Byval MatchByte As Variant Ptr, Byval SearchFormat As Variant Ptr, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function FindNext (Byval After As Variant Ptr, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function FindPrevious (Byval After As Variant Ptr, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval lcid As Long, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_FormulaArray (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_FormulaArray (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_FormulaLabel (Byval RHS As XlFormulaLabel Ptr) As HRESULT
		Declare Abstract Function Let_FormulaLabel (Byval RHS As XlFormulaLabel) As HRESULT
		Declare Abstract Function Get_FormulaHidden (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_FormulaHidden (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_FormulaLocal (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_FormulaLocal (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_FormulaR1C1 (Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_FormulaR1C1 (Byval lcid As Long, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_FormulaR1C1Local (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_FormulaR1C1Local (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function FunctionWizard (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function GoalSeek (Byval Goal As Variant Ptr, Byval ChangingCell As Range Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Group (Byval Start As Variant Ptr, Byval End_v As Variant Ptr, Byval By As Variant Ptr, Byval Periods As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HasArray (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HasFormula (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Hidden (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Hidden (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_IndentLevel (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_IndentLevel (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function InsertIndent (Byval InsertAmount As Long) As HRESULT
		Declare Abstract Function Insert (Byval Shift As Variant Ptr, Byval CopyOrigin As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval RowIndex As Variant Ptr, Byval ColumnIndex As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Item (Byval RowIndex As Variant Ptr, Byval ColumnIndex As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Justify (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ListHeaderRows (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function ListNames (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LocationInTable (Byval RHS As XlLocationInTable Ptr) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Merge (Byval Across As Variant Ptr) As HRESULT
		Declare Abstract Function UnMerge () As HRESULT
		Declare Abstract Function Get_MergeArea (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MergeCells (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_MergeCells (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function NavigateArrow (Byval TowardPrecedent As Variant Ptr, Byval ArrowNumber As Variant Ptr, Byval LinkNumber As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Next (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function NoteText (Byval Text As Variant Ptr, Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_NumberFormat (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_NumberFormat (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_NumberFormatLocal (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_NumberFormatLocal (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Offset (Byval RowOffset As Variant Ptr, Byval ColumnOffset As Variant Ptr, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_OutlineLevel (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_OutlineLevel (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PageBreak (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_PageBreak (Byval RHS As Long) As HRESULT
		Declare Abstract Function Parse (Byval ParseLine As Variant Ptr, Byval Destination As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function _PasteSpecial (Byval Paste As XlPasteType, Byval Operation As XlPasteSpecialOperation, Byval SkipBlanks As Variant Ptr, Byval Transpose As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PivotField (Byval RHS As PivotField Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PivotItem (Byval RHS As PivotItem Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PivotTable (Byval RHS As PivotTable Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Precedents (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PrefixCharacter (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Previous (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function __PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function PrintPreview (Byval EnableChanges As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_QueryTable (Byval RHS As QueryTable Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Range (Byval Cell1 As Variant Ptr, Byval Cell2 As Variant Ptr, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function RemoveSubtotal (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Replace (Byval What As Variant Ptr, Byval Replacement As Variant Ptr, Byval LookAt As Variant Ptr, Byval SearchOrder As Variant Ptr, Byval MatchCase As Variant Ptr, Byval MatchByte As Variant Ptr, Byval SearchFormat As Variant Ptr, Byval ReplaceFormat As Variant Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_Resize (Byval RowSize As Variant Ptr, Byval ColumnSize As Variant Ptr, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Row (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function RowDifferences (Byval Comparison As Variant Ptr, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RowHeight (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_RowHeight (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Rows (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Run (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Show (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function ShowDependents (Byval Remove As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ShowDetail (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ShowDetail (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function ShowErrors (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function ShowPrecedents (Byval Remove As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ShrinkToFit (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ShrinkToFit (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Sort (Byval Key1 As Variant Ptr, Byval Order1 As XlSortOrder, Byval Key2 As Variant Ptr, Byval Type_v As Variant Ptr, Byval Order2 As XlSortOrder, Byval Key3 As Variant Ptr, Byval Order3 As XlSortOrder, Byval Header As XlYesNoGuess, Byval OrderCustom As Variant Ptr, Byval MatchCase As Variant Ptr, Byval Orientation As XlSortOrientation, Byval SortMethod As XlSortMethod, Byval DataOption1 As XlSortDataOption, Byval DataOption2 As XlSortDataOption, Byval DataOption3 As XlSortDataOption, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SortSpecial (Byval SortMethod As XlSortMethod, Byval Key1 As Variant Ptr, Byval Order1 As XlSortOrder, Byval Type_v As Variant Ptr, Byval Key2 As Variant Ptr, Byval Order2 As XlSortOrder, Byval Key3 As Variant Ptr, Byval Order3 As XlSortOrder, Byval Header As XlYesNoGuess, Byval OrderCustom As Variant Ptr, Byval MatchCase As Variant Ptr, Byval Orientation As XlSortOrientation, Byval DataOption1 As XlSortDataOption, Byval DataOption2 As XlSortDataOption, Byval DataOption3 As XlSortDataOption, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SoundNote (Byval RHS As SoundNote Ptr Ptr) As HRESULT
		Declare Abstract Function SpecialCells (Byval Type_v As XlCellType, Byval Value As Variant Ptr, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Style (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Style (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function SubscribeTo (Byval Edition As BSTR, Byval Format As XlSubscribeToFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Subtotal (Byval GroupBy As Long, Byval Function_v As XlConsolidationFunction, Byval TotalList As Variant Ptr, Byval Replace_v As Variant Ptr, Byval PageBreaks As Variant Ptr, Byval SummaryBelowData As XlSummaryRow, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Summary (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Table (Byval RowInput As Variant Ptr, Byval ColumnInput As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function TextToColumns (Byval Destination As Variant Ptr, Byval DataType As XlTextParsingType, Byval TextQualifier As XlTextQualifier, Byval ConsecutiveDelimiter As Variant Ptr, Byval Tab As Variant Ptr, Byval Semicolon As Variant Ptr, Byval Comma As Variant Ptr, Byval Space As Variant Ptr, Byval Other As Variant Ptr, Byval OtherChar As Variant Ptr, Byval FieldInfo As Variant Ptr, Byval DecimalSeparator As Variant Ptr, Byval ThousandsSeparator As Variant Ptr, Byval TrailingMinusNumbers As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Ungroup (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_UseStandardHeight (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_UseStandardHeight (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_UseStandardWidth (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_UseStandardWidth (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Validation (Byval RHS As Validation Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RangeValueDataType As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RangeValueDataType As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Value2 (Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Value2 (Byval lcid As Long, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Worksheet (Byval RHS As Worksheet Ptr Ptr) As HRESULT
		Declare Abstract Function Get_WrapText (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_WrapText (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function AddComment (Byval Text As Variant Ptr, Byval RHS As Comment Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Comment (Byval RHS As Comment Ptr Ptr) As HRESULT
		Declare Abstract Function ClearComments () As HRESULT
		Declare Abstract Function Get_Phonetic (Byval RHS As Phonetic Ptr Ptr) As HRESULT
		Declare Abstract Function Get_FormatConditions (Byval RHS As FormatConditions Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Hyperlinks (Byval RHS As Hyperlinks Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Phonetics (Byval RHS As Phonetics Ptr Ptr) As HRESULT
		Declare Abstract Function SetPhonetic () As HRESULT
		Declare Abstract Function Get_ID (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ID (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function _PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PivotCell (Byval RHS As PivotCell Ptr Ptr) As HRESULT
		Declare Abstract Function Dirty () As HRESULT
		Declare Abstract Function Get_Errors (Byval RHS As Errors Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SmartTags (Byval RHS As SmartTags Ptr Ptr) As HRESULT
		Declare Abstract Function Speak (Byval SpeakDirection As Variant Ptr, Byval SpeakFormulas As Variant Ptr) As HRESULT
		Declare Abstract Function PasteSpecial (Byval Paste As XlPasteType, Byval Operation As XlPasteSpecialOperation, Byval SkipBlanks As Variant Ptr, Byval Transpose As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AllowEdit (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ListObject (Byval RHS As ListObject Ptr Ptr) As HRESULT
		Declare Abstract Function Get_XPath (Byval RHS As XPath Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ServerActions (Byval RHS As Actions Ptr Ptr) As HRESULT
		Declare Abstract Function RemoveDuplicates (Byval Columns As Variant Ptr, Byval Header As XlYesNoGuess) As HRESULT
		Declare Abstract Function PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MDX (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function ExportAsFixedFormat (Byval Type_v As XlFixedFormatType, Byval Filename As Variant Ptr, Byval Quality As Variant Ptr, Byval IncludeDocProperties As Variant Ptr, Byval IgnorePrintAreas As Variant Ptr, Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval OpenAfterPublish As Variant Ptr, Byval FixedFormatExtClassPtr As Variant Ptr) As HRESULT
		Declare Abstract Function Get_CountLarge (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CalculateRowMajorOrder (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SparklineGroups (Byval RHS As SparklineGroups Ptr Ptr) As HRESULT
		Declare Abstract Function ClearHyperlinks () As HRESULT
		Declare Abstract Function Get_DisplayFormat (Byval RHS As DisplayFormat Ptr Ptr) As HRESULT
		Declare Abstract Function BorderAround (Byval LineStyle As Variant Ptr, Byval Weight As XlBorderWeight, Byval ColorIndex As XlColorIndex, Byval Color As Variant Ptr, Byval ThemeColor As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function AllocateChanges () As HRESULT
		Declare Abstract Function DiscardChanges () As HRESULT
		Declare Abstract Function FlashFill () As HRESULT
	End Type 'IRange_

	Type IChartEvents_ Extends CAIDispatch
		Declare Abstract Function Activate () As HRESULT
		Declare Abstract Function Deactivate () As HRESULT
		Declare Abstract Function Resize () As HRESULT
		Declare Abstract Function MouseDown (Byval Button As Long, Byval Shift As Long, Byval x As Long, Byval y As Long) As HRESULT
		Declare Abstract Function MouseUp (Byval Button As Long, Byval Shift As Long, Byval x As Long, Byval y As Long) As HRESULT
		Declare Abstract Function MouseMove (Byval Button As Long, Byval Shift As Long, Byval x As Long, Byval y As Long) As HRESULT
		Declare Abstract Function BeforeRightClick (Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function DragPlot () As HRESULT
		Declare Abstract Function DragOver () As HRESULT
		Declare Abstract Function BeforeDoubleClick (Byval ElementID As Long, Byval Arg1 As Long, Byval Arg2 As Long, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval ElementID As Long, Byval Arg1 As Long, Byval Arg2 As Long) As HRESULT
		Declare Abstract Function SeriesChange (Byval SeriesIndex As Long, Byval PointIndex As Long) As HRESULT
		Declare Abstract Function Calculate () As HRESULT
	End Type 'IChartEvents_

	Type IVPageBreak_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As Worksheet Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function DragOff (Byval Direction As XlDirection, Byval RegionIndex As Long) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As XlPageBreak Ptr) As HRESULT
		Declare Abstract Function Let_Type (Byval RHS As XlPageBreak) As HRESULT
		Declare Abstract Function Get_Extent (Byval RHS As XlPageBreakExtent Ptr) As HRESULT
		Declare Abstract Function Get_Location (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Set_Location (Byval RHS As Range Ptr) As HRESULT
	End Type 'IVPageBreak_

	Type IHPageBreak_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As Worksheet Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function DragOff (Byval Direction As XlDirection, Byval RegionIndex As Long) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As XlPageBreak Ptr) As HRESULT
		Declare Abstract Function Let_Type (Byval RHS As XlPageBreak) As HRESULT
		Declare Abstract Function Get_Extent (Byval RHS As XlPageBreakExtent Ptr) As HRESULT
		Declare Abstract Function Get_Location (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Set_Location (Byval RHS As Range Ptr) As HRESULT
	End Type 'IHPageBreak_

	Type IHPageBreaks_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Long, Byval RHS As HPageBreak Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Long, Byval RHS As HPageBreak Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Before As IDispatch Ptr, Byval RHS As HPageBreak Ptr Ptr) As HRESULT
	End Type 'IHPageBreaks_

	Type IVPageBreaks_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Long, Byval RHS As VPageBreak Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Long, Byval RHS As VPageBreak Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Before As IDispatch Ptr, Byval RHS As VPageBreak Ptr Ptr) As HRESULT
	End Type 'IVPageBreaks_

	Type IRecentFile_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Path (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Open (Byval RHS As Workbook Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
	End Type 'IRecentFile_

	Type IRecentFiles_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Maximum (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Maximum (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Long, Byval RHS As RecentFile Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Long, Byval RHS As RecentFile Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Name As BSTR, Byval RHS As RecentFile Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IRecentFiles_

	Type IDocEvents_ Extends CAIDispatch
		Declare Abstract Function SelectionChange (Byval Target As Range Ptr) As HRESULT
		Declare Abstract Function BeforeDoubleClick (Byval Target As Range Ptr, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function BeforeRightClick (Byval Target As Range Ptr, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Activate () As HRESULT
		Declare Abstract Function Deactivate () As HRESULT
		Declare Abstract Function Calculate () As HRESULT
		Declare Abstract Function Change (Byval Target As Range Ptr) As HRESULT
		Declare Abstract Function FollowHyperlink (Byval Target As Hyperlink Ptr) As HRESULT
		Declare Abstract Function PivotTableUpdate (Byval Target As PivotTable Ptr) As HRESULT
		Declare Abstract Function PivotTableAfterValueChange (Byval TargetPivotTable As PivotTable Ptr, Byval TargetRange As Range Ptr) As HRESULT
		Declare Abstract Function PivotTableBeforeAllocateChanges (Byval TargetPivotTable As PivotTable Ptr, Byval ValueChangeStart As Long, Byval ValueChangeEnd As Long, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function PivotTableBeforeCommitChanges (Byval TargetPivotTable As PivotTable Ptr, Byval ValueChangeStart As Long, Byval ValueChangeEnd As Long, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function PivotTableBeforeDiscardChanges (Byval TargetPivotTable As PivotTable Ptr, Byval ValueChangeStart As Long, Byval ValueChangeEnd As Long) As HRESULT
		Declare Abstract Function PivotTableChangeSync (Byval Target As PivotTable Ptr) As HRESULT
		Declare Abstract Function LensGalleryRenderComplete () As HRESULT
		Declare Abstract Function TableUpdate (Byval Target As TableObject Ptr) As HRESULT
		Declare Abstract Function BeforeDelete () As HRESULT
	End Type 'IDocEvents_

	Type IStyle_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AddIndent (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AddIndent (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_BuiltIn (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_Borders (Byval RHS As Borders Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_FormulaHidden (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_FormulaHidden (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As XlHAlign Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As XlHAlign) As HRESULT
		Declare Abstract Function Get_IncludeAlignment (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_IncludeAlignment (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_IncludeBorder (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_IncludeBorder (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_IncludeFont (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_IncludeFont (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_IncludeNumber (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_IncludeNumber (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_IncludePatterns (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_IncludePatterns (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_IncludeProtection (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_IncludeProtection (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_IndentLevel (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_IndentLevel (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_MergeCells (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_MergeCells (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_NameLocal (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_NumberFormat (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_NumberFormat (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_NumberFormatLocal (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_NumberFormatLocal (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As XlOrientation Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As XlOrientation) As HRESULT
		Declare Abstract Function Get_ShrinkToFit (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShrinkToFit (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Value (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As XlVAlign Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As XlVAlign) As HRESULT
		Declare Abstract Function Get_WrapText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_WrapText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get__Default (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
	End Type 'IStyle_

	Type IStyles_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Name As BSTR, Byval BasedOn As Variant Ptr, Byval RHS As Style Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As Style Ptr Ptr) As HRESULT
		Declare Abstract Function Merge (Byval Workbook As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As Style Ptr Ptr) As HRESULT
	End Type 'IStyles_

	Type IBorders_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Color (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Color (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ColorIndex (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ColorIndex (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As XlBordersIndex, Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LineStyle (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_LineStyle (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Weight (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Weight (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As XlBordersIndex, Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ThemeColor (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ThemeColor (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_TintAndShade (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_TintAndShade (Byval RHS As Variant Ptr) As HRESULT
	End Type 'IBorders_

	Type IAddIn_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Author (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Comments (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_FullName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Installed (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Installed (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Keywords (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Path (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Subject (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Title (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_progID (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_CLSID (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_IsOpen (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
	End Type 'IAddIn_

	Type IAddIns_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Filename As BSTR, Byval CopyFile As Variant Ptr, Byval RHS As AddIn Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As AddIn Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As AddIn Ptr Ptr) As HRESULT
	End Type 'IAddIns_

	Type IToolbar_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BuiltIn (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Position (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Position (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Protection (Byval RHS As XlToolbarProtection Ptr) As HRESULT
		Declare Abstract Function Let_Protection (Byval RHS As XlToolbarProtection) As HRESULT
		Declare Abstract Function Reset () As HRESULT
		Declare Abstract Function Get_ToolbarButtons (Byval RHS As ToolbarButtons Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Long) As HRESULT
	End Type 'IToolbar_

	Type IToolbars_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Name As Variant Ptr, Byval RHS As Toolbar Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As Toolbar Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As Toolbar Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IToolbars_

	Type IToolbarButton_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BuiltIn (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_BuiltInFace (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_BuiltInFace (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Copy (Byval Toolbar As Toolbar Ptr, Byval Before As Long) As HRESULT
		Declare Abstract Function CopyFace () As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Edit () As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HelpContextID (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_HelpContextID (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_HelpFile (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_HelpFile (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ID (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_IsGap (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Move (Byval Toolbar As Toolbar Ptr, Byval Before As Long) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function PasteFace () As HRESULT
		Declare Abstract Function Get_Pushed (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Pushed (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Reset () As HRESULT
		Declare Abstract Function Get_StatusBar (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_StatusBar (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Long) As HRESULT
	End Type 'IToolbarButton_

	Type IToolbarButtons_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Button As Variant Ptr, Byval Before As Variant Ptr, Byval OnAction As Variant Ptr, Byval Pushed As Variant Ptr, Byval Enabled As Variant Ptr, Byval StatusBar As Variant Ptr, Byval HelpFile As Variant Ptr, Byval HelpContextID As Variant Ptr, Byval RHS As ToolbarButton Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Long, Byval RHS As ToolbarButton Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Long, Byval RHS As ToolbarButton Ptr Ptr) As HRESULT
	End Type 'IToolbarButtons_

	Type IAreas_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Long, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Long, Byval RHS As Range Ptr Ptr) As HRESULT
	End Type 'IAreas_

	Type IWorkbookEvents_ Extends CAIDispatch
		Declare Abstract Function Open () As HRESULT
		Declare Abstract Function Activate () As HRESULT
		Declare Abstract Function Deactivate () As HRESULT
		Declare Abstract Function BeforeClose (Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function BeforeSave (Byval SaveAsUI As VARIANT_BOOL, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function BeforePrint (Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function NewSheet (Byval Sh As IDispatch Ptr) As HRESULT
		Declare Abstract Function AddinInstall () As HRESULT
		Declare Abstract Function AddinUninstall () As HRESULT
		Declare Abstract Function WindowResize (Byval Wn As Window Ptr) As HRESULT
		Declare Abstract Function WindowActivate (Byval Wn As Window Ptr) As HRESULT
		Declare Abstract Function WindowDeactivate (Byval Wn As Window Ptr) As HRESULT
		Declare Abstract Function SheetSelectionChange (Byval Sh As IDispatch Ptr, Byval Target As Range Ptr) As HRESULT
		Declare Abstract Function SheetBeforeDoubleClick (Byval Sh As IDispatch Ptr, Byval Target As Range Ptr, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function SheetBeforeRightClick (Byval Sh As IDispatch Ptr, Byval Target As Range Ptr, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function SheetActivate (Byval Sh As IDispatch Ptr) As HRESULT
		Declare Abstract Function SheetDeactivate (Byval Sh As IDispatch Ptr) As HRESULT
		Declare Abstract Function SheetCalculate (Byval Sh As IDispatch Ptr) As HRESULT
		Declare Abstract Function SheetChange (Byval Sh As IDispatch Ptr, Byval Target As Range Ptr) As HRESULT
		Declare Abstract Function SheetFollowHyperlink (Byval Sh As IDispatch Ptr, Byval Target As Hyperlink Ptr) As HRESULT
		Declare Abstract Function SheetPivotTableUpdate (Byval Sh As IDispatch Ptr, Byval Target As PivotTable Ptr) As HRESULT
		Declare Abstract Function PivotTableCloseConnection (Byval Target As PivotTable Ptr) As HRESULT
		Declare Abstract Function PivotTableOpenConnection (Byval Target As PivotTable Ptr) As HRESULT
		Declare Abstract Function Sync (Byval SyncEventType As Office.MsoSyncEventType) As HRESULT
		Declare Abstract Function BeforeXmlImport (Byval Map As XmlMap Ptr, Byval Url As BSTR, Byval IsRefresh As VARIANT_BOOL, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function AfterXmlImport (Byval Map As XmlMap Ptr, Byval IsRefresh As VARIANT_BOOL, Byval Result As XlXmlImportResult) As HRESULT
		Declare Abstract Function BeforeXmlExport (Byval Map As XmlMap Ptr, Byval Url As BSTR, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function AfterXmlExport (Byval Map As XmlMap Ptr, Byval Url As BSTR, Byval Result As XlXmlExportResult) As HRESULT
		Declare Abstract Function RowsetComplete (Byval Description As BSTR, Byval Sheet As BSTR, Byval Success As VARIANT_BOOL) As HRESULT
		Declare Abstract Function SheetPivotTableAfterValueChange (Byval Sh As IDispatch Ptr, Byval TargetPivotTable As PivotTable Ptr, Byval TargetRange As Range Ptr) As HRESULT
		Declare Abstract Function SheetPivotTableBeforeAllocateChanges (Byval Sh As IDispatch Ptr, Byval TargetPivotTable As PivotTable Ptr, Byval ValueChangeStart As Long, Byval ValueChangeEnd As Long, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function SheetPivotTableBeforeCommitChanges (Byval Sh As IDispatch Ptr, Byval TargetPivotTable As PivotTable Ptr, Byval ValueChangeStart As Long, Byval ValueChangeEnd As Long, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function SheetPivotTableBeforeDiscardChanges (Byval Sh As IDispatch Ptr, Byval TargetPivotTable As PivotTable Ptr, Byval ValueChangeStart As Long, Byval ValueChangeEnd As Long) As HRESULT
		Declare Abstract Function SheetPivotTableChangeSync (Byval Sh As IDispatch Ptr, Byval Target As PivotTable Ptr) As HRESULT
		Declare Abstract Function AfterSave (Byval Success As VARIANT_BOOL) As HRESULT
		Declare Abstract Function NewChart (Byval Ch As Chart Ptr) As HRESULT
		Declare Abstract Function SheetLensGalleryRenderComplete (Byval Sh As IDispatch Ptr) As HRESULT
		Declare Abstract Function SheetTableUpdate (Byval Sh As IDispatch Ptr, Byval Target As TableObject Ptr) As HRESULT
		Declare Abstract Function ModelChange (Byval Changes As ModelChanges Ptr) As HRESULT
		Declare Abstract Function SheetBeforeDelete (Byval Sh As IDispatch Ptr) As HRESULT
	End Type 'IWorkbookEvents_

	Type IMenuBars_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Name As Variant Ptr, Byval RHS As MenuBar Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As MenuBar Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As MenuBar Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IMenuBars_

	Type IMenuBar_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Activate () As HRESULT
		Declare Abstract Function Get_BuiltIn (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Menus (Byval RHS As Menus Ptr Ptr) As HRESULT
		Declare Abstract Function Reset () As HRESULT
	End Type 'IMenuBar_

	Type IMenus_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Caption As BSTR, Byval Before As Variant Ptr, Byval Restore As Variant Ptr, Byval RHS As Menu Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As Menu Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As Menu Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IMenus_

	Type IMenu_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_MenuItems (Byval RHS As MenuItems Ptr Ptr) As HRESULT
	End Type 'IMenu_

	Type IMenuItems_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Caption As BSTR, Byval OnAction As Variant Ptr, Byval ShortcutKey As Variant Ptr, Byval Before As Variant Ptr, Byval Restore As Variant Ptr, Byval StatusBar As Variant Ptr, Byval HelpFile As Variant Ptr, Byval HelpContextID As Variant Ptr, Byval RHS As MenuItem Ptr Ptr) As HRESULT
		Declare Abstract Function AddMenu (Byval Caption As BSTR, Byval Before As Variant Ptr, Byval Restore As Variant Ptr, Byval RHS As Menu Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IMenuItems_

	Type IMenuItem_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Checked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Checked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HelpContextID (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_HelpContextID (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_HelpFile (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_HelpFile (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_StatusBar (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_StatusBar (Byval RHS As BSTR) As HRESULT
	End Type 'IMenuItem_

	Type ICharts_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval Count As Variant Ptr, Byval RHS As Chart Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval lcid As Long) As HRESULT
		Declare Abstract Function _Dummy7 () As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Move (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function __PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function PrintPreview (Byval EnableChanges As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_HPageBreaks (Byval RHS As HPageBreaks Ptr Ptr) As HRESULT
		Declare Abstract Function Get_VPageBreaks (Byval RHS As VPageBreaks Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval lcid As Long, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr) As HRESULT
		Declare Abstract Function Add2 (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval Count As Variant Ptr, Byval NewLayout As Variant Ptr, Byval RHS As Chart Ptr Ptr) As HRESULT
	End Type 'ICharts_

	Type IDrawingObjects_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Accelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Accelerator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function _Dummy28 () As HRESULT
		Declare Abstract Function Get_AddIndent (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AddIndent (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function AddItem (Byval Text As Variant Ptr, Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ArrowHeadLength (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ArrowHeadLength (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ArrowHeadStyle (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ArrowHeadStyle (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ArrowHeadWidth (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ArrowHeadWidth (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_AutoSize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoSize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CancelButton (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_CancelButton (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_DefaultButton (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DefaultButton (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DismissButton (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DismissButton (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Display3DShading (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Display3DShading (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayVerticalScrollBar (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayVerticalScrollBar (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DropDownLines (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_DropDownLines (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy47 () As HRESULT
		Declare Abstract Function Get_HelpButton (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HelpButton (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_InputType (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_InputType (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LargeChange (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_LargeChange (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_LinkedCell (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_LinkedCell (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function _Dummy54 () As HRESULT
		Declare Abstract Function List (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy56 () As HRESULT
		Declare Abstract Function Get_ListFillRange (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ListFillRange (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ListIndex (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ListIndex (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Max (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Max (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Min (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Min (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_MultiLine (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_MultiLine (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_MultiSelect (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_MultiSelect (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PhoneticAccelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_PhoneticAccelerator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function RemoveAllItems (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function RemoveItem (Byval Index As Long, Byval Count As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Reshape (Byval Vertex As Long, Byval Insert As Variant Ptr, Byval Left As Variant Ptr, Byval Top As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RoundedCorners (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RoundedCorners (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Selected (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SmallChange (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_SmallChange (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Ungroup (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Vertices (Byval Index1 As Variant Ptr, Byval Index2 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function LinkCombo (Byval Link As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IDrawingObjects_

	Type IPivotCache_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BackgroundQuery (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_BackgroundQuery (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Connection (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Connection (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_EnableRefresh (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableRefresh (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_MemoryUsed (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_OptimizeCache (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_OptimizeCache (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RecordCount (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Refresh () As HRESULT
		Declare Abstract Function Get_RefreshDate (Byval RHS As Date_ Ptr) As HRESULT
		Declare Abstract Function Get_RefreshName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_RefreshOnFileOpen (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RefreshOnFileOpen (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Sql (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Sql (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_SavePassword (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SavePassword (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SourceData (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_SourceData (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_CommandText (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_CommandText (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_CommandType (Byval RHS As XlCmdType Ptr) As HRESULT
		Declare Abstract Function Let_CommandType (Byval RHS As XlCmdType) As HRESULT
		Declare Abstract Function Get_QueryType (Byval RHS As XlQueryType Ptr) As HRESULT
		Declare Abstract Function Get_MaintainConnection (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_MaintainConnection (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RefreshPeriod (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_RefreshPeriod (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Recordset (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Set_Recordset (Byval RHS As IDispatch Ptr) As HRESULT
		Declare Abstract Function ResetTimer () As HRESULT
		Declare Abstract Function Get_LocalConnection (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_LocalConnection (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function CreatePivotTable (Byval TableDestination As Variant Ptr, Byval TableName As Variant Ptr, Byval ReadData As Variant Ptr, Byval DefaultVersion As Variant Ptr, Byval RHS As PivotTable Ptr Ptr) As HRESULT
		Declare Abstract Function Get_UseLocalConnection (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_UseLocalConnection (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ADOConnection (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_IsConnected (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function MakeConnection () As HRESULT
		Declare Abstract Function Get_OLAP (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_SourceType (Byval RHS As XlPivotTableSourceType Ptr) As HRESULT
		Declare Abstract Function Get_MissingItemsLimit (Byval RHS As XlPivotTableMissingItems Ptr) As HRESULT
		Declare Abstract Function Let_MissingItemsLimit (Byval RHS As XlPivotTableMissingItems) As HRESULT
		Declare Abstract Function Get_SourceConnectionFile (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_SourceConnectionFile (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_SourceDataFile (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_RobustConnect (Byval RHS As XlRobustConnect Ptr) As HRESULT
		Declare Abstract Function Let_RobustConnect (Byval RHS As XlRobustConnect) As HRESULT
		Declare Abstract Function SaveAsODC (Byval ODCFileName As BSTR, Byval Description As Variant Ptr, Byval Keywords As Variant Ptr) As HRESULT
		Declare Abstract Function Get_WorkbookConnection (Byval RHS As WorkbookConnection Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Version (Byval RHS As XlPivotTableVersionList Ptr) As HRESULT
		Declare Abstract Function Get_UpgradeOnRefresh (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_UpgradeOnRefresh (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function CreatePivotChart (Byval ChartDestination As Variant Ptr, Byval XlChartType As Variant Ptr, Byval Left As Variant Ptr, Byval Top As Variant Ptr, Byval Width As Variant Ptr, Byval Height As Variant Ptr, Byval RHS As Shape Ptr Ptr) As HRESULT
	End Type 'IPivotCache_

	Type IPivotCaches_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As PivotCache Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As PivotCache Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval SourceType As XlPivotTableSourceType, Byval SourceData As Variant Ptr, Byval RHS As PivotCache Ptr Ptr) As HRESULT
		Declare Abstract Function Create (Byval SourceType As XlPivotTableSourceType, Byval SourceData As Variant Ptr, Byval Version As Variant Ptr, Byval RHS As PivotCache Ptr Ptr) As HRESULT
	End Type 'IPivotCaches_

	Type IPivotFormula_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Index (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_StandardFormula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_StandardFormula (Byval RHS As BSTR) As HRESULT
	End Type 'IPivotFormula_

	Type IPivotFormulas_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function _Add (Byval Formula As BSTR, Byval RHS As PivotFormula Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As PivotFormula Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As PivotFormula Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Formula As BSTR, Byval UseStandardFormula As Variant Ptr, Byval RHS As PivotFormula Ptr Ptr) As HRESULT
	End Type 'IPivotFormulas_

	Type IPivotTable_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function AddFields (Byval RowFields As Variant Ptr, Byval ColumnFields As Variant Ptr, Byval PageFields As Variant Ptr, Byval AddToTable As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ColumnFields (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ColumnGrand (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ColumnGrand (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ColumnRange (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function ShowPages (Byval PageField As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DataBodyRange (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DataFields (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DataLabelRange (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_HasAutoFormat (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasAutoFormat (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HiddenFields (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_InnerDetail (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_InnerDetail (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_PageFields (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PageRange (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PageRangeCells (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function PivotFields (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RefreshDate (Byval RHS As Date_ Ptr) As HRESULT
		Declare Abstract Function Get_RefreshName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function RefreshTable (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_RowFields (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RowGrand (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RowGrand (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RowRange (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SaveData (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SaveData (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SourceData (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_SourceData (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_TableRange1 (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TableRange2 (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_VisibleFields (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CacheIndex (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_CacheIndex (Byval RHS As Long) As HRESULT
		Declare Abstract Function CalculatedFields (Byval RHS As CalculatedFields Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DisplayErrorString (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayErrorString (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayNullString (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayNullString (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_EnableDrilldown (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableDrilldown (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_EnableFieldDialog (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableFieldDialog (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_EnableWizard (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableWizard (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ErrorString (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ErrorString (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function GetData (Byval Name As BSTR, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function ListFormulas () As HRESULT
		Declare Abstract Function Get_ManualUpdate (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ManualUpdate (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_MergeLabels (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_MergeLabels (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_NullString (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_NullString (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function PivotCache (Byval RHS As PivotCache Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PivotFormulas (Byval RHS As PivotFormulas Ptr Ptr) As HRESULT
		Declare Abstract Function PivotTableWizard (Byval SourceType As Variant Ptr, Byval SourceData As Variant Ptr, Byval TableDestination As Variant Ptr, Byval TableName As Variant Ptr, Byval RowGrand As Variant Ptr, Byval ColumnGrand As Variant Ptr, Byval SaveData As Variant Ptr, Byval HasAutoFormat As Variant Ptr, Byval AutoPage As Variant Ptr, Byval Reserved As Variant Ptr, Byval BackgroundQuery As Variant Ptr, Byval OptimizeCache As Variant Ptr, Byval PageFieldOrder As Variant Ptr, Byval PageFieldWrapCount As Variant Ptr, Byval ReadData As Variant Ptr, Byval Connection As Variant Ptr) As HRESULT
		Declare Abstract Function Get_SubtotalHiddenPageItems (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SubtotalHiddenPageItems (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PageFieldOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_PageFieldOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_PageFieldStyle (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_PageFieldStyle (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_PageFieldWrapCount (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_PageFieldWrapCount (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_PreserveFormatting (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PreserveFormatting (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _PivotSelect (Byval Name As BSTR, Byval Mode As XlPTSelectionMode) As HRESULT
		Declare Abstract Function Get_PivotSelection (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_PivotSelection (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_SelectionMode (Byval RHS As XlPTSelectionMode Ptr) As HRESULT
		Declare Abstract Function Let_SelectionMode (Byval RHS As XlPTSelectionMode) As HRESULT
		Declare Abstract Function Get_TableStyle (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_TableStyle (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Tag (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Tag (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Update () As HRESULT
		Declare Abstract Function Get_VacatedStyle (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_VacatedStyle (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Format (Byval Format_v As XlPivotFormatType) As HRESULT
		Declare Abstract Function Get_PrintTitles (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintTitles (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_CubeFields (Byval RHS As CubeFields Ptr Ptr) As HRESULT
		Declare Abstract Function Get_GrandTotalName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_GrandTotalName (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_SmallGrid (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SmallGrid (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RepeatItemsOnEachPrintedPage (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RepeatItemsOnEachPrintedPage (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TotalsAnnotation (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TotalsAnnotation (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function PivotSelect (Byval Name As BSTR, Byval Mode As XlPTSelectionMode, Byval UseStandardName As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PivotSelectionStandard (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_PivotSelectionStandard (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function GetPivotData (Byval DataField As Variant Ptr, Byval Field1 As Variant Ptr, Byval Item1 As Variant Ptr, Byval Field2 As Variant Ptr, Byval Item2 As Variant Ptr, Byval Field3 As Variant Ptr, Byval Item3 As Variant Ptr, Byval Field4 As Variant Ptr, Byval Item4 As Variant Ptr, Byval Field5 As Variant Ptr, Byval Item5 As Variant Ptr, Byval Field6 As Variant Ptr, Byval Item6 As Variant Ptr, Byval Field7 As Variant Ptr, Byval Item7 As Variant Ptr, Byval Field8 As Variant Ptr, Byval Item8 As Variant Ptr, Byval Field9 As Variant Ptr, Byval Item9 As Variant Ptr, Byval Field10 As Variant Ptr, Byval Item10 As Variant Ptr, Byval Field11 As Variant Ptr, Byval Item11 As Variant Ptr, Byval Field12 As Variant Ptr, Byval Item12 As Variant Ptr, Byval Field13 As Variant Ptr, Byval Item13 As Variant Ptr, Byval Field14 As Variant Ptr, Byval Item14 As Variant Ptr, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DataPivotField (Byval RHS As PivotField Ptr Ptr) As HRESULT
		Declare Abstract Function Get_EnableDataValueEditing (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableDataValueEditing (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function AddDataField (Byval Field As IDispatch Ptr, Byval Caption As Variant Ptr, Byval Function_v As Variant Ptr, Byval RHS As PivotField Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MDX (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_ViewCalculatedMembers (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ViewCalculatedMembers (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_CalculatedMembers (Byval RHS As CalculatedMembers Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DisplayImmediateItems (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayImmediateItems (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Dummy15 (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_EnableFieldList (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableFieldList (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_VisualTotals (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_VisualTotals (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowPageMultipleItemLabel (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowPageMultipleItemLabel (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Version (Byval RHS As XlPivotTableVersionList Ptr) As HRESULT
		Declare Abstract Function CreateCubeFile (Byval File As BSTR, Byval Measures As Variant Ptr, Byval Levels As Variant Ptr, Byval Members As Variant Ptr, Byval Properties As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_DisplayEmptyRow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayEmptyRow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayEmptyColumn (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayEmptyColumn (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowCellBackgroundFromOLAP (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowCellBackgroundFromOLAP (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PivotColumnAxis (Byval RHS As PivotAxis Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PivotRowAxis (Byval RHS As PivotAxis Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ShowDrillIndicators (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowDrillIndicators (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PrintDrillIndicators (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintDrillIndicators (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayMemberPropertyTooltips (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayMemberPropertyTooltips (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayContextTooltips (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayContextTooltips (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function ClearTable () As HRESULT
		Declare Abstract Function Get_CompactRowIndent (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_CompactRowIndent (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_LayoutRowDefault (Byval RHS As XlLayoutRowType Ptr) As HRESULT
		Declare Abstract Function Let_LayoutRowDefault (Byval RHS As XlLayoutRowType) As HRESULT
		Declare Abstract Function Get_DisplayFieldCaptions (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayFieldCaptions (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function RowAxisLayout (Byval RowLayout As XlLayoutRowType) As HRESULT
		Declare Abstract Function SubtotalLocation (Byval Location As XlSubtototalLocationType) As HRESULT
		Declare Abstract Function Get_ActiveFilters (Byval RHS As PivotFilters Ptr Ptr) As HRESULT
		Declare Abstract Function Get_InGridDropZones (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_InGridDropZones (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function ClearAllFilters () As HRESULT
		Declare Abstract Function Get_TableStyle2 (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_TableStyle2 (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ShowTableStyleLastColumn (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowTableStyleLastColumn (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowTableStyleRowStripes (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowTableStyleRowStripes (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowTableStyleColumnStripes (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowTableStyleColumnStripes (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowTableStyleRowHeaders (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowTableStyleRowHeaders (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowTableStyleColumnHeaders (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowTableStyleColumnHeaders (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function ConvertToFormulas (Byval ConvertFilters As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AllowMultipleFilters (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AllowMultipleFilters (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_CompactLayoutRowHeader (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_CompactLayoutRowHeader (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_CompactLayoutColumnHeader (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_CompactLayoutColumnHeader (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_FieldListSortAscending (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_FieldListSortAscending (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SortUsingCustomLists (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SortUsingCustomLists (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function ChangeConnection (Byval conn As WorkbookConnection Ptr) As HRESULT
		Declare Abstract Function ChangePivotCache (Byval PivotCache_v As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Location (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Location (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_EnableWriteback (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableWriteback (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Allocation (Byval RHS As XlAllocation Ptr) As HRESULT
		Declare Abstract Function Let_Allocation (Byval RHS As XlAllocation) As HRESULT
		Declare Abstract Function Get_AllocationValue (Byval RHS As XlAllocationValue Ptr) As HRESULT
		Declare Abstract Function Let_AllocationValue (Byval RHS As XlAllocationValue) As HRESULT
		Declare Abstract Function Get_AllocationMethod (Byval RHS As XlAllocationMethod Ptr) As HRESULT
		Declare Abstract Function Let_AllocationMethod (Byval RHS As XlAllocationMethod) As HRESULT
		Declare Abstract Function Get_AllocationWeightExpression (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_AllocationWeightExpression (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function AllocateChanges () As HRESULT
		Declare Abstract Function CommitChanges () As HRESULT
		Declare Abstract Function DiscardChanges () As HRESULT
		Declare Abstract Function RefreshDataSourceValues () As HRESULT
		Declare Abstract Function RepeatAllLabels (Byval Repeat As XlPivotFieldRepeatLabels) As HRESULT
		Declare Abstract Function Get_ChangeList (Byval RHS As PivotTableChangeList Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Slicers (Byval RHS As Slicers Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AlternativeText (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_AlternativeText (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Summary (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Summary (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_VisualTotalsForSets (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_VisualTotalsForSets (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowValuesRow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowValuesRow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_CalculatedMembersInFilters (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_CalculatedMembersInFilters (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function PivotValueCell (Byval rowline As Variant Ptr, Byval columnline As Variant Ptr, Byval RHS As PivotValueCell Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Hidden (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_PivotChart (Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function DrillDown (Byval PivotItem As PivotItem Ptr, Byval PivotLine As Variant Ptr) As HRESULT
		Declare Abstract Function DrillUp (Byval PivotItem As PivotItem Ptr, Byval PivotLine As Variant Ptr, Byval LevelUniqueName As Variant Ptr) As HRESULT
		Declare Abstract Function DrillTo (Byval PivotItem As PivotItem Ptr, Byval CubeField As CubeField Ptr, Byval PivotLine As Variant Ptr) As HRESULT
		Declare Abstract Function Dummy2 (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
	End Type 'IPivotTable_

	Type IPivotTables_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As PivotTable Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval PivotCache As PivotCache Ptr, Byval TableDestination As Variant Ptr, Byval TableName As Variant Ptr, Byval ReadData As Variant Ptr, Byval DefaultVersion As Variant Ptr, Byval RHS As PivotTable Ptr Ptr) As HRESULT
	End Type 'IPivotTables_

	Type IPivotField_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Calculation (Byval RHS As XlPivotFieldCalculation Ptr) As HRESULT
		Declare Abstract Function Let_Calculation (Byval RHS As XlPivotFieldCalculation) As HRESULT
		Declare Abstract Function Get_ChildField (Byval RHS As PivotField Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ChildItems (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CurrentPage (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_CurrentPage (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_DataRange (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DataType (Byval RHS As XlPivotFieldDataType Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Function (Byval RHS As XlConsolidationFunction Ptr) As HRESULT
		Declare Abstract Function Let_Function (Byval RHS As XlConsolidationFunction) As HRESULT
		Declare Abstract Function Get_GroupLevel (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HiddenItems (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LabelRange (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_NumberFormat (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_NumberFormat (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As XlPivotFieldOrientation Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As XlPivotFieldOrientation) As HRESULT
		Declare Abstract Function Get_ShowAllItems (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowAllItems (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ParentField (Byval RHS As PivotField Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ParentItems (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function PivotItems (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Position (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Position (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_SourceName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Subtotals (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Subtotals (Byval Index As Variant Ptr, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_BaseField (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_BaseField (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_BaseItem (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_BaseItem (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_TotalLevels (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_VisibleItems (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CalculatedItems (Byval RHS As CalculatedItems Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Get_DragToColumn (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DragToColumn (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DragToHide (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DragToHide (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DragToPage (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DragToPage (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DragToRow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DragToRow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DragToData (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DragToData (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_IsCalculated (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_MemoryUsed (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ServerBased (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ServerBased (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _AutoSort (Byval Order As Long, Byval Field As BSTR) As HRESULT
		Declare Abstract Function AutoShow (Byval Type_v As Long, Byval Range As Long, Byval Count As Long, Byval Field As BSTR) As HRESULT
		Declare Abstract Function Get_AutoSortOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_AutoSortField (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_AutoShowType (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_AutoShowRange (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_AutoShowCount (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_AutoShowField (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_LayoutBlankLine (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LayoutBlankLine (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_LayoutSubtotalLocation (Byval RHS As XlSubtototalLocationType Ptr) As HRESULT
		Declare Abstract Function Let_LayoutSubtotalLocation (Byval RHS As XlSubtototalLocationType) As HRESULT
		Declare Abstract Function Get_LayoutPageBreak (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LayoutPageBreak (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_LayoutForm (Byval RHS As XlLayoutFormType Ptr) As HRESULT
		Declare Abstract Function Let_LayoutForm (Byval RHS As XlLayoutFormType) As HRESULT
		Declare Abstract Function Get_SubtotalName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_SubtotalName (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_DrilledDown (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DrilledDown (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_CubeField (Byval RHS As CubeField Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CurrentPageName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_CurrentPageName (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_StandardFormula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_StandardFormula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_HiddenItemsList (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HiddenItemsList (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_DatabaseSort (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DatabaseSort (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_IsMemberProperty (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_PropertyParentField (Byval RHS As PivotField Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PropertyOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_PropertyOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_EnableItemSelection (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableItemSelection (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_CurrentPageList (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_CurrentPageList (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function AddPageItem (Byval Item As BSTR, Byval ClearList As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Hidden (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Hidden (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function DrillTo (Byval Field As BSTR) As HRESULT
		Declare Abstract Function Get_UseMemberPropertyAsCaption (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_UseMemberPropertyAsCaption (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_MemberPropertyCaption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_MemberPropertyCaption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_DisplayAsTooltip (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayAsTooltip (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayInReport (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayInReport (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayAsCaption (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_LayoutCompactRow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LayoutCompactRow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_IncludeNewItemsInFilter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_IncludeNewItemsInFilter (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_VisibleItemsList (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VisibleItemsList (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PivotFilters (Byval RHS As PivotFilters Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AutoSortPivotLine (Byval RHS As PivotLine Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AutoSortCustomSubtotal (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShowingInAxis (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_EnableMultiplePageItems (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableMultiplePageItems (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AllItemsVisible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function ClearManualFilter () As HRESULT
		Declare Abstract Function ClearAllFilters () As HRESULT
		Declare Abstract Function ClearValueFilters () As HRESULT
		Declare Abstract Function ClearLabelFilters () As HRESULT
		Declare Abstract Function AutoSort (Byval Order As Long, Byval Field As BSTR, Byval PivotLine As Variant Ptr, Byval CustomSubtotal As Variant Ptr) As HRESULT
		Declare Abstract Function Get_SourceCaption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_ShowDetail (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowDetail (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RepeatLabels (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RepeatLabels (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function AutoGroup () As HRESULT
	End Type 'IPivotField_

	Type IPivotFields_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As PivotTable Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IPivotFields_

	Type ICalculatedFields_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function _Add (Byval Name As BSTR, Byval Formula As BSTR, Byval RHS As PivotField Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As PivotField Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Field As Variant Ptr, Byval RHS As PivotField Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Name As BSTR, Byval Formula As BSTR, Byval UseStandardFormula As Variant Ptr, Byval RHS As PivotField Ptr Ptr) As HRESULT
	End Type 'ICalculatedFields_

	Type IPivotItem_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As PivotField Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ChildItems (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DataRange (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_LabelRange (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ParentItem (Byval RHS As PivotItem Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ParentShowDetail (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_Position (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Position (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_ShowDetail (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowDetail (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SourceName (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Get_IsCalculated (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_RecordCount (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_DrilledDown (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DrilledDown (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_StandardFormula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_StandardFormula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_SourceNameStandard (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function DrillTo (Byval Field As BSTR) As HRESULT
	End Type 'IPivotItem_

	Type IPivotItems_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As PivotField Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Name As BSTR) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IPivotItems_

	Type ICalculatedItems_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function _Add (Byval Name As BSTR, Byval Formula As BSTR, Byval RHS As PivotItem Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As PivotItem Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Field As Variant Ptr, Byval RHS As PivotItem Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Name As BSTR, Byval Formula As BSTR, Byval UseStandardFormula As Variant Ptr, Byval RHS As PivotItem Ptr Ptr) As HRESULT
	End Type 'ICalculatedItems_

	Type ICharacters_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Insert (Byval String_v As BSTR, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_PhoneticCharacters (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_PhoneticCharacters (Byval RHS As BSTR) As HRESULT
	End Type 'ICharacters_

	Type IDialogs_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As XlBuiltInDialog, Byval RHS As Dialog Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As XlBuiltInDialog, Byval RHS As Dialog Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IDialogs_

	Type IDialog_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Show (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
	End Type 'IDialog_

	Type ISoundNote_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Import_ (Byval Filename As BSTR, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Play (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Record (Byval RHS As Variant Ptr Ptr) As HRESULT
	End Type 'ISoundNote_

	Type IButton_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AddIndent (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AddIndent (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_AutoSize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoSize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Accelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Accelerator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_CancelButton (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_CancelButton (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DefaultButton (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DefaultButton (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DismissButton (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DismissButton (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HelpButton (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HelpButton (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PhoneticAccelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_PhoneticAccelerator (Byval RHS As Variant Ptr) As HRESULT
	End Type 'IButton_

	Type IButtons_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AddIndent (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AddIndent (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_AutoSize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoSize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Accelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Accelerator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_CancelButton (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_CancelButton (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DefaultButton (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DefaultButton (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DismissButton (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DismissButton (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HelpButton (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HelpButton (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PhoneticAccelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_PhoneticAccelerator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double, Byval RHS As Button Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IButtons_

	Type ICheckBox_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Accelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Accelerator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Display3DShading (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Display3DShading (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LinkedCell (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_LinkedCell (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_PhoneticAccelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_PhoneticAccelerator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As Variant Ptr) As HRESULT
	End Type 'ICheckBox_

	Type ICheckBoxes_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Accelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Accelerator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Display3DShading (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Display3DShading (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LinkedCell (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_LinkedCell (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_PhoneticAccelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_PhoneticAccelerator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double, Byval RHS As CheckBox Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'ICheckBoxes_

	Type IOptionButton_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Accelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Accelerator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Display3DShading (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Display3DShading (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LinkedCell (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_LinkedCell (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_PhoneticAccelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_PhoneticAccelerator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_GroupBox (Byval RHS As GroupBox Ptr Ptr) As HRESULT
	End Type 'IOptionButton_

	Type IOptionButtons_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Accelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Accelerator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Display3DShading (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Display3DShading (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LinkedCell (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_LinkedCell (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_PhoneticAccelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_PhoneticAccelerator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_GroupBox (Byval RHS As GroupBox Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double, Byval RHS As OptionButton Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IOptionButtons_

	Type IEditBox_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_DisplayVerticalScrollBar (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayVerticalScrollBar (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_InputType (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_InputType (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_LinkedObject (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_MultiLine (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_MultiLine (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PasswordEdit (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PasswordEdit (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'IEditBox_

	Type IEditBoxes_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_DisplayVerticalScrollBar (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayVerticalScrollBar (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_InputType (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_InputType (Byval RHS As Long) As HRESULT
		Declare Abstract Function _Dummy34 () As HRESULT
		Declare Abstract Function Get_MultiLine (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_MultiLine (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PasswordEdit (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PasswordEdit (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double, Byval RHS As EditBox Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IEditBoxes_

	Type IScrollBar_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Display3DShading (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Display3DShading (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_LinkedCell (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_LinkedCell (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Max (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Max (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Min (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Min (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_SmallChange (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_SmallChange (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_LargeChange (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_LargeChange (Byval RHS As Long) As HRESULT
	End Type 'IScrollBar_

	Type IScrollBars_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Display3DShading (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Display3DShading (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_LinkedCell (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_LinkedCell (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Max (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Max (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Min (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Min (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_SmallChange (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_SmallChange (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_LargeChange (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_LargeChange (Byval RHS As Long) As HRESULT
		Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double, Byval RHS As ScrollBar Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IScrollBars_

	Type IListBox_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function AddItem (Byval Text As Variant Ptr, Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Display3DShading (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Display3DShading (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_LinkedCell (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_LinkedCell (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_LinkedObject (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_List (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_List (Byval Index As Variant Ptr, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ListCount (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ListFillRange (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ListFillRange (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ListIndex (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ListIndex (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_MultiSelect (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_MultiSelect (Byval RHS As Long) As HRESULT
		Declare Abstract Function RemoveAllItems (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function RemoveItem (Byval Index As Long, Byval Count As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Selected (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Selected (Byval Index As Variant Ptr, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As Long) As HRESULT
	End Type 'IListBox_

	Type IListBoxes_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function AddItem (Byval Text As Variant Ptr, Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Display3DShading (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Display3DShading (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_LinkedCell (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_LinkedCell (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function _Dummy31 () As HRESULT
		Declare Abstract Function Get_List (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_List (Byval Index As Variant Ptr, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function _Dummy33 () As HRESULT
		Declare Abstract Function Get_ListFillRange (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ListFillRange (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ListIndex (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ListIndex (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_MultiSelect (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_MultiSelect (Byval RHS As Long) As HRESULT
		Declare Abstract Function RemoveAllItems (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function RemoveItem (Byval Index As Long, Byval Count As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Selected (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Selected (Byval Index As Variant Ptr, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As Long) As HRESULT
		Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double, Byval RHS As ListBox Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IListBoxes_

	Type IGroupBox_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Accelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Accelerator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Display3DShading (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Display3DShading (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PhoneticAccelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_PhoneticAccelerator (Byval RHS As Variant Ptr) As HRESULT
	End Type 'IGroupBox_

	Type IGroupBoxes_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Accelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Accelerator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Display3DShading (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Display3DShading (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PhoneticAccelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_PhoneticAccelerator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double, Byval RHS As GroupBox Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IGroupBoxes_

	Type IDropDown_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function AddItem (Byval Text As Variant Ptr, Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Display3DShading (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Display3DShading (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_LinkedCell (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_LinkedCell (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_LinkedObject (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_List (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_List (Byval Index As Variant Ptr, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ListCount (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ListFillRange (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ListFillRange (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ListIndex (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ListIndex (Byval RHS As Long) As HRESULT
		Declare Abstract Function _Dummy36 () As HRESULT
		Declare Abstract Function RemoveAllItems (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function RemoveItem (Byval Index As Long, Byval Count As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Selected (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Selected (Byval Index As Variant Ptr, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DropDownLines (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_DropDownLines (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
	End Type 'IDropDown_

	Type IDropDowns_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function AddItem (Byval Text As Variant Ptr, Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Display3DShading (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Display3DShading (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_LinkedCell (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_LinkedCell (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function _Dummy31 () As HRESULT
		Declare Abstract Function Get_List (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_List (Byval Index As Variant Ptr, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function _Dummy33 () As HRESULT
		Declare Abstract Function Get_ListFillRange (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ListFillRange (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ListIndex (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ListIndex (Byval RHS As Long) As HRESULT
		Declare Abstract Function _Dummy36 () As HRESULT
		Declare Abstract Function RemoveAllItems (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function RemoveItem (Byval Index As Long, Byval Count As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Selected (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Selected (Byval Index As Variant Ptr, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DropDownLines (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_DropDownLines (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double, Byval Editable As Variant Ptr, Byval RHS As DropDown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IDropDowns_

	Type ISpinner_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Display3DShading (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Display3DShading (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_LinkedCell (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_LinkedCell (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Max (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Max (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Min (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Min (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_SmallChange (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_SmallChange (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As Long) As HRESULT
	End Type 'ISpinner_

	Type ISpinners_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Display3DShading (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Display3DShading (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_LinkedCell (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_LinkedCell (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Max (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Max (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Min (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Min (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_SmallChange (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_SmallChange (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As Long) As HRESULT
		Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double, Byval RHS As Spinner Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'ISpinners_

	Type IDialogFrame_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function _Dummy4 () As HRESULT
		Declare Abstract Function _Dummy5 () As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy7 () As HRESULT
		Declare Abstract Function _Dummy8 () As HRESULT
		Declare Abstract Function _Dummy9 () As HRESULT
		Declare Abstract Function _Dummy10 () As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function _Dummy17 () As HRESULT
		Declare Abstract Function _Dummy18 () As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy20 () As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function _Dummy23 () As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy25 () As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
	End Type 'IDialogFrame_

	Type ILabel_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Accelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Accelerator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function _Dummy33 () As HRESULT
		Declare Abstract Function Get_PhoneticAccelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_PhoneticAccelerator (Byval RHS As Variant Ptr) As HRESULT
	End Type 'ILabel_

	Type ILabels_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Accelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Accelerator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function _Dummy33 () As HRESULT
		Declare Abstract Function Get_PhoneticAccelerator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_PhoneticAccelerator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double, Byval RHS As Label Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'ILabels_

	Type IPanes_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Long, Byval RHS As Pane Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Long, Byval RHS As Pane Ptr Ptr) As HRESULT
	End Type 'IPanes_

	Type IPane_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Activate (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function LargeScroll (Byval Down As Variant Ptr, Byval Up As Variant Ptr, Byval ToRight As Variant Ptr, Byval ToLeft As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ScrollColumn (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ScrollColumn (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_ScrollRow (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ScrollRow (Byval RHS As Long) As HRESULT
		Declare Abstract Function SmallScroll (Byval Down As Variant Ptr, Byval Up As Variant Ptr, Byval ToRight As Variant Ptr, Byval ToLeft As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_VisibleRange (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function ScrollIntoView (Byval Left As Long, Byval Top As Long, Byval Width As Long, Byval Height As Long, Byval Start As Variant Ptr) As HRESULT
		Declare Abstract Function PointsToScreenPixelsX (Byval Points As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function PointsToScreenPixelsY (Byval Points As Long, Byval RHS As Long Ptr) As HRESULT
	End Type 'IPane_

	Type IScenarios_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Name As BSTR, Byval ChangingCells As Variant Ptr, Byval Values As Variant Ptr, Byval Comment As Variant Ptr, Byval Locked As Variant Ptr, Byval Hidden As Variant Ptr, Byval RHS As Scenario Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function CreateSummary (Byval ReportType As XlSummaryReportType, Byval ResultCells As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As Scenario Ptr Ptr) As HRESULT
		Declare Abstract Function Merge (Byval Source As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IScenarios_

	Type IScenario_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function ChangeScenario (Byval ChangingCells As Variant Ptr, Byval Values As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ChangingCells (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Comment (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Comment (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Hidden (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Hidden (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Show (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Values (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
	End Type 'IScenario_

	Type IGroupObject_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy27 () As HRESULT
		Declare Abstract Function _Dummy28 () As HRESULT
		Declare Abstract Function Get_AddIndent (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AddIndent (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy30 () As HRESULT
		Declare Abstract Function Get_ArrowHeadLength (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ArrowHeadLength (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ArrowHeadStyle (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ArrowHeadStyle (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ArrowHeadWidth (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ArrowHeadWidth (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_AutoSize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoSize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy36 () As HRESULT
		Declare Abstract Function _Dummy37 () As HRESULT
		Declare Abstract Function _Dummy38 () As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As Long) As HRESULT
		Declare Abstract Function _Dummy41 () As HRESULT
		Declare Abstract Function _Dummy42 () As HRESULT
		Declare Abstract Function _Dummy43 () As HRESULT
		Declare Abstract Function _Dummy44 () As HRESULT
		Declare Abstract Function _Dummy45 () As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy47 () As HRESULT
		Declare Abstract Function _Dummy48 () As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function _Dummy50 () As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy52 () As HRESULT
		Declare Abstract Function _Dummy53 () As HRESULT
		Declare Abstract Function _Dummy54 () As HRESULT
		Declare Abstract Function _Dummy55 () As HRESULT
		Declare Abstract Function _Dummy56 () As HRESULT
		Declare Abstract Function _Dummy57 () As HRESULT
		Declare Abstract Function _Dummy58 () As HRESULT
		Declare Abstract Function _Dummy59 () As HRESULT
		Declare Abstract Function _Dummy60 () As HRESULT
		Declare Abstract Function _Dummy61 () As HRESULT
		Declare Abstract Function _Dummy62 () As HRESULT
		Declare Abstract Function _Dummy63 () As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function _Dummy65 () As HRESULT
		Declare Abstract Function _Dummy66 () As HRESULT
		Declare Abstract Function _Dummy67 () As HRESULT
		Declare Abstract Function _Dummy68 () As HRESULT
		Declare Abstract Function Get_RoundedCorners (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RoundedCorners (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy70 () As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy72 () As HRESULT
		Declare Abstract Function _Dummy73 () As HRESULT
		Declare Abstract Function Ungroup (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy75 () As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function _Dummy77 () As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
	End Type 'IGroupObject_

	Type IGroupObjects_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy27 () As HRESULT
		Declare Abstract Function _Dummy28 () As HRESULT
		Declare Abstract Function Get_AddIndent (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AddIndent (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy30 () As HRESULT
		Declare Abstract Function Get_ArrowHeadLength (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ArrowHeadLength (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ArrowHeadStyle (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ArrowHeadStyle (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ArrowHeadWidth (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ArrowHeadWidth (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_AutoSize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoSize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy36 () As HRESULT
		Declare Abstract Function _Dummy37 () As HRESULT
		Declare Abstract Function _Dummy38 () As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As Long) As HRESULT
		Declare Abstract Function _Dummy41 () As HRESULT
		Declare Abstract Function _Dummy42 () As HRESULT
		Declare Abstract Function _Dummy43 () As HRESULT
		Declare Abstract Function _Dummy44 () As HRESULT
		Declare Abstract Function _Dummy45 () As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy47 () As HRESULT
		Declare Abstract Function _Dummy48 () As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function _Dummy50 () As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy52 () As HRESULT
		Declare Abstract Function _Dummy53 () As HRESULT
		Declare Abstract Function _Dummy54 () As HRESULT
		Declare Abstract Function _Dummy55 () As HRESULT
		Declare Abstract Function _Dummy56 () As HRESULT
		Declare Abstract Function _Dummy57 () As HRESULT
		Declare Abstract Function _Dummy58 () As HRESULT
		Declare Abstract Function _Dummy59 () As HRESULT
		Declare Abstract Function _Dummy60 () As HRESULT
		Declare Abstract Function _Dummy61 () As HRESULT
		Declare Abstract Function _Dummy62 () As HRESULT
		Declare Abstract Function _Dummy63 () As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function _Dummy65 () As HRESULT
		Declare Abstract Function _Dummy66 () As HRESULT
		Declare Abstract Function _Dummy67 () As HRESULT
		Declare Abstract Function _Dummy68 () As HRESULT
		Declare Abstract Function Get_RoundedCorners (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RoundedCorners (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy70 () As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy72 () As HRESULT
		Declare Abstract Function _Dummy73 () As HRESULT
		Declare Abstract Function Ungroup (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy75 () As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function _Dummy77 () As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IGroupObjects_

	Type ILine_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ArrowHeadLength (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ArrowHeadLength (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ArrowHeadStyle (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ArrowHeadStyle (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ArrowHeadWidth (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ArrowHeadWidth (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
	End Type 'ILine_

	Type ILines_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ArrowHeadLength (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ArrowHeadLength (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ArrowHeadStyle (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ArrowHeadStyle (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ArrowHeadWidth (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ArrowHeadWidth (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval X1 As Double, Byval Y1 As Double, Byval X2 As Double, Byval Y2 As Double, Byval RHS As Line Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'ILines_

	Type IRectangle_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AddIndent (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AddIndent (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_AutoSize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoSize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RoundedCorners (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RoundedCorners (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'IRectangle_

	Type IRectangles_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AddIndent (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AddIndent (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_AutoSize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoSize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RoundedCorners (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RoundedCorners (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double, Byval RHS As Rectangle Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IRectangles_

	Type IOval_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AddIndent (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AddIndent (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_AutoSize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoSize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'IOval_

	Type IOvals_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AddIndent (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AddIndent (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_AutoSize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoSize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double, Byval RHS As Oval Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IOvals_

	Type IArc_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AddIndent (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AddIndent (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_AutoSize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoSize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy43 () As HRESULT
	End Type 'IArc_

	Type IArcs_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AddIndent (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AddIndent (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_AutoSize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoSize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy43 () As HRESULT
		Declare Abstract Function Add (Byval X1 As Double, Byval Y1 As Double, Byval X2 As Double, Byval Y2 As Double, Byval RHS As Arc Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IArcs_

	Type IOLEObjectEvents_ Extends CAIDispatch
		Declare Abstract Function GotFocus () As HRESULT
		Declare Abstract Function LostFocus () As HRESULT
	End Type 'IOLEObjectEvents_

	Type _IOLEObject_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Activate (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AutoLoad (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoLoad (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AutoUpdate (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoUpdate (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Object (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_OLEType (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SourceName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_SourceName (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Update (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Verb (Byval Verb_v As XlOLEVerb, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LinkedCell (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_LinkedCell (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ListFillRange (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ListFillRange (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_progID (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_AltHTML (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_AltHTML (Byval RHS As BSTR) As HRESULT
	End Type '_IOLEObject_

	Type IOLEObjects_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy30 () As HRESULT
		Declare Abstract Function Get_AutoLoad (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoLoad (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy32 () As HRESULT
		Declare Abstract Function _Dummy33 () As HRESULT
		Declare Abstract Function _Dummy34 () As HRESULT
		Declare Abstract Function Get_SourceName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_SourceName (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function _Dummy36 () As HRESULT
		Declare Abstract Function _Dummy37 () As HRESULT
		Declare Abstract Function _Dummy38 () As HRESULT
		Declare Abstract Function _Dummy39 () As HRESULT
		Declare Abstract Function _Dummy40 () As HRESULT
		Declare Abstract Function _Dummy41 () As HRESULT
		Declare Abstract Function Add (Byval ClassType As Variant Ptr, Byval Filename As Variant Ptr, Byval Link As Variant Ptr, Byval DisplayAsIcon As Variant Ptr, Byval IconFileName As Variant Ptr, Byval IconIndex As Variant Ptr, Byval IconLabel As Variant Ptr, Byval Left As Variant Ptr, Byval Top As Variant Ptr, Byval Width As Variant Ptr, Byval Height As Variant Ptr, Byval RHS As OLEObject Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IOLEObjects_

	Type ITextBox_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AddIndent (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AddIndent (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_AutoSize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoSize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RoundedCorners (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RoundedCorners (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'ITextBox_

	Type ITextBoxes_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AddIndent (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AddIndent (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_AutoSize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoSize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RoundedCorners (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RoundedCorners (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double, Byval RHS As TextBox Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'ITextBoxes_

	Type IPicture_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
	End Type 'IPicture_

	Type IPictures_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double, Byval RHS As Picture Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function Insert (Byval Filename As BSTR, Byval Converter As Variant Ptr, Byval RHS As Picture Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Paste (Byval Link As Variant Ptr, Byval RHS As Picture Ptr Ptr) As HRESULT
	End Type 'IPictures_

	Type IDrawing_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AddIndent (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AddIndent (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_AutoSize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoSize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function AddVertex (Byval Left As Double, Byval Top As Double, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Reshape (Byval Vertex As Long, Byval Insert As VARIANT_BOOL, Byval Left As Variant Ptr, Byval Top As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Vertices (Byval Index1 As Variant Ptr, Byval Index2 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
	End Type 'IDrawing_

	Type IDrawings_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AddIndent (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AddIndent (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_AutoSize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoSize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy44 () As HRESULT
		Declare Abstract Function Reshape (Byval Vertex As Long, Byval Insert As VARIANT_BOOL, Byval Left As Variant Ptr, Byval Top As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy46 () As HRESULT
		Declare Abstract Function Add (Byval X1 As Double, Byval Y1 As Double, Byval X2 As Double, Byval Y2 As Double, Byval Closed As VARIANT_BOOL, Byval RHS As Drawing Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IDrawings_

	Type IRoutingSlip_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Delivery (Byval RHS As XlRoutingSlipDelivery Ptr) As HRESULT
		Declare Abstract Function Let_Delivery (Byval RHS As XlRoutingSlipDelivery) As HRESULT
		Declare Abstract Function Get_Message (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Message (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Recipients (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Recipients (Byval Index As Variant Ptr, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Reset (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ReturnWhenDone (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ReturnWhenDone (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Status (Byval RHS As XlRoutingSlipStatus Ptr) As HRESULT
		Declare Abstract Function Get_Subject (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Subject (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_TrackStatus (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TrackStatus (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'IRoutingSlip_

	Type IOutline_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AutomaticStyles (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutomaticStyles (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function ShowLevels (Byval RowLevels As Variant Ptr, Byval ColumnLevels As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SummaryColumn (Byval RHS As XlSummaryColumn Ptr) As HRESULT
		Declare Abstract Function Let_SummaryColumn (Byval RHS As XlSummaryColumn) As HRESULT
		Declare Abstract Function Get_SummaryRow (Byval RHS As XlSummaryRow Ptr) As HRESULT
		Declare Abstract Function Let_SummaryRow (Byval RHS As XlSummaryRow) As HRESULT
	End Type 'IOutline_

	Type IModule_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Activate (Byval lcid As Long) As HRESULT
		Declare Abstract Function Copy (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Delete_ (Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_CodeName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get__CodeName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let__CodeName (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Index (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Move (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Next (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_OnDoubleClick (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnDoubleClick (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnSheetActivate (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnSheetActivate (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnSheetDeactivate (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnSheetDeactivate (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_PageSetup (Byval RHS As PageSetup Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Previous (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function __PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function _Dummy18 () As HRESULT
		Declare Abstract Function _Protect (Byval Password As Variant Ptr, Byval DrawingObjects As Variant Ptr, Byval Contents As Variant Ptr, Byval Scenarios As Variant Ptr, Byval UserInterfaceOnly As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_ProtectContents (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function _Dummy21 () As HRESULT
		Declare Abstract Function Get_ProtectionMode (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function _Dummy23 () As HRESULT
		Declare Abstract Function _SaveAs (Byval Filename As BSTR, Byval FileFormat As Variant Ptr, Byval Password As Variant Ptr, Byval WriteResPassword As Variant Ptr, Byval ReadOnlyRecommended As Variant Ptr, Byval CreateBackup As Variant Ptr, Byval AddToMru As Variant Ptr, Byval TextCodepage As Variant Ptr, Byval TextVisualLayout As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Unprotect (Byval Password As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Visible (Byval lcid As Long, Byval RHS As XlSheetVisibility Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval lcid As Long, Byval RHS As XlSheetVisibility) As HRESULT
		Declare Abstract Function Get_Shapes (Byval RHS As Shapes Ptr Ptr) As HRESULT
		Declare Abstract Function InsertFile (Byval Filename As Variant Ptr, Byval Merge As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SaveAs (Byval Filename As BSTR, Byval FileFormat As Variant Ptr, Byval Password As Variant Ptr, Byval WriteResPassword As Variant Ptr, Byval ReadOnlyRecommended As Variant Ptr, Byval CreateBackup As Variant Ptr, Byval AddToMru As Variant Ptr, Byval TextCodepage As Variant Ptr, Byval TextVisualLayout As Variant Ptr) As HRESULT
		Declare Abstract Function Protect (Byval Password As Variant Ptr, Byval DrawingObjects As Variant Ptr, Byval Contents As Variant Ptr, Byval Scenarios As Variant Ptr, Byval UserInterfaceOnly As Variant Ptr) As HRESULT
		Declare Abstract Function _PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr) As HRESULT
		Declare Abstract Function PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr) As HRESULT
	End Type 'IModule_

	Type IModules_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval Count As Variant Ptr, Byval RHS As Module Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval lcid As Long) As HRESULT
		Declare Abstract Function _Dummy7 () As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Move (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function __PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_HPageBreaks (Byval RHS As HPageBreaks Ptr Ptr) As HRESULT
		Declare Abstract Function Get_VPageBreaks (Byval RHS As VPageBreaks Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval lcid As Long, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval IgnorePrintAreas As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Add2 (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval Count As Variant Ptr, Byval NewLayout As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
	End Type 'IModules_

	Type IDialogSheet_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Activate (Byval lcid As Long) As HRESULT
		Declare Abstract Function Copy (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Delete_ (Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_CodeName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get__CodeName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let__CodeName (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Index (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Move (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Next (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_OnDoubleClick (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnDoubleClick (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnSheetActivate (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnSheetActivate (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnSheetDeactivate (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnSheetDeactivate (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_PageSetup (Byval RHS As PageSetup Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Previous (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function __PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function PrintPreview (Byval EnableChanges As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function _Protect (Byval Password As Variant Ptr, Byval DrawingObjects_v As Variant Ptr, Byval Contents As Variant Ptr, Byval Scenarios As Variant Ptr, Byval UserInterfaceOnly As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_ProtectContents (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ProtectDrawingObjects (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ProtectionMode (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ProtectScenarios (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function _SaveAs (Byval Filename As BSTR, Byval FileFormat As Variant Ptr, Byval Password As Variant Ptr, Byval WriteResPassword As Variant Ptr, Byval ReadOnlyRecommended As Variant Ptr, Byval CreateBackup As Variant Ptr, Byval AddToMru As Variant Ptr, Byval TextCodepage As Variant Ptr, Byval TextVisualLayout As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Unprotect (Byval Password As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Visible (Byval lcid As Long, Byval RHS As XlSheetVisibility Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval lcid As Long, Byval RHS As XlSheetVisibility) As HRESULT
		Declare Abstract Function Get_Shapes (Byval RHS As Shapes Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy29 () As HRESULT
		Declare Abstract Function Arcs (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy31 () As HRESULT
		Declare Abstract Function _Dummy32 () As HRESULT
		Declare Abstract Function Buttons (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy34 () As HRESULT
		Declare Abstract Function Get_EnableCalculation (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableCalculation (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy36 () As HRESULT
		Declare Abstract Function ChartObjects (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function CheckBoxes (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function _Dummy40 () As HRESULT
		Declare Abstract Function _Dummy41 () As HRESULT
		Declare Abstract Function _Dummy42 () As HRESULT
		Declare Abstract Function _Dummy43 () As HRESULT
		Declare Abstract Function _Dummy44 () As HRESULT
		Declare Abstract Function _Dummy45 () As HRESULT
		Declare Abstract Function Get_DisplayAutomaticPageBreaks (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayAutomaticPageBreaks (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Drawings (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function DrawingObjects (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function DropDowns (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_EnableAutoFilter (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableAutoFilter (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_EnableSelection (Byval RHS As XlEnableSelection Ptr) As HRESULT
		Declare Abstract Function Let_EnableSelection (Byval RHS As XlEnableSelection) As HRESULT
		Declare Abstract Function Get_EnableOutlining (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableOutlining (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_EnablePivotTable (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnablePivotTable (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Evaluate (Byval Name As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function _Evaluate (Byval Name As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy56 () As HRESULT
		Declare Abstract Function ResetAllPageBreaks () As HRESULT
		Declare Abstract Function GroupBoxes (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function GroupObjects (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Labels (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Lines (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function ListBoxes (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Names (Byval RHS As Names Ptr Ptr) As HRESULT
		Declare Abstract Function OLEObjects (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy65 () As HRESULT
		Declare Abstract Function _Dummy66 () As HRESULT
		Declare Abstract Function _Dummy67 () As HRESULT
		Declare Abstract Function OptionButtons (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy69 () As HRESULT
		Declare Abstract Function Ovals (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Paste (Byval Destination As Variant Ptr, Byval Link As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function _PasteSpecial (Byval Format As Variant Ptr, Byval Link As Variant Ptr, Byval DisplayAsIcon As Variant Ptr, Byval IconFileName As Variant Ptr, Byval IconIndex As Variant Ptr, Byval IconLabel As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Pictures (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy74 () As HRESULT
		Declare Abstract Function _Dummy75 () As HRESULT
		Declare Abstract Function _Dummy76 () As HRESULT
		Declare Abstract Function Rectangles (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy78 () As HRESULT
		Declare Abstract Function _Dummy79 () As HRESULT
		Declare Abstract Function Get_ScrollArea (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ScrollArea (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function ScrollBars (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy82 () As HRESULT
		Declare Abstract Function _Dummy83 () As HRESULT
		Declare Abstract Function Spinners (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy85 () As HRESULT
		Declare Abstract Function _Dummy86 () As HRESULT
		Declare Abstract Function TextBoxes (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy88 () As HRESULT
		Declare Abstract Function _Dummy89 () As HRESULT
		Declare Abstract Function _Dummy90 () As HRESULT
		Declare Abstract Function Get_HPageBreaks (Byval RHS As HPageBreaks Ptr Ptr) As HRESULT
		Declare Abstract Function Get_VPageBreaks (Byval RHS As VPageBreaks Ptr Ptr) As HRESULT
		Declare Abstract Function Get_QueryTables (Byval RHS As QueryTables Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DisplayPageBreaks (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayPageBreaks (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Comments (Byval RHS As Comments Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Hyperlinks (Byval RHS As Hyperlinks Ptr Ptr) As HRESULT
		Declare Abstract Function ClearCircles () As HRESULT
		Declare Abstract Function CircleInvalid () As HRESULT
		Declare Abstract Function Get__DisplayRightToLeft (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let__DisplayRightToLeft (Byval lcid As Long, Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_AutoFilter (Byval RHS As AutoFilter Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DisplayRightToLeft (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayRightToLeft (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Scripts (Byval RHS As Office.Scripts Ptr Ptr) As HRESULT
		Declare Abstract Function _PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function _CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval IgnoreFinalYaa As Variant Ptr, Byval SpellScript As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Tab (Byval RHS As Tab Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MailEnvelope (Byval RHS As Office.MsoEnvelope Ptr Ptr) As HRESULT
		Declare Abstract Function SaveAs (Byval Filename As BSTR, Byval FileFormat As Variant Ptr, Byval Password As Variant Ptr, Byval WriteResPassword As Variant Ptr, Byval ReadOnlyRecommended As Variant Ptr, Byval CreateBackup As Variant Ptr, Byval AddToMru As Variant Ptr, Byval TextCodepage As Variant Ptr, Byval TextVisualLayout As Variant Ptr, Byval Local As Variant Ptr) As HRESULT
		Declare Abstract Function Get_CustomProperties (Byval RHS As CustomProperties Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SmartTags (Byval RHS As SmartTags Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Protection (Byval RHS As Protection Ptr Ptr) As HRESULT
		Declare Abstract Function PasteSpecial (Byval Format As Variant Ptr, Byval Link As Variant Ptr, Byval DisplayAsIcon As Variant Ptr, Byval IconFileName As Variant Ptr, Byval IconIndex As Variant Ptr, Byval IconLabel As Variant Ptr, Byval NoHTMLFormatting As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Protect (Byval Password As Variant Ptr, Byval DrawingObjects_v As Variant Ptr, Byval Contents As Variant Ptr, Byval Scenarios As Variant Ptr, Byval UserInterfaceOnly As Variant Ptr, Byval AllowFormattingCells As Variant Ptr, Byval AllowFormattingColumns As Variant Ptr, Byval AllowFormattingRows As Variant Ptr, Byval AllowInsertingColumns As Variant Ptr, Byval AllowInsertingRows As Variant Ptr, Byval AllowInsertingHyperlinks As Variant Ptr, Byval AllowDeletingColumns As Variant Ptr, Byval AllowDeletingRows As Variant Ptr, Byval AllowSorting As Variant Ptr, Byval AllowFiltering As Variant Ptr, Byval AllowUsingPivotTables As Variant Ptr) As HRESULT
		Declare Abstract Function _Dummy113 () As HRESULT
		Declare Abstract Function _Dummy114 () As HRESULT
		Declare Abstract Function _Dummy115 () As HRESULT
		Declare Abstract Function PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr) As HRESULT
		Declare Abstract Function Get_EnableFormatConditionsCalculation (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableFormatConditionsCalculation (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Sort (Byval RHS As Sort Ptr Ptr) As HRESULT
		Declare Abstract Function ExportAsFixedFormat (Byval Type_v As XlFixedFormatType, Byval Filename As Variant Ptr, Byval Quality As Variant Ptr, Byval IncludeDocProperties As Variant Ptr, Byval IgnorePrintAreas As Variant Ptr, Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval OpenAfterPublish As Variant Ptr, Byval FixedFormatExtClassPtr As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintedCommentPages (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_DefaultButton (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_DefaultButton (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_DialogFrame (Byval RHS As DialogFrame Ptr Ptr) As HRESULT
		Declare Abstract Function EditBoxes (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Focus (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Focus (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Hide (Byval Cancel As Variant Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Show (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
	End Type 'IDialogSheet_

	Type IDialogSheets_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval Count As Variant Ptr, Byval RHS As DialogSheet Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval lcid As Long) As HRESULT
		Declare Abstract Function _Dummy7 () As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Move (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function __PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function PrintPreview (Byval EnableChanges As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_HPageBreaks (Byval RHS As HPageBreaks Ptr Ptr) As HRESULT
		Declare Abstract Function Get_VPageBreaks (Byval RHS As VPageBreaks Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval lcid As Long, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr) As HRESULT
		Declare Abstract Function Add2 (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval Count As Variant Ptr, Byval NewLayout As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
	End Type 'IDialogSheets_

	Type IWorksheets_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval Count As Variant Ptr, Byval Type_v As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval lcid As Long) As HRESULT
		Declare Abstract Function FillAcrossSheets (Byval Range As Range Ptr, Byval Type_v As XlFillWith, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Move (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function __PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function PrintPreview (Byval EnableChanges As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_HPageBreaks (Byval RHS As HPageBreaks Ptr Ptr) As HRESULT
		Declare Abstract Function Get_VPageBreaks (Byval RHS As VPageBreaks Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval lcid As Long, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval IgnorePrintAreas As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Add2 (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval Count As Variant Ptr, Byval NewLayout As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
	End Type 'IWorksheets_

	Type IPageSetup_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BlackAndWhite (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_BlackAndWhite (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_BottomMargin (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_BottomMargin (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_CenterFooter (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_CenterFooter (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_CenterHeader (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_CenterHeader (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_CenterHorizontally (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_CenterHorizontally (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_CenterVertically (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_CenterVertically (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ChartSize (Byval RHS As XlObjectSize Ptr) As HRESULT
		Declare Abstract Function Let_ChartSize (Byval RHS As XlObjectSize) As HRESULT
		Declare Abstract Function Get_Draft (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Draft (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_FirstPageNumber (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_FirstPageNumber (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_FitToPagesTall (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_FitToPagesTall (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_FitToPagesWide (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_FitToPagesWide (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_FooterMargin (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_FooterMargin (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_HeaderMargin (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_HeaderMargin (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_LeftFooter (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_LeftFooter (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_LeftHeader (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_LeftHeader (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_LeftMargin (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_LeftMargin (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Order (Byval RHS As XlOrder Ptr) As HRESULT
		Declare Abstract Function Let_Order (Byval RHS As XlOrder) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As XlPageOrientation Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As XlPageOrientation) As HRESULT
		Declare Abstract Function Get_PaperSize (Byval RHS As XlPaperSize Ptr) As HRESULT
		Declare Abstract Function Let_PaperSize (Byval RHS As XlPaperSize) As HRESULT
		Declare Abstract Function Get_PrintArea (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_PrintArea (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_PrintGridlines (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintGridlines (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PrintHeadings (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintHeadings (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PrintNotes (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintNotes (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PrintQuality (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_PrintQuality (Byval Index As Variant Ptr, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintTitleColumns (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_PrintTitleColumns (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_PrintTitleRows (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_PrintTitleRows (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_RightFooter (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_RightFooter (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_RightHeader (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_RightHeader (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_RightMargin (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_RightMargin (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopMargin (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_TopMargin (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Zoom (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Zoom (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintComments (Byval RHS As XlPrintLocation Ptr) As HRESULT
		Declare Abstract Function Let_PrintComments (Byval RHS As XlPrintLocation) As HRESULT
		Declare Abstract Function Get_PrintErrors (Byval RHS As XlPrintErrors Ptr) As HRESULT
		Declare Abstract Function Let_PrintErrors (Byval RHS As XlPrintErrors) As HRESULT
		Declare Abstract Function Get_CenterHeaderPicture (Byval RHS As Graphic Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CenterFooterPicture (Byval RHS As Graphic Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LeftHeaderPicture (Byval RHS As Graphic Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LeftFooterPicture (Byval RHS As Graphic Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RightHeaderPicture (Byval RHS As Graphic Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RightFooterPicture (Byval RHS As Graphic Ptr Ptr) As HRESULT
		Declare Abstract Function Get_OddAndEvenPagesHeaderFooter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_OddAndEvenPagesHeaderFooter (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DifferentFirstPageHeaderFooter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DifferentFirstPageHeaderFooter (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ScaleWithDocHeaderFooter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ScaleWithDocHeaderFooter (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AlignMarginsHeaderFooter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AlignMarginsHeaderFooter (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Pages (Byval RHS As Pages Ptr Ptr) As HRESULT
		Declare Abstract Function Get_EvenPage (Byval RHS As Page Ptr Ptr) As HRESULT
		Declare Abstract Function Get_FirstPage (Byval RHS As Page Ptr Ptr) As HRESULT
	End Type 'IPageSetup_

	Type INames_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Name As Variant Ptr, Byval RefersTo As Variant Ptr, Byval Visible As Variant Ptr, Byval MacroType As Variant Ptr, Byval ShortcutKey As Variant Ptr, Byval Category As Variant Ptr, Byval NameLocal As Variant Ptr, Byval RefersToLocal As Variant Ptr, Byval CategoryLocal As Variant Ptr, Byval RefersToR1C1 As Variant Ptr, Byval RefersToR1C1Local As Variant Ptr, Byval RHS As Name Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval IndexLocal As Variant Ptr, Byval RefersTo As Variant Ptr, Byval lcid As Long, Byval RHS As Name Ptr Ptr) As HRESULT
		Declare Abstract Function _Default (Byval Index As Variant Ptr, Byval IndexLocal As Variant Ptr, Byval RefersTo As Variant Ptr, Byval lcid As Long, Byval RHS As Name Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'INames_

	Type IName_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Category (Byval lcidIn As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Category (Byval lcidIn As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_CategoryLocal (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_CategoryLocal (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Get_MacroType (Byval RHS As XlXLMMacroType Ptr) As HRESULT
		Declare Abstract Function Let_MacroType (Byval RHS As XlXLMMacroType) As HRESULT
		Declare Abstract Function Get_Name (Byval lcidIn As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval lcidIn As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_RefersTo (Byval lcidIn As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_RefersTo (Byval lcidIn As Long, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ShortcutKey (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ShortcutKey (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_NameLocal (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_NameLocal (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_RefersToLocal (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_RefersToLocal (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_RefersToR1C1 (Byval lcidIn As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_RefersToR1C1 (Byval lcidIn As Long, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_RefersToR1C1Local (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_RefersToR1C1Local (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_RefersToRange (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Comment (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Comment (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_WorkbookParameter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_WorkbookParameter (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ValidWorkbookParameter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
	End Type 'IName_

	Type IChartObject_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function _Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ZOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Activate (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Chart (Byval RHS As Chart Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ProtectChartObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ProtectChartObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RoundedCorners (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RoundedCorners (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
	End Type 'IChartObject_

	Type IChartObjects_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy3 () As HRESULT
		Declare Abstract Function BringToFront (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function _Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Cut (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy12 () As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy15 () As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function SendToBack (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy22 () As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function _Dummy25 () As HRESULT
		Declare Abstract Function Get_ShapeRange (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy27 () As HRESULT
		Declare Abstract Function _Dummy28 () As HRESULT
		Declare Abstract Function Get_ProtectChartObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ProtectChartObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RoundedCorners (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RoundedCorners (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double, Byval RHS As ChartObject Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Group (Byval RHS As GroupObject Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function _Default (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
	End Type 'IChartObjects_

	Type IMailer_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BCCRecipients (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_BCCRecipients (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_CCRecipients (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_CCRecipients (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Enclosures (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Enclosures (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Received (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_SendDateTime (Byval RHS As Date_ Ptr) As HRESULT
		Declare Abstract Function Get_Sender (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Subject (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Subject (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ToRecipients (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ToRecipients (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_WhichAddress (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_WhichAddress (Byval RHS As Variant Ptr) As HRESULT
	End Type 'IMailer_

	Type ICustomViews_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval ViewName As Variant Ptr, Byval RHS As CustomView Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval ViewName As BSTR, Byval PrintSettings As Variant Ptr, Byval RowColSettings As Variant Ptr, Byval RHS As CustomView Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval ViewName As Variant Ptr, Byval RHS As CustomView Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'ICustomViews_

	Type ICustomView_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_PrintSettings (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_RowColSettings (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Show () As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
	End Type 'ICustomView_

	Type IFormatConditions_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Type_v As XlFormatConditionType, Byval Operator_v As Variant Ptr, Byval Formula1 As Variant Ptr, Byval Formula2 As Variant Ptr, Byval String_v As Variant Ptr, Byval TextOperator As Variant Ptr, Byval DateOperator As Variant Ptr, Byval ScopeType As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function AddColorScale (Byval ColorScaleType As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function AddDatabar (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function AddIconSetCondition (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function AddTop10 (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function AddAboveAverage (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function AddUniqueValues (Byval RHS As IDispatch Ptr Ptr) As HRESULT
	End Type 'IFormatConditions_

	Type IFormatCondition_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Modify (Byval Type_v As XlFormatConditionType, Byval Operator_v As Variant Ptr, Byval Formula1 As Variant Ptr, Byval Formula2 As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Operator (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Formula1 (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Formula2 (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Borders (Byval RHS As Borders Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Modify (Byval Type_v As XlFormatConditionType, Byval Operator_v As Variant Ptr, Byval Formula1 As Variant Ptr, Byval Formula2 As Variant Ptr, Byval String_v As Variant Ptr, Byval Operator2 As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_TextOperator (Byval RHS As XlContainsOperator Ptr) As HRESULT
		Declare Abstract Function Let_TextOperator (Byval RHS As XlContainsOperator) As HRESULT
		Declare Abstract Function Get_DateOperator (Byval RHS As XlTimePeriods Ptr) As HRESULT
		Declare Abstract Function Let_DateOperator (Byval RHS As XlTimePeriods) As HRESULT
		Declare Abstract Function Get_NumberFormat (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_NumberFormat (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Priority (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Priority (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_StopIfTrue (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_StopIfTrue (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AppliesTo (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function ModifyAppliesToRange (Byval Range As Range Ptr) As HRESULT
		Declare Abstract Function SetFirstPriority () As HRESULT
		Declare Abstract Function SetLastPriority () As HRESULT
		Declare Abstract Function Get_PTCondition (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ScopeType (Byval RHS As XlPivotConditionScope Ptr) As HRESULT
		Declare Abstract Function Let_ScopeType (Byval RHS As XlPivotConditionScope) As HRESULT
	End Type 'IFormatCondition_

	Type IComments_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Long, Byval RHS As Comment Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Long, Byval RHS As Comment Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IComments_

	Type IComment_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Author (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Shape (Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Text (Byval Text_v As Variant Ptr, Byval Start As Variant Ptr, Byval Overwrite As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Next_ (Byval RHS As Comment Ptr Ptr) As HRESULT
		Declare Abstract Function Previous (Byval RHS As Comment Ptr Ptr) As HRESULT
	End Type 'IComment_

	Type IRefreshEvents_ Extends CAIDispatch
		Declare Abstract Function BeforeRefresh (Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function AfterRefresh (Byval Success As VARIANT_BOOL) As HRESULT
	End Type 'IRefreshEvents_

	Type _IQueryTable_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_FieldNames (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_FieldNames (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RowNumbers (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RowNumbers (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_FillAdjacentFormulas (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_FillAdjacentFormulas (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HasAutoFormat (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasAutoFormat (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RefreshOnFileOpen (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RefreshOnFileOpen (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Refreshing (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_FetchedRowOverflow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_BackgroundQuery (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_BackgroundQuery (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function CancelRefresh () As HRESULT
		Declare Abstract Function Get_RefreshStyle (Byval RHS As XlCellInsertionMode Ptr) As HRESULT
		Declare Abstract Function Let_RefreshStyle (Byval RHS As XlCellInsertionMode) As HRESULT
		Declare Abstract Function Get_EnableRefresh (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableRefresh (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SavePassword (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SavePassword (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Destination (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Connection (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Connection (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Sql (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Sql (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PostText (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_PostText (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ResultRange (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Refresh (Byval BackgroundQuery As Variant Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_Parameters (Byval RHS As Parameters Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Recordset (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Set_Recordset (Byval RHS As IDispatch Ptr) As HRESULT
		Declare Abstract Function Get_SaveData (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SaveData (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TablesOnlyFromHTML (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TablesOnlyFromHTML (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_EnableEditing (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableEditing (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TextFilePlatform (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_TextFilePlatform (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_TextFileStartRow (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_TextFileStartRow (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_TextFileParseType (Byval RHS As XlTextParsingType Ptr) As HRESULT
		Declare Abstract Function Let_TextFileParseType (Byval RHS As XlTextParsingType) As HRESULT
		Declare Abstract Function Get_TextFileTextQualifier (Byval RHS As XlTextQualifier Ptr) As HRESULT
		Declare Abstract Function Let_TextFileTextQualifier (Byval RHS As XlTextQualifier) As HRESULT
		Declare Abstract Function Get_TextFileConsecutiveDelimiter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TextFileConsecutiveDelimiter (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TextFileTabDelimiter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TextFileTabDelimiter (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TextFileSemicolonDelimiter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TextFileSemicolonDelimiter (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TextFileCommaDelimiter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TextFileCommaDelimiter (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TextFileSpaceDelimiter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TextFileSpaceDelimiter (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TextFileOtherDelimiter (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_TextFileOtherDelimiter (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_TextFileColumnDataTypes (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_TextFileColumnDataTypes (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_TextFileFixedColumnWidths (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_TextFileFixedColumnWidths (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PreserveColumnInfo (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PreserveColumnInfo (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PreserveFormatting (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PreserveFormatting (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AdjustColumnWidth (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AdjustColumnWidth (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_CommandText (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_CommandText (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_CommandType (Byval RHS As XlCmdType Ptr) As HRESULT
		Declare Abstract Function Let_CommandType (Byval RHS As XlCmdType) As HRESULT
		Declare Abstract Function Get_TextFilePromptOnRefresh (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TextFilePromptOnRefresh (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_QueryType (Byval RHS As XlQueryType Ptr) As HRESULT
		Declare Abstract Function Get_MaintainConnection (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_MaintainConnection (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TextFileDecimalSeparator (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_TextFileDecimalSeparator (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_TextFileThousandsSeparator (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_TextFileThousandsSeparator (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_RefreshPeriod (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_RefreshPeriod (Byval RHS As Long) As HRESULT
		Declare Abstract Function ResetTimer () As HRESULT
		Declare Abstract Function Get_WebSelectionType (Byval RHS As XlWebSelectionType Ptr) As HRESULT
		Declare Abstract Function Let_WebSelectionType (Byval RHS As XlWebSelectionType) As HRESULT
		Declare Abstract Function Get_WebFormatting (Byval RHS As XlWebFormatting Ptr) As HRESULT
		Declare Abstract Function Let_WebFormatting (Byval RHS As XlWebFormatting) As HRESULT
		Declare Abstract Function Get_WebTables (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_WebTables (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_WebPreFormattedTextToColumns (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_WebPreFormattedTextToColumns (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_WebSingleBlockTextImport (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_WebSingleBlockTextImport (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_WebDisableDateRecognition (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_WebDisableDateRecognition (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_WebConsecutiveDelimitersAsOne (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_WebConsecutiveDelimitersAsOne (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_WebDisableRedirections (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_WebDisableRedirections (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_EditWebPage (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_EditWebPage (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_SourceConnectionFile (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_SourceConnectionFile (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_SourceDataFile (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_SourceDataFile (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_RobustConnect (Byval RHS As XlRobustConnect Ptr) As HRESULT
		Declare Abstract Function Let_RobustConnect (Byval RHS As XlRobustConnect) As HRESULT
		Declare Abstract Function Get_TextFileTrailingMinusNumbers (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TextFileTrailingMinusNumbers (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function SaveAsODC (Byval ODCFileName As BSTR, Byval Description As Variant Ptr, Byval Keywords As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ListObject (Byval RHS As ListObject Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TextFileVisualLayout (Byval RHS As XlTextVisualLayoutType Ptr) As HRESULT
		Declare Abstract Function Let_TextFileVisualLayout (Byval RHS As XlTextVisualLayoutType) As HRESULT
		Declare Abstract Function Get_WorkbookConnection (Byval RHS As WorkbookConnection Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Sort (Byval RHS As Sort Ptr Ptr) As HRESULT
	End Type '_IQueryTable_

	Type IQueryTables_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Add (Byval Connection As Variant Ptr, Byval Destination As Range Ptr, Byval Sql As Variant Ptr, Byval RHS As QueryTable Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As QueryTable Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As QueryTable Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IQueryTables_

	Type IParameter_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DataType (Byval RHS As XlParameterDataType Ptr) As HRESULT
		Declare Abstract Function Let_DataType (Byval RHS As XlParameterDataType) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As XlParameterType Ptr) As HRESULT
		Declare Abstract Function Get_PromptString (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SourceRange (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function SetParam (Byval Type_v As XlParameterType, Byval Value As Variant Ptr) As HRESULT
		Declare Abstract Function Get_RefreshOnChange (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RefreshOnChange (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'IParameter_

	Type IParameters_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Name As BSTR, Byval iDataType As Variant Ptr, Byval RHS As Parameter Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As Parameter Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As Parameter Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IParameters_

	Type IODBCError_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SqlState (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_ErrorString (Byval RHS As BSTR Ptr) As HRESULT
	End Type 'IODBCError_

	Type IODBCErrors_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Long, Byval RHS As ODBCError Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Long, Byval RHS As ODBCError Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IODBCErrors_

	Type IValidation_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Type_v As XlDVType, Byval AlertStyle As Variant Ptr, Byval Operator_v As Variant Ptr, Byval Formula1 As Variant Ptr, Byval Formula2 As Variant Ptr) As HRESULT
		Declare Abstract Function Get_AlertStyle (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_IgnoreBlank (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_IgnoreBlank (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_IMEMode (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_IMEMode (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_InCellDropdown (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_InCellDropdown (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Get_ErrorMessage (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ErrorMessage (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ErrorTitle (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ErrorTitle (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_InputMessage (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_InputMessage (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_InputTitle (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_InputTitle (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Formula1 (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Formula2 (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Modify (Byval Type_v As Variant Ptr, Byval AlertStyle As Variant Ptr, Byval Operator_v As Variant Ptr, Byval Formula1 As Variant Ptr, Byval Formula2 As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Operator (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShowError (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowError (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowInput (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowInput (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
	End Type 'IValidation_

	Type IHyperlinks_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Anchor As IDispatch Ptr, Byval Address As BSTR, Byval SubAddress As Variant Ptr, Byval ScreenTip As Variant Ptr, Byval TextToDisplay As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As Hyperlink Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As Hyperlink Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
	End Type 'IHyperlinks_

	Type IHyperlink_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Range (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Shape (Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SubAddress (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_SubAddress (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Address (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Address (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function AddToFavorites () As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Follow (Byval NewWindow As Variant Ptr, Byval AddHistory As Variant Ptr, Byval ExtraInfo As Variant Ptr, Byval Method As Variant Ptr, Byval HeaderInfo As Variant Ptr) As HRESULT
		Declare Abstract Function Get_EmailSubject (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_EmailSubject (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ScreenTip (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ScreenTip (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_TextToDisplay (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_TextToDisplay (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function CreateNewDocument (Byval Filename As BSTR, Byval EditNow As VARIANT_BOOL, Byval Overwrite As VARIANT_BOOL) As HRESULT
	End Type 'IHyperlink_

	Type IAutoFilter_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Range (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Filters (Byval RHS As Filters Ptr Ptr) As HRESULT
		Declare Abstract Function Get_FilterMode (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_Sort (Byval RHS As Sort Ptr Ptr) As HRESULT
		Declare Abstract Function ApplyFilter () As HRESULT
		Declare Abstract Function ShowAllData () As HRESULT
	End Type 'IAutoFilter_

	Type IFilters_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Long, Byval RHS As Filter Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Long, Byval RHS As Filter Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IFilters_

	Type IFilter_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_On (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_Criteria1 (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Operator (Byval RHS As XlAutoFilterOperator Ptr) As HRESULT
		Declare Abstract Function Get_Criteria2 (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Operator (Byval RHS As XlAutoFilterOperator Ptr) As HRESULT
		Declare Abstract Function Let_Operator (Byval RHS As XlAutoFilterOperator) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
	End Type 'IFilter_

	Type IAutoCorrect_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function AddReplacement (Byval What As BSTR, Byval Replacement As BSTR, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CapitalizeNamesOfDays (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_CapitalizeNamesOfDays (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function DeleteReplacement (Byval What As BSTR, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ReplacementList (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ReplacementList (Byval Index As Variant Ptr, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ReplaceText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ReplaceText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TwoInitialCapitals (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TwoInitialCapitals (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_CorrectSentenceCap (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_CorrectSentenceCap (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_CorrectCapsLock (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_CorrectCapsLock (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayAutoCorrectOptions (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayAutoCorrectOptions (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AutoExpandListRange (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoExpandListRange (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AutoFillFormulasInLists (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoFillFormulasInLists (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'IAutoCorrect_

	Type IBorder_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Color (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Color (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ColorIndex (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ColorIndex (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_LineStyle (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_LineStyle (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Weight (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Weight (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ThemeColor (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ThemeColor (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_TintAndShade (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_TintAndShade (Byval RHS As Variant Ptr) As HRESULT
	End Type 'IBorder_

	Type IInterior_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Color (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Color (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ColorIndex (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ColorIndex (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_InvertIfNegative (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_InvertIfNegative (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Pattern (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Pattern (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PatternColor (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_PatternColor (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PatternColorIndex (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_PatternColorIndex (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ThemeColor (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ThemeColor (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_TintAndShade (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_TintAndShade (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PatternThemeColor (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_PatternThemeColor (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PatternTintAndShade (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_PatternTintAndShade (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Gradient (Byval RHS As IDispatch Ptr Ptr) As HRESULT
	End Type 'IInterior_

	Type IChartFillFormat_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function OneColorGradient (Byval Style As Office.MsoGradientStyle, Byval Variant As Long, Byval Degree As Single) As HRESULT
		Declare Abstract Function TwoColorGradient (Byval Style As Office.MsoGradientStyle, Byval Variant As Long) As HRESULT
		Declare Abstract Function PresetTextured (Byval PresetTexture As Office.MsoPresetTexture) As HRESULT
		Declare Abstract Function Solid () As HRESULT
		Declare Abstract Function Patterned (Byval Pattern As Office.MsoPatternType) As HRESULT
		Declare Abstract Function UserPicture (Byval PictureFile As Variant Ptr, Byval PictureFormat As Variant Ptr, Byval PictureStackUnit As Variant Ptr, Byval PicturePlacement As Variant Ptr) As HRESULT
		Declare Abstract Function UserTextured (Byval TextureFile As BSTR) As HRESULT
		Declare Abstract Function PresetGradient (Byval Style As Office.MsoGradientStyle, Byval Variant As Long, Byval PresetGradientType As Office.MsoPresetGradientType) As HRESULT
		Declare Abstract Function Get_BackColor (Byval RHS As ChartColorFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ForeColor (Byval RHS As ChartColorFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_GradientColorType (Byval RHS As Office.MsoGradientColorType Ptr) As HRESULT
		Declare Abstract Function Get_GradientDegree (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Get_GradientStyle (Byval RHS As Office.MsoGradientStyle Ptr) As HRESULT
		Declare Abstract Function Get_GradientVariant (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Pattern (Byval RHS As Office.MsoPatternType Ptr) As HRESULT
		Declare Abstract Function Get_PresetGradientType (Byval RHS As Office.MsoPresetGradientType Ptr) As HRESULT
		Declare Abstract Function Get_PresetTexture (Byval RHS As Office.MsoPresetTexture Ptr) As HRESULT
		Declare Abstract Function Get_TextureName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_TextureType (Byval RHS As Office.MsoTextureType Ptr) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As Office.MsoFillType Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As Office.MsoTriState) As HRESULT
	End Type 'IChartFillFormat_

	Type IChartColorFormat_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SchemeColor (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_SchemeColor (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_RGB (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As Long Ptr) As HRESULT
	End Type 'IChartColorFormat_

	Type IAxis_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AxisBetweenCategories (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AxisBetweenCategories (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AxisGroup (Byval RHS As XlAxisGroup Ptr) As HRESULT
		Declare Abstract Function Get_AxisTitle (Byval RHS As AxisTitle Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CategoryNames (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_CategoryNames (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Crosses (Byval RHS As XlAxisCrosses Ptr) As HRESULT
		Declare Abstract Function Let_Crosses (Byval RHS As XlAxisCrosses) As HRESULT
		Declare Abstract Function Get_CrossesAt (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_CrossesAt (Byval RHS As Double) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HasMajorGridlines (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasMajorGridlines (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HasMinorGridlines (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasMinorGridlines (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HasTitle (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasTitle (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_MajorGridlines (Byval RHS As Gridlines Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MajorTickMark (Byval RHS As XlTickMark Ptr) As HRESULT
		Declare Abstract Function Let_MajorTickMark (Byval RHS As XlTickMark) As HRESULT
		Declare Abstract Function Get_MajorUnit (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_MajorUnit (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_MajorUnitIsAuto (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_MajorUnitIsAuto (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_MaximumScale (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_MaximumScale (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_MaximumScaleIsAuto (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_MaximumScaleIsAuto (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_MinimumScale (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_MinimumScale (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_MinimumScaleIsAuto (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_MinimumScaleIsAuto (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_MinorGridlines (Byval RHS As Gridlines Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MinorTickMark (Byval RHS As XlTickMark Ptr) As HRESULT
		Declare Abstract Function Let_MinorTickMark (Byval RHS As XlTickMark) As HRESULT
		Declare Abstract Function Get_MinorUnit (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_MinorUnit (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_MinorUnitIsAuto (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_MinorUnitIsAuto (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ReversePlotOrder (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ReversePlotOrder (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ScaleType (Byval RHS As XlScaleType Ptr) As HRESULT
		Declare Abstract Function Let_ScaleType (Byval RHS As XlScaleType) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TickLabelPosition (Byval RHS As XlTickLabelPosition Ptr) As HRESULT
		Declare Abstract Function Let_TickLabelPosition (Byval RHS As XlTickLabelPosition) As HRESULT
		Declare Abstract Function Get_TickLabels (Byval RHS As TickLabels Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TickLabelSpacing (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_TickLabelSpacing (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_TickMarkSpacing (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_TickMarkSpacing (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As XlAxisType Ptr) As HRESULT
		Declare Abstract Function Let_Type (Byval RHS As XlAxisType) As HRESULT
		Declare Abstract Function Get_BaseUnit (Byval RHS As XlTimeUnit Ptr) As HRESULT
		Declare Abstract Function Let_BaseUnit (Byval RHS As XlTimeUnit) As HRESULT
		Declare Abstract Function Get_BaseUnitIsAuto (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_BaseUnitIsAuto (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_MajorUnitScale (Byval RHS As XlTimeUnit Ptr) As HRESULT
		Declare Abstract Function Let_MajorUnitScale (Byval RHS As XlTimeUnit) As HRESULT
		Declare Abstract Function Get_MinorUnitScale (Byval RHS As XlTimeUnit Ptr) As HRESULT
		Declare Abstract Function Let_MinorUnitScale (Byval RHS As XlTimeUnit) As HRESULT
		Declare Abstract Function Get_CategoryType (Byval RHS As XlCategoryType Ptr) As HRESULT
		Declare Abstract Function Let_CategoryType (Byval RHS As XlCategoryType) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_DisplayUnit (Byval RHS As XlDisplayUnit Ptr) As HRESULT
		Declare Abstract Function Let_DisplayUnit (Byval RHS As XlDisplayUnit) As HRESULT
		Declare Abstract Function Get_DisplayUnitCustom (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_DisplayUnitCustom (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_HasDisplayUnitLabel (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasDisplayUnitLabel (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayUnitLabel (Byval RHS As DisplayUnitLabel Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LogBase (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_LogBase (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_TickLabelSpacingIsAuto (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TickLabelSpacingIsAuto (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
	End Type 'IAxis_

	Type IChartTitle_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Fill (Byval RHS As ChartFillFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_IncludeInLayout (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_IncludeInLayout (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Position (Byval RHS As XlChartElementPosition Ptr) As HRESULT
		Declare Abstract Function Let_Position (Byval RHS As XlChartElementPosition) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_FormulaR1C1 (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_FormulaR1C1 (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_FormulaLocal (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_FormulaLocal (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_FormulaR1C1Local (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_FormulaR1C1Local (Byval RHS As BSTR) As HRESULT
	End Type 'IChartTitle_

	Type IAxisTitle_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Fill (Byval RHS As ChartFillFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_IncludeInLayout (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_IncludeInLayout (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Position (Byval RHS As XlChartElementPosition Ptr) As HRESULT
		Declare Abstract Function Let_Position (Byval RHS As XlChartElementPosition) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_FormulaR1C1 (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_FormulaR1C1 (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_FormulaLocal (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_FormulaLocal (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_FormulaR1C1Local (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_FormulaR1C1Local (Byval RHS As BSTR) As HRESULT
	End Type 'IAxisTitle_

	Type IChartGroup_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AxisGroup (Byval RHS As XlAxisGroup Ptr) As HRESULT
		Declare Abstract Function Let_AxisGroup (Byval RHS As XlAxisGroup) As HRESULT
		Declare Abstract Function Get_DoughnutHoleSize (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_DoughnutHoleSize (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_DownBars (Byval RHS As DownBars Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DropLines (Byval RHS As DropLines Ptr Ptr) As HRESULT
		Declare Abstract Function Get_FirstSliceAngle (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_FirstSliceAngle (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_GapWidth (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_GapWidth (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_HasDropLines (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasDropLines (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HasHiLoLines (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasHiLoLines (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HasRadarAxisLabels (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasRadarAxisLabels (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HasSeriesLines (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasSeriesLines (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HasUpDownBars (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasUpDownBars (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HiLoLines (Byval RHS As HiLoLines Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Overlap (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Overlap (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_RadarAxisLabels (Byval RHS As TickLabels Ptr Ptr) As HRESULT
		Declare Abstract Function SeriesCollection (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SeriesLines (Byval RHS As SeriesLines Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SubType (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_SubType (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Type (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_UpBars (Byval RHS As UpBars Ptr Ptr) As HRESULT
		Declare Abstract Function Get_VaryByCategories (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_VaryByCategories (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SizeRepresents (Byval RHS As XlSizeRepresents Ptr) As HRESULT
		Declare Abstract Function Let_SizeRepresents (Byval RHS As XlSizeRepresents) As HRESULT
		Declare Abstract Function Get_BubbleScale (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_BubbleScale (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_ShowNegativeBubbles (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowNegativeBubbles (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SplitType (Byval RHS As XlChartSplitType Ptr) As HRESULT
		Declare Abstract Function Let_SplitType (Byval RHS As XlChartSplitType) As HRESULT
		Declare Abstract Function Get_SplitValue (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_SplitValue (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_SecondPlotSize (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_SecondPlotSize (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Has3DShading (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Has3DShading (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function FullCategoryCollection (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function CategoryCollection (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BinsType (Byval RHS As XlBinsType Ptr) As HRESULT
		Declare Abstract Function Let_BinsType (Byval RHS As XlBinsType) As HRESULT
		Declare Abstract Function Get_BinWidthValue (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_BinWidthValue (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_BinsCountValue (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_BinsCountValue (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_BinsOverflowEnabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_BinsOverflowEnabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_BinsOverflowValue (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_BinsOverflowValue (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_BinsUnderflowEnabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_BinsUnderflowEnabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_BinsUnderflowValue (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_BinsUnderflowValue (Byval RHS As Double) As HRESULT
	End Type 'IChartGroup_

	Type IChartGroups_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As ChartGroup Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IChartGroups_

	Type IAxes_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Type_v As XlAxisType, Byval AxisGroup As XlAxisGroup, Byval RHS As Axis Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function _Default (Byval Type_v As XlAxisType, Byval AxisGroup As XlAxisGroup, Byval RHS As Axis Ptr Ptr) As HRESULT
	End Type 'IAxes_

	Type IPoints_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Long, Byval RHS As Point Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function _Default (Byval Index As Long, Byval RHS As Point Ptr Ptr) As HRESULT
	End Type 'IPoints_

	Type IPoint_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _ApplyDataLabels (Byval Type_v As XlDataLabelsType, Byval LegendKey As Variant Ptr, Byval AutoText As Variant Ptr, Byval HasLeaderLines As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function ClearFormats (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DataLabel (Byval RHS As DataLabel Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Explosion (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Explosion (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_HasDataLabel (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasDataLabel (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_InvertIfNegative (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_InvertIfNegative (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_MarkerBackgroundColor (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_MarkerBackgroundColor (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_MarkerBackgroundColorIndex (Byval RHS As XlColorIndex Ptr) As HRESULT
		Declare Abstract Function Let_MarkerBackgroundColorIndex (Byval RHS As XlColorIndex) As HRESULT
		Declare Abstract Function Get_MarkerForegroundColor (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_MarkerForegroundColor (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_MarkerForegroundColorIndex (Byval RHS As XlColorIndex Ptr) As HRESULT
		Declare Abstract Function Let_MarkerForegroundColorIndex (Byval RHS As XlColorIndex) As HRESULT
		Declare Abstract Function Get_MarkerSize (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_MarkerSize (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_MarkerStyle (Byval RHS As XlMarkerStyle Ptr) As HRESULT
		Declare Abstract Function Let_MarkerStyle (Byval RHS As XlMarkerStyle) As HRESULT
		Declare Abstract Function Paste (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PictureType (Byval RHS As XlChartPictureType Ptr) As HRESULT
		Declare Abstract Function Let_PictureType (Byval RHS As XlChartPictureType) As HRESULT
		Declare Abstract Function Get_PictureUnit (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_PictureUnit (Byval RHS As Long) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ApplyPictToSides (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ApplyPictToSides (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ApplyPictToFront (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ApplyPictToFront (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ApplyPictToEnd (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ApplyPictToEnd (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SecondaryPlot (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SecondaryPlot (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Fill (Byval RHS As ChartFillFormat Ptr Ptr) As HRESULT
		Declare Abstract Function ApplyDataLabels (Byval Type_v As XlDataLabelsType, Byval LegendKey As Variant Ptr, Byval AutoText As Variant Ptr, Byval HasLeaderLines As Variant Ptr, Byval ShowSeriesName As Variant Ptr, Byval ShowCategoryName As Variant Ptr, Byval ShowValue As Variant Ptr, Byval ShowPercentage As Variant Ptr, Byval ShowBubbleSize As Variant Ptr, Byval Separator As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Has3DEffect (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Has3DEffect (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PictureUnit2 (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_PictureUnit2 (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function PieSliceLocation (Byval loc As XlPieSliceLocation, Byval Index As XlPieSliceIndex, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_IsTotal (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_IsTotal (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'IPoint_

	Type ISeries_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _ApplyDataLabels (Byval Type_v As XlDataLabelsType, Byval LegendKey As Variant Ptr, Byval AutoText As Variant Ptr, Byval HasLeaderLines As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AxisGroup (Byval RHS As XlAxisGroup Ptr) As HRESULT
		Declare Abstract Function Let_AxisGroup (Byval RHS As XlAxisGroup) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function ClearFormats (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function DataLabels (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function ErrorBar (Byval Direction As XlErrorBarDirection, Byval Include As XlErrorBarInclude, Byval Type_v As XlErrorBarType, Byval Amount As Variant Ptr, Byval MinusValues As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ErrorBars (Byval RHS As ErrorBars Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Explosion (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Explosion (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_FormulaLocal (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_FormulaLocal (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_FormulaR1C1 (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_FormulaR1C1 (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_FormulaR1C1Local (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_FormulaR1C1Local (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_HasDataLabels (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasDataLabels (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HasErrorBars (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasErrorBars (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Fill (Byval RHS As ChartFillFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_InvertIfNegative (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_InvertIfNegative (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_MarkerBackgroundColor (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_MarkerBackgroundColor (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_MarkerBackgroundColorIndex (Byval RHS As XlColorIndex Ptr) As HRESULT
		Declare Abstract Function Let_MarkerBackgroundColorIndex (Byval RHS As XlColorIndex) As HRESULT
		Declare Abstract Function Get_MarkerForegroundColor (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_MarkerForegroundColor (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_MarkerForegroundColorIndex (Byval RHS As XlColorIndex Ptr) As HRESULT
		Declare Abstract Function Let_MarkerForegroundColorIndex (Byval RHS As XlColorIndex) As HRESULT
		Declare Abstract Function Get_MarkerSize (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_MarkerSize (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_MarkerStyle (Byval RHS As XlMarkerStyle Ptr) As HRESULT
		Declare Abstract Function Let_MarkerStyle (Byval RHS As XlMarkerStyle) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Paste (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PictureType (Byval RHS As XlChartPictureType Ptr) As HRESULT
		Declare Abstract Function Let_PictureType (Byval RHS As XlChartPictureType) As HRESULT
		Declare Abstract Function Get_PictureUnit (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_PictureUnit (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_PlotOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_PlotOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Points (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Smooth (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Smooth (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Trendlines (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Type (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_ChartType (Byval RHS As XlChartType Ptr) As HRESULT
		Declare Abstract Function Let_ChartType (Byval RHS As XlChartType) As HRESULT
		Declare Abstract Function ApplyCustomType (Byval ChartType As XlChartType) As HRESULT
		Declare Abstract Function Get_Values (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Values (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_XValues (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_XValues (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_BubbleSizes (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_BubbleSizes (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_BarShape (Byval RHS As XlBarShape Ptr) As HRESULT
		Declare Abstract Function Let_BarShape (Byval RHS As XlBarShape) As HRESULT
		Declare Abstract Function Get_ApplyPictToSides (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ApplyPictToSides (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ApplyPictToFront (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ApplyPictToFront (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ApplyPictToEnd (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ApplyPictToEnd (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Has3DEffect (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Has3DEffect (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HasLeaderLines (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasLeaderLines (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_LeaderLines (Byval RHS As LeaderLines Ptr Ptr) As HRESULT
		Declare Abstract Function ApplyDataLabels (Byval Type_v As XlDataLabelsType, Byval LegendKey As Variant Ptr, Byval AutoText As Variant Ptr, Byval HasLeaderLines As Variant Ptr, Byval ShowSeriesName As Variant Ptr, Byval ShowCategoryName As Variant Ptr, Byval ShowValue As Variant Ptr, Byval ShowPercentage As Variant Ptr, Byval ShowBubbleSize As Variant Ptr, Byval Separator As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PictureUnit2 (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_PictureUnit2 (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PlotColorIndex (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_InvertColor (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_InvertColor (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_InvertColorIndex (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_InvertColorIndex (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_IsFiltered (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_IsFiltered (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ParentDataLabelOption (Byval RHS As XlParentDataLabelOptions Ptr) As HRESULT
		Declare Abstract Function Let_ParentDataLabelOption (Byval RHS As XlParentDataLabelOptions) As HRESULT
		Declare Abstract Function Get_QuartileCalculationInclusiveMedian (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_QuartileCalculationInclusiveMedian (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'ISeries_

	Type ISeriesCollection_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Source As Variant Ptr, Byval Rowcol As XlRowCol, Byval SeriesLabels As Variant Ptr, Byval CategoryLabels As Variant Ptr, Byval Replace As Variant Ptr, Byval RHS As Series Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Extend (Byval Source As Variant Ptr, Byval Rowcol As Variant Ptr, Byval CategoryLabels As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As Series Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Paste (Byval Rowcol As XlRowCol, Byval SeriesLabels As Variant Ptr, Byval CategoryLabels As Variant Ptr, Byval Replace As Variant Ptr, Byval NewSeries_v As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function NewSeries (Byval RHS As Series Ptr Ptr) As HRESULT
		Declare Abstract Function _Default (Byval Index As Variant Ptr, Byval RHS As Series Ptr Ptr) As HRESULT
	End Type 'ISeriesCollection_

	Type IDataLabel_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Fill (Byval RHS As ChartFillFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_AutoText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_NumberFormat (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_NumberFormat (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_NumberFormatLinked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_NumberFormatLinked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_NumberFormatLocal (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_NumberFormatLocal (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ShowLegendKey (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowLegendKey (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Type (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Position (Byval RHS As XlDataLabelPosition Ptr) As HRESULT
		Declare Abstract Function Let_Position (Byval RHS As XlDataLabelPosition) As HRESULT
		Declare Abstract Function Get_ShowSeriesName (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowSeriesName (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowCategoryName (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowCategoryName (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowValue (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowValue (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowPercentage (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowPercentage (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowBubbleSize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowBubbleSize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Separator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Separator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get__Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_FormulaR1C1 (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_FormulaR1C1 (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_FormulaLocal (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_FormulaLocal (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_FormulaR1C1Local (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_FormulaR1C1Local (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ShowRange (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowRange (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
	End Type 'IDataLabel_

	Type IDataLabels_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Fill (Byval RHS As ChartFillFormat Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy9 () As HRESULT
		Declare Abstract Function _Dummy10 () As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function _Dummy13 () As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _Dummy16 () As HRESULT
		Declare Abstract Function _Dummy17 () As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_AutoText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_NumberFormat (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_NumberFormat (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_NumberFormatLinked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_NumberFormatLinked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_NumberFormatLocal (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_NumberFormatLocal (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ShowLegendKey (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowLegendKey (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Type (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Position (Byval RHS As XlDataLabelPosition Ptr) As HRESULT
		Declare Abstract Function Let_Position (Byval RHS As XlDataLabelPosition) As HRESULT
		Declare Abstract Function Get_ShowSeriesName (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowSeriesName (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowCategoryName (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowCategoryName (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowValue (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowValue (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowPercentage (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowPercentage (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowBubbleSize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowBubbleSize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Separator (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Separator (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As DataLabel Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function _Default (Byval Index As Variant Ptr, Byval RHS As DataLabel Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Propagate (Byval Index As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ShowRange (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowRange (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'IDataLabels_

	Type ILegendEntry_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_LegendKey (Byval RHS As LegendKey Ptr Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
	End Type 'ILegendEntry_

	Type ILegendEntries_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As LegendEntry Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function _Default (Byval Index As Variant Ptr, Byval RHS As LegendEntry Ptr Ptr) As HRESULT
	End Type 'ILegendEntries_

	Type ILegendKey_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function ClearFormats (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Fill (Byval RHS As ChartFillFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_InvertIfNegative (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_InvertIfNegative (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_MarkerBackgroundColor (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_MarkerBackgroundColor (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_MarkerBackgroundColorIndex (Byval RHS As XlColorIndex Ptr) As HRESULT
		Declare Abstract Function Let_MarkerBackgroundColorIndex (Byval RHS As XlColorIndex) As HRESULT
		Declare Abstract Function Get_MarkerForegroundColor (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_MarkerForegroundColor (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_MarkerForegroundColorIndex (Byval RHS As XlColorIndex Ptr) As HRESULT
		Declare Abstract Function Let_MarkerForegroundColorIndex (Byval RHS As XlColorIndex) As HRESULT
		Declare Abstract Function Get_MarkerSize (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_MarkerSize (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_MarkerStyle (Byval RHS As XlMarkerStyle Ptr) As HRESULT
		Declare Abstract Function Let_MarkerStyle (Byval RHS As XlMarkerStyle) As HRESULT
		Declare Abstract Function Get_PictureType (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_PictureType (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_PictureUnit (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_PictureUnit (Byval RHS As Long) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Smooth (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Smooth (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PictureUnit2 (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_PictureUnit2 (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
	End Type 'ILegendKey_

	Type ITrendlines_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Type_v As XlTrendlineType, Byval Order As Variant Ptr, Byval Period As Variant Ptr, Byval Forward As Variant Ptr, Byval Backward As Variant Ptr, Byval Intercept As Variant Ptr, Byval DisplayEquation As Variant Ptr, Byval DisplayRSquared As Variant Ptr, Byval Name As Variant Ptr, Byval RHS As Trendline Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As Trendline Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function _Default (Byval Index As Variant Ptr, Byval RHS As Trendline Ptr Ptr) As HRESULT
	End Type 'ITrendlines_

	Type ITrendline_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Backward (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Backward (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function ClearFormats (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DataLabel (Byval RHS As DataLabel Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DisplayEquation (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayEquation (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayRSquared (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayRSquared (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Forward (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Forward (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Intercept (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Intercept (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_InterceptIsAuto (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_InterceptIsAuto (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_NameIsAuto (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_NameIsAuto (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Order (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Order (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Period (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Period (Byval RHS As Long) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As XlTrendlineType Ptr) As HRESULT
		Declare Abstract Function Let_Type (Byval RHS As XlTrendlineType) As HRESULT
		Declare Abstract Function Get_Backward2 (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Backward2 (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Forward2 (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Forward2 (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
	End Type 'ITrendline_

	Type ICorners_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
	End Type 'ICorners_

	Type ISeriesLines_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
	End Type 'ISeriesLines_

	Type IHiLoLines_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
	End Type 'IHiLoLines_

	Type IGridlines_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
	End Type 'IGridlines_

	Type IDropLines_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
	End Type 'IDropLines_

	Type ILeaderLines_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Select_ () As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
	End Type 'ILeaderLines_

	Type IUpBars_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Fill (Byval RHS As ChartFillFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
	End Type 'IUpBars_

	Type IDownBars_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Fill (Byval RHS As ChartFillFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
	End Type 'IDownBars_

	Type IFloor_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function ClearFormats (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Fill (Byval RHS As ChartFillFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PictureType (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_PictureType (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Paste () As HRESULT
		Declare Abstract Function Get_Thickness (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Thickness (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
	End Type 'IFloor_

	Type IWalls_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function ClearFormats (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Fill (Byval RHS As ChartFillFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PictureType (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_PictureType (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Paste () As HRESULT
		Declare Abstract Function Get_PictureUnit (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_PictureUnit (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Thickness (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Thickness (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
	End Type 'IWalls_

	Type ITickLabels_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_NumberFormat (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_NumberFormat (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_NumberFormatLinked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_NumberFormatLinked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_NumberFormatLocal (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_NumberFormatLocal (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As XlTickLabelOrientation Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As XlTickLabelOrientation) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Depth (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Offset (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Offset (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Alignment (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Alignment (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_MultiLevel (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_MultiLevel (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
	End Type 'ITickLabels_

	Type IPlotArea_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function ClearFormats (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Fill (Byval RHS As ChartFillFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get__InsideLeft (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get__InsideTop (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get__InsideWidth (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get__InsideHeight (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_InsideLeft (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_InsideLeft (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_InsideTop (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_InsideTop (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_InsideWidth (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_InsideWidth (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_InsideHeight (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_InsideHeight (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Position (Byval RHS As XlChartElementPosition Ptr) As HRESULT
		Declare Abstract Function Let_Position (Byval RHS As XlChartElementPosition) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
	End Type 'IPlotArea_

	Type IChartArea_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Clear (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function ClearContents (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function ClearFormats (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Fill (Byval RHS As ChartFillFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RoundedCorners (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RoundedCorners (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'IChartArea_

	Type ILegend_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function LegendEntries (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Position (Byval RHS As XlLegendPosition Ptr) As HRESULT
		Declare Abstract Function Let_Position (Byval RHS As XlLegendPosition) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Clear (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Fill (Byval RHS As ChartFillFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_IncludeInLayout (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_IncludeInLayout (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
	End Type 'ILegend_

	Type IErrorBars_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function ClearFormats (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_EndStyle (Byval RHS As XlEndStyleCap Ptr) As HRESULT
		Declare Abstract Function Let_EndStyle (Byval RHS As XlEndStyleCap) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
	End Type 'IErrorBars_

	Type IDataTable_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ShowLegendKey (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowLegendKey (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HasBorderHorizontal (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasBorderHorizontal (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HasBorderVertical (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasBorderVertical (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HasBorderOutline (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasBorderOutline (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Select_ () As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
	End Type 'IDataTable_

	Type IPhonetic_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_CharacterType (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_CharacterType (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Alignment (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Alignment (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
	End Type 'IPhonetic_

	Type IShape_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Apply () As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function Flip (Byval FlipCmd As Office.MsoFlipCmd) As HRESULT
		Declare Abstract Function IncrementLeft (Byval Increment As Single) As HRESULT
		Declare Abstract Function IncrementRotation (Byval Increment As Single) As HRESULT
		Declare Abstract Function IncrementTop (Byval Increment As Single) As HRESULT
		Declare Abstract Function PickUp () As HRESULT
		Declare Abstract Function RerouteConnections () As HRESULT
		Declare Abstract Function ScaleHeight (Byval Factor As Single, Byval RelativeToOriginalSize As Office.MsoTriState, Byval Scale As Variant Ptr) As HRESULT
		Declare Abstract Function ScaleWidth (Byval Factor As Single, Byval RelativeToOriginalSize As Office.MsoTriState, Byval Scale As Variant Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As HRESULT
		Declare Abstract Function SetShapesDefaultProperties () As HRESULT
		Declare Abstract Function Ungroup (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function ZOrder (Byval ZOrderCmd As Office.MsoZOrderCmd) As HRESULT
		Declare Abstract Function Get_Adjustments (Byval RHS As Adjustments Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TextFrame (Byval RHS As TextFrame Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AutoShapeType (Byval RHS As Office.MsoAutoShapeType Ptr) As HRESULT
		Declare Abstract Function Let_AutoShapeType (Byval RHS As Office.MsoAutoShapeType) As HRESULT
		Declare Abstract Function Get_Callout (Byval RHS As CalloutFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ConnectionSiteCount (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Connector (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Get_ConnectorFormat (Byval RHS As ConnectorFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Fill (Byval RHS As FillFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_GroupItems (Byval RHS As GroupShapes Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_HorizontalFlip (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_Line (Byval RHS As LineFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LockAspectRatio (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_LockAspectRatio (Byval RHS As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Nodes (Byval RHS As ShapeNodes Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Rotation (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_Rotation (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_PictureFormat (Byval RHS As PictureFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As ShadowFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TextEffect (Byval RHS As TextEffectFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ThreeD (Byval RHS As ThreeDFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As Office.MsoShapeType Ptr) As HRESULT
		Declare Abstract Function Get_VerticalFlip (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Get_Vertices (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_ZOrderPosition (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Hyperlink (Byval RHS As Hyperlink Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BlackWhiteMode (Byval RHS As Office.MsoBlackWhiteMode Ptr) As HRESULT
		Declare Abstract Function Let_BlackWhiteMode (Byval RHS As Office.MsoBlackWhiteMode) As HRESULT
		Declare Abstract Function Get_DrawingObject (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_OnAction (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnAction (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TopLeftCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BottomRightCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Placement (Byval RHS As XlPlacement Ptr) As HRESULT
		Declare Abstract Function Let_Placement (Byval RHS As XlPlacement) As HRESULT
		Declare Abstract Function Copy () As HRESULT
		Declare Abstract Function Cut () As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As Variant Ptr, Byval Format As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ControlFormat (Byval RHS As ControlFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LinkFormat (Byval RHS As LinkFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_OLEFormat (Byval RHS As OLEFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_FormControlType (Byval RHS As XlFormControl Ptr) As HRESULT
		Declare Abstract Function Get_AlternativeText (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_AlternativeText (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Script (Byval RHS As Office.Script Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DiagramNode (Byval RHS As DiagramNode Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HasDiagramNode (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Get_Diagram (Byval RHS As Diagram Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HasDiagram (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Get_Child (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Get_ParentGroup (Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CanvasItems (Byval RHS As Office.CanvasShapes Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ID (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function CanvasCropLeft (Byval Increment As Single) As HRESULT
		Declare Abstract Function CanvasCropTop (Byval Increment As Single) As HRESULT
		Declare Abstract Function CanvasCropRight (Byval Increment As Single) As HRESULT
		Declare Abstract Function CanvasCropBottom (Byval Increment As Single) As HRESULT
		Declare Abstract Function Get_Chart (Byval RHS As Chart Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HasChart (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Get_TextFrame2 (Byval RHS As TextFrame2 Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ShapeStyle (Byval RHS As Office.MsoShapeStyleIndex Ptr) As HRESULT
		Declare Abstract Function Let_ShapeStyle (Byval RHS As Office.MsoShapeStyleIndex) As HRESULT
		Declare Abstract Function Get_BackgroundStyle (Byval RHS As Office.MsoBackgroundStyleIndex Ptr) As HRESULT
		Declare Abstract Function Let_BackgroundStyle (Byval RHS As Office.MsoBackgroundStyleIndex) As HRESULT
		Declare Abstract Function Get_SoftEdge (Byval RHS As Office.SoftEdgeFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Glow (Byval RHS As Office.GlowFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Reflection (Byval RHS As Office.ReflectionFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HasSmartArt (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Get_SmartArt (Byval RHS As Office.SmartArt Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Title (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Title (Byval RHS As BSTR) As HRESULT
	End Type 'IShape_

	Type IShapes_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function _Default (Byval Index As Variant Ptr, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function AddCallout (Byval Type_v As Office.MsoCalloutType, Byval Left As Single, Byval Top As Single, Byval Width As Single, Byval Height As Single, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function AddConnector (Byval Type_v As Office.MsoConnectorType, Byval BeginX As Single, Byval BeginY As Single, Byval EndX As Single, Byval EndY As Single, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function AddCurve (Byval SafeArrayOfPoints As Variant Ptr, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function AddLabel (Byval Orientation As Office.MsoTextOrientation, Byval Left As Single, Byval Top As Single, Byval Width As Single, Byval Height As Single, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function AddLine (Byval BeginX As Single, Byval BeginY As Single, Byval EndX As Single, Byval EndY As Single, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function AddPicture (Byval Filename As BSTR, Byval LinkToFile As Office.MsoTriState, Byval SaveWithDocument As Office.MsoTriState, Byval Left As Single, Byval Top As Single, Byval Width As Single, Byval Height As Single, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function AddPolyline (Byval SafeArrayOfPoints As Variant Ptr, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function AddShape (Byval Type_v As Office.MsoAutoShapeType, Byval Left As Single, Byval Top As Single, Byval Width As Single, Byval Height As Single, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function AddTextEffect (Byval PresetTextEffect As Office.MsoPresetTextEffect, Byval Text As BSTR, Byval FontName As BSTR, Byval FontSize As Single, Byval FontBold As Office.MsoTriState, Byval FontItalic As Office.MsoTriState, Byval Left As Single, Byval Top As Single, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function AddTextbox (Byval Orientation As Office.MsoTextOrientation, Byval Left As Single, Byval Top As Single, Byval Width As Single, Byval Height As Single, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function BuildFreeform (Byval EditingType As Office.MsoEditingType, Byval X1 As Single, Byval Y1 As Single, Byval RHS As FreeformBuilder Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Range (Byval Index As Variant Ptr, Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function SelectAll () As HRESULT
		Declare Abstract Function AddFormControl (Byval Type_v As XlFormControl, Byval Left As Long, Byval Top As Long, Byval Width As Long, Byval Height As Long, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function AddOLEObject (Byval ClassType As Variant Ptr, Byval Filename As Variant Ptr, Byval Link As Variant Ptr, Byval DisplayAsIcon As Variant Ptr, Byval IconFileName As Variant Ptr, Byval IconIndex As Variant Ptr, Byval IconLabel As Variant Ptr, Byval Left As Variant Ptr, Byval Top As Variant Ptr, Byval Width As Variant Ptr, Byval Height As Variant Ptr, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function AddDiagram (Byval Type_v As Office.MsoDiagramType, Byval Left As Single, Byval Top As Single, Byval Width As Single, Byval Height As Single, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function AddCanvas (Byval Left As Single, Byval Top As Single, Byval Width As Single, Byval Height As Single, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function AddChart (Byval XlChartType As Variant Ptr, Byval Left As Variant Ptr, Byval Top As Variant Ptr, Byval Width As Variant Ptr, Byval Height As Variant Ptr, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function AddSmartArt (Byval Layout As Office.SmartArtLayout Ptr, Byval Left As Variant Ptr, Byval Top As Variant Ptr, Byval Width As Variant Ptr, Byval Height As Variant Ptr, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function AddChart2 (Byval Style As Variant Ptr, Byval XlChartType As Variant Ptr, Byval Left As Variant Ptr, Byval Top As Variant Ptr, Byval Width As Variant Ptr, Byval Height As Variant Ptr, Byval NewLayout As Variant Ptr, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function AddPicture2 (Byval Filename As BSTR, Byval LinkToFile As Office.MsoTriState, Byval SaveWithDocument As Office.MsoTriState, Byval Left As Single, Byval Top As Single, Byval Width As Single, Byval Height As Single, Byval Compress As Office.MsoPictureCompress, Byval RHS As Shape Ptr Ptr) As HRESULT
	End Type 'IShapes_

	Type IShapeRange_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function _Default (Byval Index As Variant Ptr, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Align (Byval AlignCmd As Office.MsoAlignCmd, Byval RelativeTo As Office.MsoTriState) As HRESULT
		Declare Abstract Function Apply () As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Distribute (Byval DistributeCmd As Office.MsoDistributeCmd, Byval RelativeTo As Office.MsoTriState) As HRESULT
		Declare Abstract Function Duplicate (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function Flip (Byval FlipCmd As Office.MsoFlipCmd) As HRESULT
		Declare Abstract Function IncrementLeft (Byval Increment As Single) As HRESULT
		Declare Abstract Function IncrementRotation (Byval Increment As Single) As HRESULT
		Declare Abstract Function IncrementTop (Byval Increment As Single) As HRESULT
		Declare Abstract Function Group (Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function PickUp () As HRESULT
		Declare Abstract Function RerouteConnections () As HRESULT
		Declare Abstract Function Regroup (Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function ScaleHeight (Byval Factor As Single, Byval RelativeToOriginalSize As Office.MsoTriState, Byval Scale As Variant Ptr) As HRESULT
		Declare Abstract Function ScaleWidth (Byval Factor As Single, Byval RelativeToOriginalSize As Office.MsoTriState, Byval Scale As Variant Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As HRESULT
		Declare Abstract Function SetShapesDefaultProperties () As HRESULT
		Declare Abstract Function Ungroup (Byval RHS As ShapeRange Ptr Ptr) As HRESULT
		Declare Abstract Function ZOrder (Byval ZOrderCmd As Office.MsoZOrderCmd) As HRESULT
		Declare Abstract Function Get_Adjustments (Byval RHS As Adjustments Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TextFrame (Byval RHS As TextFrame Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AutoShapeType (Byval RHS As Office.MsoAutoShapeType Ptr) As HRESULT
		Declare Abstract Function Let_AutoShapeType (Byval RHS As Office.MsoAutoShapeType) As HRESULT
		Declare Abstract Function Get_Callout (Byval RHS As CalloutFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ConnectionSiteCount (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Connector (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Get_ConnectorFormat (Byval RHS As ConnectorFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Fill (Byval RHS As FillFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_GroupItems (Byval RHS As GroupShapes Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_HorizontalFlip (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_Line (Byval RHS As LineFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LockAspectRatio (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_LockAspectRatio (Byval RHS As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Nodes (Byval RHS As ShapeNodes Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Rotation (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_Rotation (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_PictureFormat (Byval RHS As PictureFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As ShadowFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TextEffect (Byval RHS As TextEffectFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ThreeD (Byval RHS As ThreeDFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As Office.MsoShapeType Ptr) As HRESULT
		Declare Abstract Function Get_VerticalFlip (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Get_Vertices (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_ZOrderPosition (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_BlackWhiteMode (Byval RHS As Office.MsoBlackWhiteMode Ptr) As HRESULT
		Declare Abstract Function Let_BlackWhiteMode (Byval RHS As Office.MsoBlackWhiteMode) As HRESULT
		Declare Abstract Function Get_AlternativeText (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_AlternativeText (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_DiagramNode (Byval RHS As DiagramNode Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HasDiagramNode (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Get_Diagram (Byval RHS As Diagram Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HasDiagram (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Get_Child (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Get_ParentGroup (Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CanvasItems (Byval RHS As Office.CanvasShapes Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ID (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function CanvasCropLeft (Byval Increment As Single) As HRESULT
		Declare Abstract Function CanvasCropTop (Byval Increment As Single) As HRESULT
		Declare Abstract Function CanvasCropRight (Byval Increment As Single) As HRESULT
		Declare Abstract Function CanvasCropBottom (Byval Increment As Single) As HRESULT
		Declare Abstract Function Get_Chart (Byval RHS As Chart Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HasChart (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Get_TextFrame2 (Byval RHS As TextFrame2 Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ShapeStyle (Byval RHS As Office.MsoShapeStyleIndex Ptr) As HRESULT
		Declare Abstract Function Let_ShapeStyle (Byval RHS As Office.MsoShapeStyleIndex) As HRESULT
		Declare Abstract Function Get_BackgroundStyle (Byval RHS As Office.MsoBackgroundStyleIndex Ptr) As HRESULT
		Declare Abstract Function Let_BackgroundStyle (Byval RHS As Office.MsoBackgroundStyleIndex) As HRESULT
		Declare Abstract Function Get_SoftEdge (Byval RHS As Office.SoftEdgeFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Glow (Byval RHS As Office.GlowFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Reflection (Byval RHS As Office.ReflectionFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Title (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Title (Byval RHS As BSTR) As HRESULT
	End Type 'IShapeRange_

	Type IGroupShapes_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function _Default (Byval Index As Variant Ptr, Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Range (Byval Index As Variant Ptr, Byval RHS As ShapeRange Ptr Ptr) As HRESULT
	End Type 'IGroupShapes_

	Type ITextFrame_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MarginBottom (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_MarginBottom (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_MarginLeft (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_MarginLeft (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_MarginRight (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_MarginRight (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_MarginTop (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_MarginTop (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Office.MsoTextOrientation Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Office.MsoTextOrientation) As HRESULT
		Declare Abstract Function Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As XlHAlign Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As XlHAlign) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As XlVAlign Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As XlVAlign) As HRESULT
		Declare Abstract Function Get_AutoSize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoSize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_AutoMargins (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoMargins (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_VerticalOverflow (Byval RHS As XlOartVerticalOverflow Ptr) As HRESULT
		Declare Abstract Function Let_VerticalOverflow (Byval RHS As XlOartVerticalOverflow) As HRESULT
		Declare Abstract Function Get_HorizontalOverflow (Byval RHS As XlOartHorizontalOverflow Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalOverflow (Byval RHS As XlOartHorizontalOverflow) As HRESULT
	End Type 'ITextFrame_

	Type IConnectorFormat_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function BeginConnect (Byval ConnectedShape As Shape Ptr, Byval ConnectionSite As Long) As HRESULT
		Declare Abstract Function BeginDisconnect () As HRESULT
		Declare Abstract Function EndConnect (Byval ConnectedShape As Shape Ptr, Byval ConnectionSite As Long) As HRESULT
		Declare Abstract Function EndDisconnect () As HRESULT
		Declare Abstract Function Get_BeginConnected (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Get_BeginConnectedShape (Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BeginConnectionSite (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_EndConnected (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Get_EndConnectedShape (Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function Get_EndConnectionSite (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As Office.MsoConnectorType Ptr) As HRESULT
		Declare Abstract Function Let_Type (Byval RHS As Office.MsoConnectorType) As HRESULT
	End Type 'IConnectorFormat_

	Type IFreeformBuilder_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function AddNodes (Byval SegmentType As Office.MsoSegmentType, Byval EditingType As Office.MsoEditingType, Byval X1 As Single, Byval Y1 As Single, Byval X2 As Variant Ptr, Byval Y2 As Variant Ptr, Byval X3 As Variant Ptr, Byval Y3 As Variant Ptr) As HRESULT
		Declare Abstract Function ConvertToShape (Byval RHS As Shape Ptr Ptr) As HRESULT
	End Type 'IFreeformBuilder_

	Type IControlFormat_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function AddItem (Byval Text As BSTR, Byval Index As Variant Ptr) As HRESULT
		Declare Abstract Function RemoveAllItems () As HRESULT
		Declare Abstract Function RemoveItem (Byval Index As Long, Byval Count As Variant Ptr) As HRESULT
		Declare Abstract Function Get_DropDownLines (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_DropDownLines (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_LargeChange (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_LargeChange (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_LinkedCell (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_LinkedCell (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function List (Byval Index As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ListCount (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ListCount (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_ListFillRange (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ListFillRange (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ListIndex (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ListIndex (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_LockedText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LockedText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Max (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Max (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Min (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Min (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_MultiSelect (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_MultiSelect (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_PrintObject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintObject (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SmallChange (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_SmallChange (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As Long) As HRESULT
	End Type 'IControlFormat_

	Type IOLEFormat_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Activate () As HRESULT
		Declare Abstract Function Get_Object (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_progID (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Verb (Byval Verb_v As Variant Ptr) As HRESULT
	End Type 'IOLEFormat_

	Type ILinkFormat_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AutoUpdate (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoUpdate (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Update () As HRESULT
	End Type 'ILinkFormat_

	Type IPublishObjects_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval SourceType As XlSourceType, Byval Filename As BSTR, Byval Sheet As Variant Ptr, Byval Source As Variant Ptr, Byval HtmlType As Variant Ptr, Byval DivID As Variant Ptr, Byval Title As Variant Ptr, Byval RHS As PublishObject Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As PublishObject Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As PublishObject Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Publish () As HRESULT
	End Type 'IPublishObjects_

	Type IOLEDBError_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SqlState (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_ErrorString (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Native (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Number (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Stage (Byval RHS As Long Ptr) As HRESULT
	End Type 'IOLEDBError_

	Type IOLEDBErrors_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Long, Byval RHS As OLEDBError Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Long, Byval RHS As OLEDBError Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IOLEDBErrors_

	Type IPhonetics_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Start (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Length (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_CharacterType (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_CharacterType (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Alignment (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Alignment (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Add (Byval Start As Long, Byval Length As Long, Byval Text As BSTR) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IPhonetics_

	Type IPivotLayout_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ColumnFields (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DataFields (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PageFields (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RowFields (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HiddenFields (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_VisibleFields (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PivotFields (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CubeFields (Byval RHS As CubeFields Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PivotCache (Byval RHS As PivotCache Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PivotTable (Byval RHS As PivotTable Ptr Ptr) As HRESULT
		Declare Abstract Function Get_InnerDetail (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_InnerDetail (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function AddFields (Byval RowFields As Variant Ptr, Byval ColumnFields As Variant Ptr, Byval PageFields As Variant Ptr, Byval AppendField As Variant Ptr) As HRESULT
	End Type 'IPivotLayout_

	Type IDisplayUnitLabel_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Select_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval RHS As Border Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Fill (Byval RHS As ChartFillFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Shadow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ReadingOrder (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_AutoScaleFont (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaleFont (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function _Dummy21 () As HRESULT
		Declare Abstract Function Get_Position (Byval RHS As XlChartElementPosition Ptr) As HRESULT
		Declare Abstract Function Let_Position (Byval RHS As XlChartElementPosition) As HRESULT
		Declare Abstract Function Get_Format (Byval RHS As ChartFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_FormulaR1C1 (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_FormulaR1C1 (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_FormulaLocal (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_FormulaLocal (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_FormulaR1C1Local (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_FormulaR1C1Local (Byval RHS As BSTR) As HRESULT
	End Type 'IDisplayUnitLabel_

	Type ICellFormat_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Borders (Byval RHS As Borders Ptr Ptr) As HRESULT
		Declare Abstract Function Set_Borders (Byval RHS As Borders Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Set_Font (Byval RHS As Font Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Set_Interior (Byval RHS As Interior Ptr) As HRESULT
		Declare Abstract Function Get_NumberFormat (Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_NumberFormat (Byval lcid As Long, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_NumberFormatLocal (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_NumberFormatLocal (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_AddIndent (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_AddIndent (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_IndentLevel (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_IndentLevel (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAlignment (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ShrinkToFit (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ShrinkToFit (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_WrapText (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_WrapText (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_FormulaHidden (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_FormulaHidden (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_MergeCells (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_MergeCells (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Clear () As HRESULT
	End Type 'ICellFormat_

	Type IUsedObjects_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
	End Type 'IUsedObjects_

	Type ICustomProperties_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Name As BSTR, Byval Value As Variant Ptr, Byval RHS As CustomProperty Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As CustomProperty Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As CustomProperty Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'ICustomProperties_

	Type ICustomProperty_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
	End Type 'ICustomProperty_

	Type ICalculatedMembers_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As CalculatedMember Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As CalculatedMember Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function _Add (Byval Name As BSTR, Byval Formula As BSTR, Byval SolveOrder As Variant Ptr, Byval Type_v As Variant Ptr, Byval RHS As CalculatedMember Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Name As BSTR, Byval Formula As Variant Ptr, Byval SolveOrder As Variant Ptr, Byval Type_v As Variant Ptr, Byval Dynamic As Variant Ptr, Byval DisplayFolder As Variant Ptr, Byval HierarchizeDistinct As Variant Ptr, Byval RHS As CalculatedMember Ptr Ptr) As HRESULT
		Declare Abstract Function AddCalculatedMember (Byval Name As BSTR, Byval Formula As Variant Ptr, Byval SolveOrder As Variant Ptr, Byval Type_v As Variant Ptr, Byval DisplayFolder As Variant Ptr, Byval MeasureGroup As Variant Ptr, Byval ParentHierarchy As Variant Ptr, Byval ParentMember As Variant Ptr, Byval NumberFormat As Variant Ptr, Byval RHS As CalculatedMember Ptr Ptr) As HRESULT
	End Type 'ICalculatedMembers_

	Type ICalculatedMember_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_SourceName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_SolveOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_IsValid (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As XlCalculatedMemberType Ptr) As HRESULT
		Declare Abstract Function Get_Dynamic (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_DisplayFolder (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_HierarchizeDistinct (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HierarchizeDistinct (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_FlattenHierarchies (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_FlattenHierarchies (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_MeasureGroup (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_ParentHierarchy (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_ParentMember (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_NumberFormat (Byval RHS As XlCalcMemNumberFormatType Ptr) As HRESULT
	End Type 'ICalculatedMember_

	Type IWatches_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Source As Variant Ptr, Byval RHS As Watch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As Watch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As Watch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
	End Type 'IWatches_

	Type IWatch_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Get_Source (Byval RHS As Variant Ptr Ptr) As HRESULT
	End Type 'IWatch_

	Type IPivotCell_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PivotCellType (Byval RHS As XlPivotCellType Ptr) As HRESULT
		Declare Abstract Function Get_PivotTable (Byval RHS As PivotTable Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DataField (Byval RHS As PivotField Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PivotField (Byval RHS As PivotField Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PivotItem (Byval RHS As PivotItem Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RowItems (Byval RHS As PivotItemList Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ColumnItems (Byval RHS As PivotItemList Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Range (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Dummy18 (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_CustomSubtotalFunction (Byval RHS As XlConsolidationFunction Ptr) As HRESULT
		Declare Abstract Function Get_PivotRowLine (Byval RHS As PivotLine Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PivotColumnLine (Byval RHS As PivotLine Ptr Ptr) As HRESULT
		Declare Abstract Function AllocateChange () As HRESULT
		Declare Abstract Function DiscardChange () As HRESULT
		Declare Abstract Function Get_DataSourceValue (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CellChanged (Byval RHS As XlCellChangedState Ptr) As HRESULT
		Declare Abstract Function Get_MDX (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_ServerActions (Byval RHS As Actions Ptr Ptr) As HRESULT
	End Type 'IPivotCell_

	Type IGraphic_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Brightness (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_Brightness (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_ColorType (Byval RHS As Office.MsoPictureColorType Ptr) As HRESULT
		Declare Abstract Function Let_ColorType (Byval RHS As Office.MsoPictureColorType) As HRESULT
		Declare Abstract Function Get_Contrast (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_Contrast (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_CropBottom (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_CropBottom (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_CropLeft (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_CropLeft (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_CropRight (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_CropRight (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_CropTop (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_CropTop (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_Filename (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Filename (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Single) As HRESULT
		Declare Abstract Function Get_LockAspectRatio (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_LockAspectRatio (Byval RHS As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Single Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Single) As HRESULT
	End Type 'IGraphic_

	Type IAutoRecover_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Time (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Time (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Path (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Path (Byval RHS As BSTR) As HRESULT
	End Type 'IAutoRecover_

	Type IErrorCheckingOptions_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BackgroundChecking (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_BackgroundChecking (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_IndicatorColorIndex (Byval RHS As XlColorIndex Ptr) As HRESULT
		Declare Abstract Function Let_IndicatorColorIndex (Byval RHS As XlColorIndex) As HRESULT
		Declare Abstract Function Get_EvaluateToError (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EvaluateToError (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TextDate (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TextDate (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_NumberAsText (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_NumberAsText (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_InconsistentFormula (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_InconsistentFormula (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_OmittedCells (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_OmittedCells (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_UnlockedFormulaCells (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_UnlockedFormulaCells (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_EmptyCellReferences (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EmptyCellReferences (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ListDataValidation (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ListDataValidation (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_InconsistentTableFormula (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_InconsistentTableFormula (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'IErrorCheckingOptions_

	Type IErrors_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As Error_t Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As Error_t Ptr Ptr) As HRESULT
	End Type 'IErrors_

	Type IError_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_Ignore (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Ignore (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'IError_

	Type ISmartTagAction_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Execute () As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As XlSmartTagControlType Ptr) As HRESULT
		Declare Abstract Function Get_PresentInPane (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ExpandHelp (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ExpandHelp (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_CheckboxState (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_CheckboxState (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TextboxText (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_TextboxText (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ListSelection (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ListSelection (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_RadioGroupSelection (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_RadioGroupSelection (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_ActiveXControl (Byval RHS As IDispatch Ptr Ptr) As HRESULT
	End Type 'ISmartTagAction_

	Type ISmartTagActions_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As SmartTagAction Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As SmartTagAction Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'ISmartTagActions_

	Type ISmartTag_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DownloadURL (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_XML (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Range (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Get_SmartTagActions (Byval RHS As SmartTagActions Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Properties (Byval RHS As CustomProperties Ptr Ptr) As HRESULT
	End Type 'ISmartTag_

	Type ISmartTags_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval SmartTagType As BSTR, Byval RHS As SmartTag Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As SmartTag Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'ISmartTags_

	Type ISmartTagRecognizer_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_progID (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_FullName (Byval RHS As BSTR Ptr) As HRESULT
	End Type 'ISmartTagRecognizer_

	Type ISmartTagRecognizers_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As SmartTagRecognizer Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As SmartTagRecognizer Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Recognize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Recognize (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'ISmartTagRecognizers_

	Type ISmartTagOptions_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DisplaySmartTags (Byval RHS As XlSmartTagDisplayMode Ptr) As HRESULT
		Declare Abstract Function Let_DisplaySmartTags (Byval RHS As XlSmartTagDisplayMode) As HRESULT
		Declare Abstract Function Get_EmbedSmartTags (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EmbedSmartTags (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'ISmartTagOptions_

	Type ISpellingOptions_ Extends CAIDispatch
		Declare Abstract Function Get_DictLang (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_DictLang (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_UserDict (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_UserDict (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_IgnoreCaps (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_IgnoreCaps (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SuggestMainOnly (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SuggestMainOnly (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_IgnoreMixedDigits (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_IgnoreMixedDigits (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_IgnoreFileNames (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_IgnoreFileNames (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_GermanPostReform (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_GermanPostReform (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_KoreanCombineAux (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_KoreanCombineAux (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_KoreanUseAutoChangeList (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_KoreanUseAutoChangeList (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_KoreanProcessCompound (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_KoreanProcessCompound (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HebrewModes (Byval RHS As XlHebrewModes Ptr) As HRESULT
		Declare Abstract Function Let_HebrewModes (Byval RHS As XlHebrewModes) As HRESULT
		Declare Abstract Function Get_ArabicModes (Byval RHS As XlArabicModes Ptr) As HRESULT
		Declare Abstract Function Let_ArabicModes (Byval RHS As XlArabicModes) As HRESULT
		Declare Abstract Function Get_ArabicStrictAlefHamza (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ArabicStrictAlefHamza (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ArabicStrictFinalYaa (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ArabicStrictFinalYaa (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ArabicStrictTaaMarboota (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ArabicStrictTaaMarboota (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RussianStrictE (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RussianStrictE (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SpanishModes (Byval RHS As XlSpanishModes Ptr) As HRESULT
		Declare Abstract Function Let_SpanishModes (Byval RHS As XlSpanishModes) As HRESULT
		Declare Abstract Function Get_PortugalReform (Byval RHS As XlPortugueseReform Ptr) As HRESULT
		Declare Abstract Function Let_PortugalReform (Byval RHS As XlPortugueseReform) As HRESULT
		Declare Abstract Function Get_BrazilReform (Byval RHS As XlPortugueseReform Ptr) As HRESULT
		Declare Abstract Function Let_BrazilReform (Byval RHS As XlPortugueseReform) As HRESULT
	End Type 'ISpellingOptions_

	Type ISpeech_ Extends CAIDispatch
		Declare Abstract Function Speak (Byval Text As BSTR, Byval SpeakAsync As Variant Ptr, Byval SpeakXML As Variant Ptr, Byval Purge As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Direction (Byval RHS As XlSpeakDirection Ptr) As HRESULT
		Declare Abstract Function Let_Direction (Byval RHS As XlSpeakDirection) As HRESULT
		Declare Abstract Function Get_SpeakCellOnEnter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SpeakCellOnEnter (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'ISpeech_

	Type IProtection_ Extends CAIDispatch
		Declare Abstract Function Get_AllowFormattingCells (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_AllowFormattingColumns (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_AllowFormattingRows (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_AllowInsertingColumns (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_AllowInsertingRows (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_AllowInsertingHyperlinks (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_AllowDeletingColumns (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_AllowDeletingRows (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_AllowSorting (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_AllowFiltering (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_AllowUsingPivotTables (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_AllowEditRanges (Byval RHS As AllowEditRanges Ptr Ptr) As HRESULT
	End Type 'IProtection_

	Type IPivotItemList_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As PivotItem Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Field As Variant Ptr, Byval RHS As PivotItem Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IPivotItemList_

	Type ITab_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Color (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Color (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ColorIndex (Byval RHS As XlColorIndex Ptr) As HRESULT
		Declare Abstract Function Let_ColorIndex (Byval RHS As XlColorIndex) As HRESULT
		Declare Abstract Function Get_ThemeColor (Byval RHS As XlThemeColor Ptr) As HRESULT
		Declare Abstract Function Let_ThemeColor (Byval RHS As XlThemeColor) As HRESULT
		Declare Abstract Function Get_TintAndShade (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_TintAndShade (Byval RHS As Variant Ptr) As HRESULT
	End Type 'ITab_

	Type IAllowEditRanges_ Extends CAIDispatch
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As AllowEditRange Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Title As BSTR, Byval Range As Range Ptr, Byval Password As Variant Ptr, Byval RHS As AllowEditRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As AllowEditRange Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IAllowEditRanges_

	Type IAllowEditRange_ Extends CAIDispatch
		Declare Abstract Function Get_Title (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Title (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Range (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Set_Range (Byval RHS As Range Ptr) As HRESULT
		Declare Abstract Function ChangePassword (Byval Password As BSTR) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Unprotect (Byval Password As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Users (Byval RHS As UserAccessList Ptr Ptr) As HRESULT
	End Type 'IAllowEditRange_

	Type IUserAccessList_ Extends CAIDispatch
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As UserAccess Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Name As BSTR, Byval AllowEdit As VARIANT_BOOL, Byval RHS As UserAccess Ptr Ptr) As HRESULT
		Declare Abstract Function DeleteAll () As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As UserAccess Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IUserAccessList_

	Type IUserAccess_ Extends CAIDispatch
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_AllowEdit (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AllowEdit (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
	End Type 'IUserAccess_

	Type IRTD_ Extends CAIDispatch
		Declare Abstract Function Get_ThrottleInterval (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ThrottleInterval (Byval RHS As Long) As HRESULT
		Declare Abstract Function RefreshData () As HRESULT
		Declare Abstract Function RestartServers () As HRESULT
	End Type 'IRTD_

	Type IDiagram_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Nodes (Byval RHS As DiagramNodes Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As Office.MsoDiagramType Ptr) As HRESULT
		Declare Abstract Function Get_AutoLayout (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_AutoLayout (Byval RHS As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_Reverse (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_Reverse (Byval RHS As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_AutoFormat (Byval RHS As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_AutoFormat (Byval RHS As Office.MsoTriState) As HRESULT
		Declare Abstract Function Convert (Byval Type_v As Office.MsoDiagramType) As HRESULT
		Declare Abstract Function FitText () As HRESULT
	End Type 'IDiagram_

	Type IListObjects_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Add (Byval SourceType As XlListObjectSourceType, Byval Source As Variant Ptr, Byval LinkSource As Variant Ptr, Byval XlListObjectHasHeaders As XlYesNoGuess, Byval Destination As Variant Ptr, Byval RHS As ListObject Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As ListObject Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As ListObject Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Add (Byval SourceType As XlListObjectSourceType, Byval Source As Variant Ptr, Byval LinkSource As Variant Ptr, Byval XlListObjectHasHeaders As XlYesNoGuess, Byval Destination As Variant Ptr, Byval TableStyleName As Variant Ptr, Byval RHS As ListObject Ptr Ptr) As HRESULT
	End Type 'IListObjects_

	Type IListObject_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Publish (Byval Target As Variant Ptr, Byval LinkSource As VARIANT_BOOL, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Refresh () As HRESULT
		Declare Abstract Function Unlink () As HRESULT
		Declare Abstract Function Unlist () As HRESULT
		Declare Abstract Function UpdateChanges (Byval iConflictType As XlListConflict) As HRESULT
		Declare Abstract Function Resize (Byval Range As Range Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Active (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_DataBodyRange (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DisplayRightToLeft (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_HeaderRowRange (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_InsertRowRange (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ListColumns (Byval RHS As ListColumns Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ListRows (Byval RHS As ListRows Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_QueryTable (Byval RHS As QueryTable Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Range (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ShowAutoFilter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowAutoFilter (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowTotals (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowTotals (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SourceType (Byval RHS As XlListObjectSourceType Ptr) As HRESULT
		Declare Abstract Function Get_TotalsRowRange (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SharePointURL (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_XmlMap (Byval RHS As XmlMap Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DisplayName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_DisplayName (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ShowHeaders (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowHeaders (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AutoFilter (Byval RHS As AutoFilter Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TableStyle (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_TableStyle (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ShowTableStyleFirstColumn (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowTableStyleFirstColumn (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowTableStyleLastColumn (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowTableStyleLastColumn (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowTableStyleRowStripes (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowTableStyleRowStripes (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowTableStyleColumnStripes (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowTableStyleColumnStripes (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Sort (Byval RHS As Sort Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Comment (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Comment (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function ExportToVisio () As HRESULT
		Declare Abstract Function Get_AlternativeText (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_AlternativeText (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Summary (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Summary (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_TableObject (Byval RHS As TableObject Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Slicers (Byval RHS As Slicers Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ShowAutoFilterDropDown (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowAutoFilterDropDown (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'IListObject_

	Type IListColumns_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Position As Variant Ptr, Byval RHS As ListColumn Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As ListColumn Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As ListColumn Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
	End Type 'IListColumns_

	Type IListColumn_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_ListDataFormat (Byval RHS As ListDataFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Range (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TotalsCalculation (Byval RHS As XlTotalsCalculation Ptr) As HRESULT
		Declare Abstract Function Let_TotalsCalculation (Byval RHS As XlTotalsCalculation) As HRESULT
		Declare Abstract Function Get_XPath (Byval RHS As XPath Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SharePointFormula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_DataBodyRange (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Total (Byval RHS As Range Ptr Ptr) As HRESULT
	End Type 'IListColumn_

	Type IListRows_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _Add (Byval Position As Variant Ptr, Byval RHS As ListRow Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As ListRow Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As ListRow Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Add (Byval Position As Variant Ptr, Byval AlwaysInsert As Variant Ptr, Byval RHS As ListRow Ptr Ptr) As HRESULT
	End Type 'IListRows_

	Type IListRow_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_InvalidData (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_Range (Byval RHS As Range Ptr Ptr) As HRESULT
	End Type 'IListRow_

	Type IXmlNamespace_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Uri (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Prefix (Byval RHS As BSTR Ptr) As HRESULT
	End Type 'IXmlNamespace_

	Type IXmlNamespaces_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As XmlNamespace Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As XmlNamespace Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function InstallManifest (Byval Path As BSTR, Byval InstallForAllUsers As Variant Ptr) As HRESULT
	End Type 'IXmlNamespaces_

	Type IXmlDataBinding_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Refresh (Byval RHS As XlXmlImportResult Ptr) As HRESULT
		Declare Abstract Function LoadSettings (Byval Url As BSTR) As HRESULT
		Declare Abstract Function ClearSettings () As HRESULT
		Declare Abstract Function Get_SourceUrl (Byval RHS As BSTR Ptr) As HRESULT
	End Type 'IXmlDataBinding_

	Type IXmlSchema_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Namespace (Byval RHS As XmlNamespace Ptr Ptr) As HRESULT
		Declare Abstract Function Get_XML (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
	End Type 'IXmlSchema_

	Type IXmlSchemas_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As XmlSchema Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As XmlSchema Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IXmlSchemas_

	Type IXmlMap_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_IsExportable (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ShowImportExportValidationErrors (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowImportExportValidationErrors (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SaveDataSourceDefinition (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SaveDataSourceDefinition (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AdjustColumnWidth (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AdjustColumnWidth (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PreserveColumnFilter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PreserveColumnFilter (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PreserveNumberFormatting (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PreserveNumberFormatting (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AppendOnImport (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AppendOnImport (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RootElementName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_RootElementNamespace (Byval RHS As XmlNamespace Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Schemas (Byval RHS As XmlSchemas Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DataBinding (Byval RHS As XmlDataBinding Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Import_ (Byval Url As BSTR, Byval Overwrite As Variant Ptr, Byval RHS As XlXmlImportResult Ptr) As HRESULT
		Declare Abstract Function ImportXml (Byval XmlData As BSTR, Byval Overwrite As Variant Ptr, Byval RHS As XlXmlImportResult Ptr) As HRESULT
		Declare Abstract Function Export_ (Byval Url As BSTR, Byval Overwrite As Variant Ptr, Byval RHS As XlXmlExportResult Ptr) As HRESULT
		Declare Abstract Function ExportXml (Byval Data As BSTR Ptr, Byval RHS As XlXmlExportResult Ptr) As HRESULT
		Declare Abstract Function Get_WorkbookConnection (Byval RHS As WorkbookConnection Ptr Ptr) As HRESULT
	End Type 'IXmlMap_

	Type IXmlMaps_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Schema As BSTR, Byval RootElementName As Variant Ptr, Byval RHS As XmlMap Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As XmlMap Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As XmlMap Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IXmlMaps_

	Type IListDataFormat_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As XlListDataType Ptr) As HRESULT
		Declare Abstract Function Get_Choices (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DecimalPlaces (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_DefaultValue (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_IsPercent (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_lcid (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_MaxCharacters (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_MaxNumber (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MinNumber (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Required (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As XlListDataType Ptr) As HRESULT
		Declare Abstract Function Get_ReadOnly (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_AllowFillIn (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
	End Type 'IListDataFormat_

	Type IXPath_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Map (Byval RHS As XmlMap Ptr Ptr) As HRESULT
		Declare Abstract Function SetValue (Byval Map As XmlMap Ptr, Byval XPath As BSTR, Byval SelectionNamespace As Variant Ptr, Byval Repeating As Variant Ptr) As HRESULT
		Declare Abstract Function Clear () As HRESULT
		Declare Abstract Function Get_Repeating (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
	End Type 'IXPath_

	Type IPivotLineCells_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As PivotCell Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As PivotCell Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Full (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
	End Type 'IPivotLineCells_

	Type IPivotLine_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LineType (Byval RHS As XlPivotLineType Ptr) As HRESULT
		Declare Abstract Function Get_Position (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_PivotLineCells (Byval RHS As PivotLineCells Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PivotLineCellsFull (Byval RHS As PivotLineCells Ptr Ptr) As HRESULT
	End Type 'IPivotLine_

	Type IPivotLines_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As PivotLine Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As PivotLine Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
	End Type 'IPivotLines_

	Type IPivotAxis_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PivotLines (Byval RHS As PivotLines Ptr Ptr) As HRESULT
	End Type 'IPivotAxis_

	Type IPivotFilter_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Order (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Order (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_FilterType (Byval RHS As XlPivotFilterType Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Description (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Get_Active (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_PivotField (Byval RHS As PivotField Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DataField (Byval RHS As PivotField Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DataCubeField (Byval RHS As CubeField Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Value1 (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Value2 (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MemberPropertyField (Byval RHS As PivotField Ptr Ptr) As HRESULT
		Declare Abstract Function Get_IsMemberPropertyFilter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_WholeDayFilter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_WholeDayFilter (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'IPivotFilter_

	Type IPivotFilters_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As PivotFilter Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As PivotFilter Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Add (Byval Type_v As XlPivotFilterType, Byval DataField As Variant Ptr, Byval Value1 As Variant Ptr, Byval Value2 As Variant Ptr, Byval Order As Variant Ptr, Byval Name As Variant Ptr, Byval Description As Variant Ptr, Byval MemberPropertyField As Variant Ptr, Byval RHS As PivotFilter Ptr Ptr) As HRESULT
		Declare Abstract Function Add2 (Byval Type_v As XlPivotFilterType, Byval DataField As Variant Ptr, Byval Value1 As Variant Ptr, Byval Value2 As Variant Ptr, Byval Order As Variant Ptr, Byval Name As Variant Ptr, Byval Description As Variant Ptr, Byval MemberPropertyField As Variant Ptr, Byval WholeDayFilter As Variant Ptr, Byval RHS As PivotFilter Ptr Ptr) As HRESULT
	End Type 'IPivotFilters_

	Type IWorkbookConnection_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Description (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Description (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As XlConnectionType Ptr) As HRESULT
		Declare Abstract Function Get_OLEDBConnection (Byval RHS As OLEDBConnection Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ODBCConnection (Byval RHS As ODBCConnection Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Ranges (Byval RHS As Ranges Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Refresh () As HRESULT
		Declare Abstract Function Get_ModelConnection (Byval RHS As ModelConnection Ptr Ptr) As HRESULT
		Declare Abstract Function Get_WorksheetDataConnection (Byval RHS As WorksheetDataConnection Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RefreshWithRefreshAll (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RefreshWithRefreshAll (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TextConnection (Byval RHS As TextConnection Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DataFeedConnection (Byval RHS As DataFeedConnection Ptr Ptr) As HRESULT
		Declare Abstract Function Get_InModel (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ModelTables (Byval RHS As ModelTables Ptr Ptr) As HRESULT
	End Type 'IWorkbookConnection_

	Type IConnections_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function _AddFromFile (Byval Filename As BSTR, Byval RHS As WorkbookConnection Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Name As BSTR, Byval Description As BSTR, Byval ConnectionString As Variant Ptr, Byval CommandText As Variant Ptr, Byval lCmdtype As Variant Ptr, Byval RHS As WorkbookConnection Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As WorkbookConnection Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As WorkbookConnection Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Add2 (Byval Name As BSTR, Byval Description As BSTR, Byval ConnectionString As Variant Ptr, Byval CommandText As Variant Ptr, Byval lCmdtype As Variant Ptr, Byval CreateModelConnection As Variant Ptr, Byval ImportRelationships As Variant Ptr, Byval RHS As WorkbookConnection Ptr Ptr) As HRESULT
		Declare Abstract Function AddFromFile (Byval Filename As BSTR, Byval CreateModelConnection As Variant Ptr, Byval ImportRelationships As Variant Ptr, Byval RHS As WorkbookConnection Ptr Ptr) As HRESULT
	End Type 'IConnections_

	Type IWorksheetView_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Sheet (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DisplayGridlines (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayGridlines (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayFormulas (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayFormulas (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayHeadings (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayHeadings (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayOutline (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayOutline (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayZeros (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayZeros (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'IWorksheetView_

	Type IChartView_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Sheet (Byval RHS As IDispatch Ptr Ptr) As HRESULT
	End Type 'IChartView_

	Type IModuleView_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Sheet (Byval RHS As IDispatch Ptr Ptr) As HRESULT
	End Type 'IModuleView_

	Type IDialogSheetView_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Sheet (Byval RHS As IDispatch Ptr Ptr) As HRESULT
	End Type 'IDialogSheetView_

	Type ISheetViews_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
	End Type 'ISheetViews_

	Type IOLEDBConnection_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ADOConnection (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BackgroundQuery (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_BackgroundQuery (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function CancelRefresh () As HRESULT
		Declare Abstract Function Get_CommandText (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_CommandText (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_CommandType (Byval RHS As XlCmdType Ptr) As HRESULT
		Declare Abstract Function Let_CommandType (Byval RHS As XlCmdType) As HRESULT
		Declare Abstract Function Get_Connection (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Connection (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_EnableRefresh (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableRefresh (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_LocalConnection (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_LocalConnection (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_MaintainConnection (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_MaintainConnection (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function MakeConnection () As HRESULT
		Declare Abstract Function Refresh () As HRESULT
		Declare Abstract Function Get_RefreshDate (Byval RHS As Date_ Ptr) As HRESULT
		Declare Abstract Function Get_Refreshing (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_RefreshOnFileOpen (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RefreshOnFileOpen (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RefreshPeriod (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_RefreshPeriod (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_RobustConnect (Byval RHS As XlRobustConnect Ptr) As HRESULT
		Declare Abstract Function Let_RobustConnect (Byval RHS As XlRobustConnect) As HRESULT
		Declare Abstract Function SaveAsODC (Byval ODCFileName As BSTR, Byval Description As Variant Ptr, Byval Keywords As Variant Ptr) As HRESULT
		Declare Abstract Function Get_SavePassword (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SavePassword (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SourceConnectionFile (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_SourceConnectionFile (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_SourceDataFile (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_SourceDataFile (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OLAP (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_UseLocalConnection (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_UseLocalConnection (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_MaxDrillthroughRecords (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_MaxDrillthroughRecords (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_IsConnected (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ServerCredentialsMethod (Byval RHS As XlCredentialsMethod Ptr) As HRESULT
		Declare Abstract Function Let_ServerCredentialsMethod (Byval RHS As XlCredentialsMethod) As HRESULT
		Declare Abstract Function Get_ServerSSOApplicationID (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ServerSSOApplicationID (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_AlwaysUseConnectionFile (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AlwaysUseConnectionFile (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ServerFillColor (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ServerFillColor (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ServerFontStyle (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ServerFontStyle (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ServerNumberFormat (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ServerNumberFormat (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ServerTextColor (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ServerTextColor (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RetrieveInOfficeUILang (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RetrieveInOfficeUILang (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Reconnect () As HRESULT
		Declare Abstract Function Get_CalculatedMembers (Byval RHS As CalculatedMembers Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LocaleID (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_LocaleID (Byval RHS As Long) As HRESULT
	End Type 'IOLEDBConnection_

	Type IODBCConnection_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BackgroundQuery (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_BackgroundQuery (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function CancelRefresh () As HRESULT
		Declare Abstract Function Get_CommandText (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_CommandText (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_CommandType (Byval RHS As XlCmdType Ptr) As HRESULT
		Declare Abstract Function Let_CommandType (Byval RHS As XlCmdType) As HRESULT
		Declare Abstract Function Get_Connection (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Connection (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_EnableRefresh (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableRefresh (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Refresh () As HRESULT
		Declare Abstract Function Get_RefreshDate (Byval RHS As Date_ Ptr) As HRESULT
		Declare Abstract Function Get_Refreshing (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_RefreshOnFileOpen (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RefreshOnFileOpen (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RefreshPeriod (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_RefreshPeriod (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_RobustConnect (Byval RHS As XlRobustConnect Ptr) As HRESULT
		Declare Abstract Function Let_RobustConnect (Byval RHS As XlRobustConnect) As HRESULT
		Declare Abstract Function SaveAsODC (Byval ODCFileName As BSTR, Byval Description As Variant Ptr, Byval Keywords As Variant Ptr) As HRESULT
		Declare Abstract Function Get_SavePassword (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SavePassword (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SourceConnectionFile (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_SourceConnectionFile (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_SourceData (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_SourceData (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_SourceDataFile (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_SourceDataFile (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ServerCredentialsMethod (Byval RHS As XlCredentialsMethod Ptr) As HRESULT
		Declare Abstract Function Let_ServerCredentialsMethod (Byval RHS As XlCredentialsMethod) As HRESULT
		Declare Abstract Function Get_ServerSSOApplicationID (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ServerSSOApplicationID (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_AlwaysUseConnectionFile (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AlwaysUseConnectionFile (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'IODBCConnection_

	Type IAction_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As XlActionType Ptr) As HRESULT
		Declare Abstract Function Get_Coordinate (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Content (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Execute () As HRESULT
	End Type 'IAction_

	Type IActions_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As Action Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As Action Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
	End Type 'IActions_

	Type IFormatColor_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Color (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Color (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ColorIndex (Byval RHS As XlColorIndex Ptr) As HRESULT
		Declare Abstract Function Let_ColorIndex (Byval RHS As XlColorIndex) As HRESULT
		Declare Abstract Function Get_ThemeColor (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ThemeColor (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_TintAndShade (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_TintAndShade (Byval RHS As Variant Ptr) As HRESULT
	End Type 'IFormatColor_

	Type IConditionValue_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Modify (Byval newtype As XlConditionValueTypes, Byval newvalue As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As XlConditionValueTypes Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Variant Ptr Ptr) As HRESULT
	End Type 'IConditionValue_

	Type IColorScale_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Priority (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Priority (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_StopIfTrue (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_AppliesTo (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function SetFirstPriority () As HRESULT
		Declare Abstract Function SetLastPriority () As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function ModifyAppliesToRange (Byval Range As Range Ptr) As HRESULT
		Declare Abstract Function Get_PTCondition (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ScopeType (Byval RHS As XlPivotConditionScope Ptr) As HRESULT
		Declare Abstract Function Let_ScopeType (Byval RHS As XlPivotConditionScope) As HRESULT
		Declare Abstract Function Get_ColorScaleCriteria (Byval RHS As ColorScaleCriteria Ptr Ptr) As HRESULT
	End Type 'IColorScale_

	Type IColorScaleCriteria_ Extends CAIDispatch
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As ColorScaleCriterion Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As ColorScaleCriterion Ptr Ptr) As HRESULT
	End Type 'IColorScaleCriteria_

	Type IColorScaleCriterion_ Extends CAIDispatch
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As XlConditionValueTypes Ptr) As HRESULT
		Declare Abstract Function Let_Type (Byval RHS As XlConditionValueTypes) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_FormatColor (Byval RHS As FormatColor Ptr Ptr) As HRESULT
	End Type 'IColorScaleCriterion_

	Type IDatabar_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Priority (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Priority (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_StopIfTrue (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_AppliesTo (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MinPoint (Byval RHS As ConditionValue Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MaxPoint (Byval RHS As ConditionValue Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PercentMin (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_PercentMin (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_PercentMax (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_PercentMax (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_BarColor (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ShowValue (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowValue (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function SetFirstPriority () As HRESULT
		Declare Abstract Function SetLastPriority () As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function ModifyAppliesToRange (Byval Range As Range Ptr) As HRESULT
		Declare Abstract Function Get_PTCondition (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ScopeType (Byval RHS As XlPivotConditionScope Ptr) As HRESULT
		Declare Abstract Function Let_ScopeType (Byval RHS As XlPivotConditionScope) As HRESULT
		Declare Abstract Function Get_Direction (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Direction (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_BarFillType (Byval RHS As XlDataBarFillType Ptr) As HRESULT
		Declare Abstract Function Let_BarFillType (Byval RHS As XlDataBarFillType) As HRESULT
		Declare Abstract Function Get_AxisPosition (Byval RHS As XlDataBarAxisPosition Ptr) As HRESULT
		Declare Abstract Function Let_AxisPosition (Byval RHS As XlDataBarAxisPosition) As HRESULT
		Declare Abstract Function Get_AxisColor (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BarBorder (Byval RHS As DataBarBorder Ptr Ptr) As HRESULT
		Declare Abstract Function Get_NegativeBarFormat (Byval RHS As NegativeBarFormat Ptr Ptr) As HRESULT
	End Type 'IDatabar_

	Type IIconSetCondition_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Priority (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Priority (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_StopIfTrue (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_AppliesTo (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function ModifyAppliesToRange (Byval Range As Range Ptr) As HRESULT
		Declare Abstract Function Get_PTCondition (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ScopeType (Byval RHS As XlPivotConditionScope Ptr) As HRESULT
		Declare Abstract Function Let_ScopeType (Byval RHS As XlPivotConditionScope) As HRESULT
		Declare Abstract Function SetFirstPriority () As HRESULT
		Declare Abstract Function SetLastPriority () As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Get_ReverseOrder (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ReverseOrder (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PercentileValues (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PercentileValues (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowIconOnly (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowIconOnly (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_IconSet (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_IconSet (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_IconCriteria (Byval RHS As IconCriteria Ptr Ptr) As HRESULT
	End Type 'IIconSetCondition_

	Type IIconCriteria_ Extends CAIDispatch
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As IconCriterion Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As IconCriterion Ptr Ptr) As HRESULT
	End Type 'IIconCriteria_

	Type IIconCriterion_ Extends CAIDispatch
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As XlConditionValueTypes Ptr) As HRESULT
		Declare Abstract Function Let_Type (Byval RHS As XlConditionValueTypes) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Value (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Operator (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Operator (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Icon (Byval RHS As XlIcon Ptr) As HRESULT
		Declare Abstract Function Let_Icon (Byval RHS As XlIcon) As HRESULT
	End Type 'IIconCriterion_

	Type IIcon_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IconSet Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
	End Type 'IIcon_

	Type IIconSet_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ID (Byval RHS As XlIconSet Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As Icon Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As Icon Ptr Ptr) As HRESULT
	End Type 'IIconSet_

	Type IIconSets_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
	End Type 'IIconSets_

	Type ITop10_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Priority (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Priority (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_StopIfTrue (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_StopIfTrue (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AppliesTo (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TopBottom (Byval RHS As XlTopBottom Ptr) As HRESULT
		Declare Abstract Function Let_TopBottom (Byval RHS As XlTopBottom) As HRESULT
		Declare Abstract Function Get_Rank (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Rank (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Percent (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Percent (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Borders (Byval RHS As Borders Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_NumberFormat (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_NumberFormat (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function SetFirstPriority () As HRESULT
		Declare Abstract Function SetLastPriority () As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function ModifyAppliesToRange (Byval Range As Range Ptr) As HRESULT
		Declare Abstract Function Get_PTCondition (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ScopeType (Byval RHS As XlPivotConditionScope Ptr) As HRESULT
		Declare Abstract Function Let_ScopeType (Byval RHS As XlPivotConditionScope) As HRESULT
		Declare Abstract Function Get_CalcFor (Byval RHS As XlCalcFor Ptr) As HRESULT
		Declare Abstract Function Let_CalcFor (Byval RHS As XlCalcFor) As HRESULT
	End Type 'ITop10_

	Type IAboveAverage_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Priority (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Priority (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_StopIfTrue (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_StopIfTrue (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AppliesTo (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AboveBelow (Byval RHS As XlAboveBelow Ptr) As HRESULT
		Declare Abstract Function Let_AboveBelow (Byval RHS As XlAboveBelow) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Borders (Byval RHS As Borders Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_NumberFormat (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_NumberFormat (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function SetFirstPriority () As HRESULT
		Declare Abstract Function SetLastPriority () As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function ModifyAppliesToRange (Byval Range As Range Ptr) As HRESULT
		Declare Abstract Function Get_PTCondition (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ScopeType (Byval RHS As XlPivotConditionScope Ptr) As HRESULT
		Declare Abstract Function Let_ScopeType (Byval RHS As XlPivotConditionScope) As HRESULT
		Declare Abstract Function Get_CalcFor (Byval RHS As XlCalcFor Ptr) As HRESULT
		Declare Abstract Function Let_CalcFor (Byval RHS As XlCalcFor) As HRESULT
		Declare Abstract Function Get_NumStdDev (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_NumStdDev (Byval RHS As Long) As HRESULT
	End Type 'IAboveAverage_

	Type IUniqueValues_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Priority (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Priority (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_StopIfTrue (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_StopIfTrue (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AppliesTo (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DupeUnique (Byval RHS As XlDupeUnique Ptr) As HRESULT
		Declare Abstract Function Let_DupeUnique (Byval RHS As XlDupeUnique) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Borders (Byval RHS As Borders Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_NumberFormat (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_NumberFormat (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function SetFirstPriority () As HRESULT
		Declare Abstract Function SetLastPriority () As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function ModifyAppliesToRange (Byval Range As Range Ptr) As HRESULT
		Declare Abstract Function Get_PTCondition (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ScopeType (Byval RHS As XlPivotConditionScope Ptr) As HRESULT
		Declare Abstract Function Let_ScopeType (Byval RHS As XlPivotConditionScope) As HRESULT
	End Type 'IUniqueValues_

	Type IRanges_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
	End Type 'IRanges_

	Type IHeaderFooter_ Extends CAIDispatch
		Declare Abstract Function Get_Text (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Picture (Byval RHS As Graphic Ptr Ptr) As HRESULT
	End Type 'IHeaderFooter_

	Type IPage_ Extends CAIDispatch
		Declare Abstract Function Get_LeftHeader (Byval RHS As HeaderFooter Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CenterHeader (Byval RHS As HeaderFooter Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RightHeader (Byval RHS As HeaderFooter Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LeftFooter (Byval RHS As HeaderFooter Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CenterFooter (Byval RHS As HeaderFooter Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RightFooter (Byval RHS As HeaderFooter Ptr Ptr) As HRESULT
	End Type 'IPage_

	Type IPages_ Extends CAIDispatch
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As Page Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As Page Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IPages_

	Type IServerViewableItems_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Add (Byval Obj As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval Index As Variant Ptr) As HRESULT
		Declare Abstract Function DeleteAll () As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IServerViewableItems_

	Type ITableStyleElement_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HasFormat (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Borders (Byval RHS As Borders Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_StripeSize (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_StripeSize (Byval RHS As Long) As HRESULT
		Declare Abstract Function Clear () As HRESULT
	End Type 'ITableStyleElement_

	Type ITableStyleElements_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As XlTableStyleElementType, Byval RHS As TableStyleElement Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As XlTableStyleElementType, Byval RHS As TableStyleElement Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'ITableStyleElements_

	Type ITableStyle_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_NameLocal (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_BuiltIn (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_TableStyleElements (Byval RHS As TableStyleElements Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ShowAsAvailableTableStyle (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowAsAvailableTableStyle (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowAsAvailablePivotTableStyle (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowAsAvailablePivotTableStyle (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Duplicate (Byval NewTableStyleName As Variant Ptr, Byval RHS As TableStyle Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ShowAsAvailableSlicerStyle (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowAsAvailableSlicerStyle (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowAsAvailableTimelineStyle (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowAsAvailableTimelineStyle (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'ITableStyle_

	Type ITableStyles_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Add (Byval TableStyleName As BSTR, Byval RHS As TableStyle Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As TableStyle Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As TableStyle Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'ITableStyles_

	Type ISortField_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SortOn (Byval RHS As XlSortOn Ptr) As HRESULT
		Declare Abstract Function Let_SortOn (Byval RHS As XlSortOn) As HRESULT
		Declare Abstract Function Get_SortOnValue (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Key (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Order (Byval RHS As XlSortOrder Ptr) As HRESULT
		Declare Abstract Function Let_Order (Byval RHS As XlSortOrder) As HRESULT
		Declare Abstract Function Get_CustomOrder (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_CustomOrder (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_DataOption (Byval RHS As XlSortDataOption Ptr) As HRESULT
		Declare Abstract Function Let_DataOption (Byval RHS As XlSortDataOption) As HRESULT
		Declare Abstract Function Get_Priority (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Priority (Byval RHS As Long) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function ModifyKey (Byval Key As Range Ptr) As HRESULT
		Declare Abstract Function SetIcon (Byval Icon As Icon Ptr) As HRESULT
	End Type 'ISortField_

	Type ISortFields_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Key As Range Ptr, Byval SortOn As Variant Ptr, Byval Order As Variant Ptr, Byval CustomOrder As Variant Ptr, Byval DataOption As Variant Ptr, Byval RHS As SortField Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As SortField Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Clear () As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As SortField Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'ISortFields_

	Type ISort_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Rng (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Header (Byval RHS As XlYesNoGuess Ptr) As HRESULT
		Declare Abstract Function Let_Header (Byval RHS As XlYesNoGuess) As HRESULT
		Declare Abstract Function Get_MatchCase (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_MatchCase (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As XlSortOrientation Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As XlSortOrientation) As HRESULT
		Declare Abstract Function Get_SortMethod (Byval RHS As XlSortMethod Ptr) As HRESULT
		Declare Abstract Function Let_SortMethod (Byval RHS As XlSortMethod) As HRESULT
		Declare Abstract Function Get_SortFields (Byval RHS As SortFields Ptr Ptr) As HRESULT
		Declare Abstract Function SetRange (Byval Rng As Range Ptr) As HRESULT
		Declare Abstract Function Apply () As HRESULT
	End Type 'ISort_

	Type IResearch_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Query (Byval ServiceID As BSTR, Byval QueryString As Variant Ptr, Byval QueryLanguage As Variant Ptr, Byval UseSelection As Variant Ptr, Byval LaunchQuery As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function IsResearchService (Byval ServiceID As BSTR, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function SetLanguagePair (Byval LanguageFrom As Long, Byval LanguageTo As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
	End Type 'IResearch_

	Type IColorStop_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Get_Color (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Color (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ThemeColor (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ThemeColor (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_TintAndShade (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_TintAndShade (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Position (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Position (Byval RHS As Double) As HRESULT
	End Type 'IColorStop_

	Type IColorStops_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Add (Byval Position As Double, Byval RHS As ColorStop Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As ColorStop Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As ColorStop Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Clear () As HRESULT
	End Type 'IColorStops_

	Type ILinearGradient_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ColorStops (Byval RHS As ColorStops Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Degree (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Degree (Byval RHS As Double) As HRESULT
	End Type 'ILinearGradient_

	Type IRectangularGradient_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ColorStops (Byval RHS As ColorStops Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RectangleTop (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_RectangleTop (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_RectangleBottom (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_RectangleBottom (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_RectangleLeft (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_RectangleLeft (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_RectangleRight (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_RectangleRight (Byval RHS As Double) As HRESULT
	End Type 'IRectangularGradient_

	Type IMultiThreadedCalculation_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Enabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Enabled (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ThreadMode (Byval RHS As XlThreadMode Ptr) As HRESULT
		Declare Abstract Function Let_ThreadMode (Byval RHS As XlThreadMode) As HRESULT
		Declare Abstract Function Get_ThreadCount (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ThreadCount (Byval RHS As Long) As HRESULT
	End Type 'IMultiThreadedCalculation_

	Type IChartFormat_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Fill (Byval RHS As FillFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Glow (Byval RHS As Office.GlowFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Line (Byval RHS As LineFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PictureFormat (Byval RHS As PictureFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Shadow (Byval RHS As ShadowFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SoftEdge (Byval RHS As Office.SoftEdgeFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TextFrame2 (Byval RHS As TextFrame2 Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ThreeD (Byval RHS As ThreeDFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Adjustments (Byval RHS As Adjustments Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AutoShapeType (Byval RHS As Office.MsoAutoShapeType Ptr) As HRESULT
		Declare Abstract Function Let_AutoShapeType (Byval RHS As Office.MsoAutoShapeType) As HRESULT
	End Type 'IChartFormat_

	Type IFileExportConverter_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Extensions (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Description (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_FileFormat (Byval RHS As Long Ptr) As HRESULT
	End Type 'IFileExportConverter_

	Type IFileExportConverters_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As FileExportConverter Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As FileExportConverter Ptr Ptr) As HRESULT
	End Type 'IFileExportConverters_

	Type IAddIns2_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Filename As BSTR, Byval CopyFile As Variant Ptr, Byval RHS As AddIn Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As AddIn Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As AddIn Ptr Ptr) As HRESULT
	End Type 'IAddIns2_

	Type ISparklineGroups_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Type_v As XlSparkType, Byval SourceData As BSTR, Byval RHS As SparklineGroup Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As SparklineGroup Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As SparklineGroup Ptr Ptr) As HRESULT
		Declare Abstract Function Clear () As HRESULT
		Declare Abstract Function ClearGroups () As HRESULT
		Declare Abstract Function Group (Byval Location As Range Ptr) As HRESULT
		Declare Abstract Function Ungroup () As HRESULT
	End Type 'ISparklineGroups_

	Type ISparklineGroup_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As Sparkline Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Location (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Set_Location (Byval RHS As Range Ptr) As HRESULT
		Declare Abstract Function Get_SourceData (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_SourceData (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_DateRange (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_DateRange (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function ModifyLocation (Byval Location As Range Ptr) As HRESULT
		Declare Abstract Function ModifySourceData (Byval SourceData As BSTR) As HRESULT
		Declare Abstract Function Modify (Byval Location As Range Ptr, Byval SourceData As BSTR) As HRESULT
		Declare Abstract Function ModifyDateRange (Byval DateRange As BSTR) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As XlSparkType Ptr) As HRESULT
		Declare Abstract Function Let_Type (Byval RHS As XlSparkType) As HRESULT
		Declare Abstract Function Get_SeriesColor (Byval RHS As FormatColor Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Points (Byval RHS As SparkPoints Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Axes (Byval RHS As SparkAxes Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DisplayBlanksAs (Byval RHS As XlDisplayBlanksAs Ptr) As HRESULT
		Declare Abstract Function Let_DisplayBlanksAs (Byval RHS As XlDisplayBlanksAs) As HRESULT
		Declare Abstract Function Get_DisplayHidden (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayHidden (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_LineWeight (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_LineWeight (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PlotBy (Byval RHS As XlSparklineRowCol Ptr) As HRESULT
		Declare Abstract Function Let_PlotBy (Byval RHS As XlSparklineRowCol) As HRESULT
	End Type 'ISparklineGroup_

	Type ISparkPoints_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Negative (Byval RHS As SparkColor Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Markers (Byval RHS As SparkColor Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Highpoint (Byval RHS As SparkColor Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Lowpoint (Byval RHS As SparkColor Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Firstpoint (Byval RHS As SparkColor Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Lastpoint (Byval RHS As SparkColor Ptr Ptr) As HRESULT
	End Type 'ISparkPoints_

	Type ISparkline_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Location (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Set_Location (Byval RHS As Range Ptr) As HRESULT
		Declare Abstract Function Get_SourceData (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_SourceData (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function ModifyLocation (Byval Range As Range Ptr) As HRESULT
		Declare Abstract Function ModifySourceData (Byval Formula As BSTR) As HRESULT
	End Type 'ISparkline_

	Type ISparkAxes_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Vertical (Byval RHS As SparkVerticalAxis Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Horizontal (Byval RHS As SparkHorizontalAxis Ptr Ptr) As HRESULT
	End Type 'ISparkAxes_

	Type ISparkHorizontalAxis_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Axis (Byval RHS As SparkColor Ptr Ptr) As HRESULT
		Declare Abstract Function Get_IsDateAxis (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_RightToLeftPlotOrder (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RightToLeftPlotOrder (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'ISparkHorizontalAxis_

	Type ISparkVerticalAxis_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MinScaleType (Byval RHS As XlSparkScale Ptr) As HRESULT
		Declare Abstract Function Let_MinScaleType (Byval RHS As XlSparkScale) As HRESULT
		Declare Abstract Function Get_CustomMinScaleValue (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_CustomMinScaleValue (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_MaxScaleType (Byval RHS As XlSparkScale Ptr) As HRESULT
		Declare Abstract Function Let_MaxScaleType (Byval RHS As XlSparkScale) As HRESULT
		Declare Abstract Function Get_CustomMaxScaleValue (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_CustomMaxScaleValue (Byval RHS As Variant Ptr) As HRESULT
	End Type 'ISparkVerticalAxis_

	Type ISparkColor_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Color (Byval RHS As FormatColor Ptr Ptr) As HRESULT
	End Type 'ISparkColor_

	Type IDataBarBorder_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Type (Byval RHS As XlDataBarBorderType Ptr) As HRESULT
		Declare Abstract Function Let_Type (Byval RHS As XlDataBarBorderType) As HRESULT
		Declare Abstract Function Get_Color (Byval RHS As IDispatch Ptr Ptr) As HRESULT
	End Type 'IDataBarBorder_

	Type INegativeBarFormat_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ColorType (Byval RHS As XlDataBarNegativeColorType Ptr) As HRESULT
		Declare Abstract Function Let_ColorType (Byval RHS As XlDataBarNegativeColorType) As HRESULT
		Declare Abstract Function Get_BorderColorType (Byval RHS As XlDataBarNegativeColorType Ptr) As HRESULT
		Declare Abstract Function Let_BorderColorType (Byval RHS As XlDataBarNegativeColorType) As HRESULT
		Declare Abstract Function Get_Color (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BorderColor (Byval RHS As IDispatch Ptr Ptr) As HRESULT
	End Type 'INegativeBarFormat_

	Type IValueChange_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Order (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_VisibleInPivotTable (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_PivotCell (Byval RHS As PivotCell Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Tuple (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_AllocationValue (Byval RHS As XlAllocationValue Ptr) As HRESULT
		Declare Abstract Function Get_AllocationMethod (Byval RHS As XlAllocationMethod Ptr) As HRESULT
		Declare Abstract Function Get_AllocationWeightExpression (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
	End Type 'IValueChange_

	Type IPivotTableChangeList_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As ValueChange Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As ValueChange Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Add (Byval Tuple As BSTR, Byval Value As Double, Byval AllocationValue As Variant Ptr, Byval AllocationMethod As Variant Ptr, Byval AllocationWeightExpression As Variant Ptr, Byval RHS As ValueChange Ptr Ptr) As HRESULT
	End Type 'IPivotTableChangeList_

	Type IDisplayFormat_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Borders (Byval RHS As Borders Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr, Byval RHS As Characters Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Font (Byval RHS As Font Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Style (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AddIndent (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_FormulaHidden (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HorizontalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_IndentLevel (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interior (Byval RHS As Interior Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MergeCells (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_NumberFormat (Byval lcidIn As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_NumberFormatLocal (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ReadingOrder (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShrinkToFit (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_VerticalAlignment (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_WrapText (Byval RHS As Variant Ptr Ptr) As HRESULT
	End Type 'IDisplayFormat_

	Type ISlicerCaches_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As SlicerCache Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As SlicerCache Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Source As Variant Ptr, Byval SourceField As Variant Ptr, Byval Name As Variant Ptr, Byval RHS As SlicerCache Ptr Ptr) As HRESULT
		Declare Abstract Function Add2 (Byval Source As Variant Ptr, Byval SourceField As Variant Ptr, Byval Name As Variant Ptr, Byval SlicerCacheType As Variant Ptr, Byval RHS As SlicerCache Ptr Ptr) As HRESULT
	End Type 'ISlicerCaches_

	Type ISlicerCache_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Index (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_OLAP (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_SourceType (Byval RHS As XlPivotTableSourceType Ptr) As HRESULT
		Declare Abstract Function Get_WorkbookConnection (Byval RHS As WorkbookConnection Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Slicers (Byval RHS As Slicers Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PivotTables (Byval RHS As SlicerPivotTables Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SlicerCacheLevels (Byval RHS As SlicerCacheLevels Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_VisibleSlicerItems (Byval RHS As SlicerItems Ptr Ptr) As HRESULT
		Declare Abstract Function Get_VisibleSlicerItemsList (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_VisibleSlicerItemsList (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_SlicerItems (Byval RHS As SlicerItems Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CrossFilterType (Byval RHS As XlSlicerCrossFilterType Ptr) As HRESULT
		Declare Abstract Function Let_CrossFilterType (Byval RHS As XlSlicerCrossFilterType) As HRESULT
		Declare Abstract Function Get_SortItems (Byval RHS As XlSlicerSort Ptr) As HRESULT
		Declare Abstract Function Let_SortItems (Byval RHS As XlSlicerSort) As HRESULT
		Declare Abstract Function Get_SourceName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_SortUsingCustomLists (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SortUsingCustomLists (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowAllItems (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowAllItems (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function ClearManualFilter () As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Get_TimelineState (Byval RHS As TimelineState Ptr Ptr) As HRESULT
		Declare Abstract Function ClearAllFilters () As HRESULT
		Declare Abstract Function Get_SlicerCacheType (Byval RHS As XlSlicerCacheType Ptr) As HRESULT
		Declare Abstract Function Get_FilterCleared (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_List (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_RequireManualUpdate (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RequireManualUpdate (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ListObject (Byval RHS As ListObject Ptr Ptr) As HRESULT
		Declare Abstract Function ClearDateFilter () As HRESULT
	End Type 'ISlicerCache_

	Type ISlicerCacheLevels_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Level As Variant Ptr, Byval RHS As SlicerCacheLevel Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Level As Variant Ptr, Byval RHS As SlicerCacheLevel Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'ISlicerCacheLevels_

	Type ISlicerCacheLevel_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SlicerItems (Byval RHS As SlicerItems Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Ordinal (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_CrossFilterType (Byval RHS As XlSlicerCrossFilterType Ptr) As HRESULT
		Declare Abstract Function Let_CrossFilterType (Byval RHS As XlSlicerCrossFilterType) As HRESULT
		Declare Abstract Function Get_SortItems (Byval RHS As XlSlicerSort Ptr) As HRESULT
		Declare Abstract Function Let_SortItems (Byval RHS As XlSlicerSort) As HRESULT
		Declare Abstract Function Get_VisibleSlicerItemsList (Byval RHS As Variant Ptr Ptr) As HRESULT
	End Type 'ISlicerCacheLevel_

	Type ISlicers_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As Slicer Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As Slicer Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval SlicerDestination As Variant Ptr, Byval Level As Variant Ptr, Byval Name As Variant Ptr, Byval Caption As Variant Ptr, Byval Top As Variant Ptr, Byval Left As Variant Ptr, Byval Width As Variant Ptr, Byval Height As Variant Ptr, Byval RHS As Slicer Ptr Ptr) As HRESULT
	End Type 'ISlicers_

	Type ISlicer_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_DisableMoveResizeUI (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisableMoveResizeUI (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_RowHeight (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_RowHeight (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_ColumnWidth (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_ColumnWidth (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_NumberOfColumns (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_NumberOfColumns (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_DisplayHeader (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayHeader (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Locked (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Locked (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SlicerCache (Byval RHS As SlicerCache Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SlicerCacheLevel (Byval RHS As SlicerCacheLevel Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Shape (Byval RHS As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Style (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Style (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Cut () As HRESULT
		Declare Abstract Function Copy () As HRESULT
		Declare Abstract Function Get_ActiveItem (Byval RHS As SlicerItem Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TimelineViewState (Byval RHS As TimelineViewState Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SlicerCacheType (Byval RHS As XlSlicerCacheType Ptr) As HRESULT
	End Type 'ISlicer_

	Type ISlicerItem_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As SlicerCache Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_SourceName (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SourceNameStandard (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Selected (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Selected (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HasData (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
	End Type 'ISlicerItem_

	Type ISlicerItems_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As SlicerItem Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As SlicerItem Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'ISlicerItems_

	Type ISlicerPivotTables_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As PivotTable Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As PivotTable Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function AddPivotTable (Byval PivotTable As PivotTable Ptr) As HRESULT
		Declare Abstract Function RemovePivotTable (Byval PivotTable As Variant Ptr) As HRESULT
	End Type 'ISlicerPivotTables_

	Type IProtectedViewWindows_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As ProtectedViewWindow Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As ProtectedViewWindow Ptr Ptr) As HRESULT
		Declare Abstract Function Open (Byval Filename As BSTR, Byval Password As Variant Ptr, Byval AddToMru As Variant Ptr, Byval RepairMode As Variant Ptr, Byval RHS As ProtectedViewWindow Ptr Ptr) As HRESULT
	End Type 'IProtectedViewWindows_

	Type IProtectedViewWindow_ Extends CAIDispatch
		Declare Abstract Function Get__Default (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_EnableResize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableResize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Height (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Left (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Top (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Width (Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_Visible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SourceName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_SourcePath (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_WindowState (Byval RHS As XlProtectedViewWindowState Ptr) As HRESULT
		Declare Abstract Function Let_WindowState (Byval RHS As XlProtectedViewWindowState) As HRESULT
		Declare Abstract Function Get_Workbook (Byval RHS As Workbook Ptr Ptr) As HRESULT
		Declare Abstract Function Activate () As HRESULT
		Declare Abstract Function Close (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Edit (Byval WriteResPassword As Variant Ptr, Byval UpdateLinks As Variant Ptr, Byval RHS As Workbook Ptr Ptr) As HRESULT
	End Type 'IProtectedViewWindow_

	Type ITableObject_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RowNumbers (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RowNumbers (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_FetchedRowOverflow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_RefreshStyle (Byval RHS As XlCellInsertionMode Ptr) As HRESULT
		Declare Abstract Function Let_RefreshStyle (Byval RHS As XlCellInsertionMode) As HRESULT
		Declare Abstract Function Get_EnableRefresh (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableRefresh (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Destination (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ResultRange (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Refresh (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_EnableEditing (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableEditing (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PreserveColumnInfo (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PreserveColumnInfo (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PreserveFormatting (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PreserveFormatting (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AdjustColumnWidth (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AdjustColumnWidth (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ListObject (Byval RHS As ListObject Ptr Ptr) As HRESULT
		Declare Abstract Function Get_WorkbookConnection (Byval RHS As WorkbookConnection Ptr Ptr) As HRESULT
	End Type 'ITableObject_

	Type IPivotValueCell_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PivotCell (Byval RHS As PivotCell Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function ShowDetail () As HRESULT
		Declare Abstract Function Get_ServerActions (Byval RHS As Actions Ptr Ptr) As HRESULT
	End Type 'IPivotValueCell_

	Type IQuickAnalysis_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Show (Byval XlQuickAnalysisMode As XlQuickAnalysisMode) As HRESULT
		Declare Abstract Function Hide (Byval XlQuickAnalysisMode As XlQuickAnalysisMode) As HRESULT
	End Type 'IQuickAnalysis_

	Type IModelConnection_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CommandText (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_CommandText (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_CommandType (Byval RHS As XlCmdType Ptr) As HRESULT
		Declare Abstract Function Let_CommandType (Byval RHS As XlCmdType) As HRESULT
		Declare Abstract Function Get_ADOConnection (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CalculatedMembers (Byval RHS As CalculatedMembers Ptr Ptr) As HRESULT
	End Type 'IModelConnection_

	Type IWorksheetDataConnection_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Connection (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CommandText (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_CommandText (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_CommandType (Byval RHS As XlCmdType Ptr) As HRESULT
		Declare Abstract Function Let_CommandType (Byval RHS As XlCmdType) As HRESULT
	End Type 'IWorksheetDataConnection_

	Type ITextConnection_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Connection (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Connection (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_TextFileHeaderRow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TextFileHeaderRow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TextFileColumnDataTypes (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_TextFileColumnDataTypes (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_TextFileCommaDelimiter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TextFileCommaDelimiter (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TextFileConsecutiveDelimiter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TextFileConsecutiveDelimiter (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TextFileDecimalSeparator (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_TextFileDecimalSeparator (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_TextFileFixedColumnWidths (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_TextFileFixedColumnWidths (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_TextFileOtherDelimiter (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_TextFileOtherDelimiter (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_TextFileParseType (Byval RHS As XlTextParsingType Ptr) As HRESULT
		Declare Abstract Function Let_TextFileParseType (Byval RHS As XlTextParsingType) As HRESULT
		Declare Abstract Function Get_TextFilePlatform (Byval RHS As XlPlatform Ptr) As HRESULT
		Declare Abstract Function Let_TextFilePlatform (Byval RHS As XlPlatform) As HRESULT
		Declare Abstract Function Get_TextFilePromptOnRefresh (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TextFilePromptOnRefresh (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TextFileSemicolonDelimiter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TextFileSemicolonDelimiter (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TextFileSpaceDelimiter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TextFileSpaceDelimiter (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TextFileStartRow (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_TextFileStartRow (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_TextFileTabDelimiter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TextFileTabDelimiter (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TextFileTextQualifier (Byval RHS As XlTextQualifier Ptr) As HRESULT
		Declare Abstract Function Let_TextFileTextQualifier (Byval RHS As XlTextQualifier) As HRESULT
		Declare Abstract Function Get_TextFileThousandsSeparator (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_TextFileThousandsSeparator (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_TextFileTrailingMinusNumbers (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TextFileTrailingMinusNumbers (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_TextFileVisualLayout (Byval RHS As XlTextVisualLayoutType Ptr) As HRESULT
		Declare Abstract Function Let_TextFileVisualLayout (Byval RHS As XlTextVisualLayoutType) As HRESULT
	End Type 'ITextConnection_

	Type IDataFeedConnection_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AlwaysUseConnectionFile (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AlwaysUseConnectionFile (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_CommandText (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_CommandText (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_CommandType (Byval RHS As XlCmdType Ptr) As HRESULT
		Declare Abstract Function Let_CommandType (Byval RHS As XlCmdType) As HRESULT
		Declare Abstract Function Get_Connection (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Connection (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_EnableRefresh (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableRefresh (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RefreshDate (Byval RHS As Date_ Ptr) As HRESULT
		Declare Abstract Function Get_Refreshing (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_RefreshOnFileOpen (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RefreshOnFileOpen (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RefreshPeriod (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_RefreshPeriod (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_SavePassword (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SavePassword (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ServerCredentialsMethod (Byval RHS As XlCredentialsMethod Ptr) As HRESULT
		Declare Abstract Function Let_ServerCredentialsMethod (Byval RHS As XlCredentialsMethod) As HRESULT
		Declare Abstract Function Get_SourceConnectionFile (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_SourceConnectionFile (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_SourceDataFile (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_SourceDataFile (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function CancelRefresh () As HRESULT
		Declare Abstract Function Refresh () As HRESULT
		Declare Abstract Function SaveAsODC (Byval ODCFileName As BSTR, Byval Description As Variant Ptr, Byval Keywords As Variant Ptr) As HRESULT
	End Type 'IDataFeedConnection_

	Type IModelTableColumn_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_DataType (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Dummy1 (Byval NewName As BSTR) As HRESULT
	End Type 'IModelTableColumn_

	Type IModelTableColumns_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As ModelTableColumn Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As ModelTableColumn Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IModelTableColumns_

	Type IModelTable_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_SourceName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_ModelTableColumns (Byval RHS As ModelTableColumns Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SourceWorkbookConnection (Byval RHS As WorkbookConnection Ptr Ptr) As HRESULT
		Declare Abstract Function _Dummy7 () As HRESULT
		Declare Abstract Function Refresh () As HRESULT
		Declare Abstract Function Get_RecordCount (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Dummy1 (Byval NewName As BSTR) As HRESULT
	End Type 'IModelTable_

	Type IModelTables_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As ModelTable Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As ModelTable Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IModelTables_

	Type IModelRelationship_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ForeignKeyTable (Byval RHS As ModelTable Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ForeignKeyColumn (Byval RHS As ModelTableColumn Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PrimaryKeyTable (Byval RHS As ModelTable Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PrimaryKeyColumn (Byval RHS As ModelTableColumn Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Active (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Active (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
	End Type 'IModelRelationship_

	Type IModelRelationships_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As ModelRelationship Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As ModelRelationship Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval ForeignKeyColumn As ModelTableColumn Ptr, Byval PrimaryKeyColumn As ModelTableColumn Ptr, Byval RHS As ModelRelationship Ptr Ptr) As HRESULT
		Declare Abstract Function DetectRelationships (Byval PivotTable As PivotTable Ptr) As HRESULT
	End Type 'IModelRelationships_

	Type IModel_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ModelTables (Byval RHS As ModelTables Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ModelRelationships (Byval RHS As ModelRelationships Ptr Ptr) As HRESULT
		Declare Abstract Function Refresh () As HRESULT
		Declare Abstract Function AddConnection (Byval ConnectionToDataSource As WorkbookConnection Ptr, Byval RHS As WorkbookConnection Ptr Ptr) As HRESULT
		Declare Abstract Function CreateModelWorkbookConnection (Byval ModelTable As Variant Ptr, Byval RHS As WorkbookConnection Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DataModelConnection (Byval RHS As WorkbookConnection Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Initialize () As HRESULT
		Declare Abstract Function Get_ModelMeasures (Byval RHS As ModelMeasures Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ModelFormatGeneral (Byval RHS As ModelFormatGeneral Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ModelFormatDate (Byval FormatString As Variant Ptr, Byval RHS As ModelFormatDate Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ModelFormatDecimalNumber (Byval UseThousandSeparator As Variant Ptr, Byval DecimalPlaces As Variant Ptr, Byval RHS As ModelFormatDecimalNumber Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ModelFormatWholeNumber (Byval UseThousandSeparator As Variant Ptr, Byval RHS As ModelFormatWholeNumber Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ModelFormatPercentageNumber (Byval UseThousandSeparator As Variant Ptr, Byval DecimalPlaces As Variant Ptr, Byval RHS As ModelFormatPercentageNumber Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ModelFormatScientificNumber (Byval DecimalPlaces As Variant Ptr, Byval RHS As ModelFormatScientificNumber Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ModelFormatCurrency (Byval Symbol As Variant Ptr, Byval DecimalPlaces As Variant Ptr, Byval RHS As ModelFormatCurrency Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ModelFormatBoolean (Byval RHS As ModelFormatBoolean Ptr Ptr) As HRESULT
	End Type 'IModel_

	Type IFullSeriesCollection_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As Series Ptr Ptr) As HRESULT
		Declare Abstract Function _NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function _Default (Byval Index As Variant Ptr, Byval RHS As Series Ptr Ptr) As HRESULT
	End Type 'IFullSeriesCollection_

	Type IChartCategory_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_IsFiltered (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_IsFiltered (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'IChartCategory_

	Type ICategoryCollection_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As ChartCategory Ptr Ptr) As HRESULT
		Declare Abstract Function _Default (Byval Index As Variant Ptr, Byval RHS As ChartCategory Ptr Ptr) As HRESULT
	End Type 'ICategoryCollection_

	Type ITimelineState_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_StartDate (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_EndDate (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_FilterType (Byval RHS As XlPivotFilterType Ptr) As HRESULT
		Declare Abstract Function Get_FilterValue1 (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_FilterValue2 (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SingleRangeFilterState (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function SetFilterDateRange (Byval StartDate As Variant Ptr, Byval EndDate As Variant Ptr, Byval RHS As XlFilterStatus Ptr) As HRESULT
	End Type 'ITimelineState_

	Type ITimelineViewState_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ShowHeader (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowHeader (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowSelectionLabel (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowSelectionLabel (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowTimeLevel (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowTimeLevel (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowHorizontalScrollbar (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowHorizontalScrollbar (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Level (Byval RHS As XlTimelineLevel Ptr) As HRESULT
		Declare Abstract Function Let_Level (Byval RHS As XlTimelineLevel) As HRESULT
	End Type 'ITimelineViewState_

	Type IModelTableNames_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
	End Type 'IModelTableNames_

	Type IModelTableNameChange_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TableNameOld (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_TableNameNew (Byval RHS As BSTR Ptr) As HRESULT
	End Type 'IModelTableNameChange_

	Type IModelTableNameChanges_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As ModelTableNameChange Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As ModelTableNameChange Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IModelTableNameChanges_

	Type IModelChanges_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TablesAdded (Byval RHS As ModelTableNames Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TablesDeleted (Byval RHS As ModelTableNames Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TablesModified (Byval RHS As ModelTableNames Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TableNamesChanged (Byval RHS As ModelTableNameChanges Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RelationshipChange (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ColumnsAdded (Byval RHS As ModelColumnNames Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ColumnsDeleted (Byval RHS As ModelColumnNames Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ColumnsChanged (Byval RHS As ModelColumnChanges Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MeasuresAdded (Byval RHS As ModelMeasureNames Ptr Ptr) As HRESULT
		Declare Abstract Function Get_UnknownChange (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_Source (Byval RHS As XlModelChangeSource Ptr) As HRESULT
	End Type 'IModelChanges_

	Type IModelColumnName_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TableName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_ColumnName (Byval RHS As BSTR Ptr) As HRESULT
	End Type 'IModelColumnName_

	Type IModelColumnNames_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As ModelColumnName Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As ModelColumnName Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IModelColumnNames_

	Type IModelColumnChange_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TableName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_ColumnName (Byval RHS As BSTR Ptr) As HRESULT
	End Type 'IModelColumnChange_

	Type IModelColumnChanges_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As ModelColumnChange Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As ModelColumnChange Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IModelColumnChanges_

	Type IModelMeasureName_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TableName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_MeasureName (Byval RHS As BSTR Ptr) As HRESULT
	End Type 'IModelMeasureName_

	Type IModelMeasureNames_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As ModelMeasureName Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As ModelMeasureName Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
	End Type 'IModelMeasureNames_

	Type IWorkbookQuery_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Description (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Description (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let__Default (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
	End Type 'IWorkbookQuery_

	Type IQueries_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Add (Byval Name As BSTR, Byval Formula As BSTR, Byval Description As Variant Ptr, Byval RHS As WorkbookQuery Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval NameOrIndex As Variant Ptr, Byval RHS As WorkbookQuery Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval NameOrIndex As Variant Ptr, Byval RHS As WorkbookQuery Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Get_FastCombine (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_FastCombine (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'IQueries_

	Type IModelMeasure_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_AssociatedTable (Byval RHS As ModelTable Ptr Ptr) As HRESULT
		Declare Abstract Function Set_AssociatedTable (Byval RHS As ModelTable Ptr) As HRESULT
		Declare Abstract Function Get_Formula (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Formula (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_FormatInformation (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_FormatInformation (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Description (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Description (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
	End Type 'IModelMeasure_

	Type IModelMeasures_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval RHS As ModelMeasure Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As ModelMeasure Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval MeasureName As BSTR, Byval AssociatedTable As ModelTable Ptr, Byval Formula As BSTR, Byval FormatInformation As Variant Ptr, Byval Description As Variant Ptr, Byval RHS As ModelMeasure Ptr Ptr) As HRESULT
	End Type 'IModelMeasures_

	Type IModelFormatGeneral_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
	End Type 'IModelFormatGeneral_

	Type IModelFormatDate_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_FormatString (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_FormatString (Byval RHS As BSTR) As HRESULT
	End Type 'IModelFormatDate_

	Type IModelFormatDecimalNumber_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_UseThousandSeparator (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_UseThousandSeparator (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DecimalPlaces (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_DecimalPlaces (Byval RHS As Long) As HRESULT
	End Type 'IModelFormatDecimalNumber_

	Type IModelFormatWholeNumber_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_UseThousandSeparator (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_UseThousandSeparator (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'IModelFormatWholeNumber_

	Type IModelFormatPercentageNumber_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_UseThousandSeparator (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_UseThousandSeparator (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DecimalPlaces (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_DecimalPlaces (Byval RHS As Long) As HRESULT
	End Type 'IModelFormatPercentageNumber_

	Type IModelFormatScientificNumber_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DecimalPlaces (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_DecimalPlaces (Byval RHS As Long) As HRESULT
	End Type 'IModelFormatScientificNumber_

	Type IModelFormatCurrency_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Symbol (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Symbol (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_DecimalPlaces (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_DecimalPlaces (Byval RHS As Long) As HRESULT
	End Type 'IModelFormatCurrency_

	Type IModelFormatBoolean_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
	End Type 'IModelFormatBoolean_

	Type IDummy_ Extends CAIDispatch
		Declare Abstract Function _ActiveSheetOrChart () As HRESULT
		Declare Abstract Function RGB_ () As HRESULT
		Declare Abstract Function ChDir () As HRESULT
		Declare Abstract Function DoScript () As HRESULT
		Declare Abstract Function DirectObject () As HRESULT
		Declare Abstract Function RefreshDocument () As HRESULT
		Declare Abstract Function AddSignatureLine (Byval SigProv As Variant Ptr, Byval RHS As Office.Signature Ptr Ptr) As HRESULT
		Declare Abstract Function AddNonVisibleSignature (Byval SigProv As Variant Ptr, Byval RHS As Office.Signature Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ShowSignaturesPane (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowSignaturesPane (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function ThemeFontScheme () As HRESULT
		Declare Abstract Function ThemeColorScheme () As HRESULT
		Declare Abstract Function ThemeEffectScheme () As HRESULT
		Declare Abstract Function Load () As HRESULT
	End Type 'IDummy_

	Type ICanvasShapes_ Extends CAIDispatch
	End Type 'ICanvasShapes_

	Type Adjustments_ Extends Office._IMsoDispObj
		Declare Abstract Function Get_Parent (Byval Parent As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval Count As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Long, Byval Val As Single Ptr) As HRESULT
		Declare Abstract Function Let_Item (Byval Index As Long, Byval Val As Single) As HRESULT
	End Type 'Adjustments_

	Type CalloutFormat_ Extends Office._IMsoDispObj
		Declare Abstract Function Get_Parent (Byval Parent As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function AutomaticLength () As HRESULT
		Declare Abstract Function CustomDrop (Byval Drop As Single) As HRESULT
		Declare Abstract Function CustomLength (Byval Length As Single) As HRESULT
		Declare Abstract Function PresetDrop (Byval DropType As Office.MsoCalloutDropType) As HRESULT
		Declare Abstract Function Get_Accent (Byval Accent As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_Accent (Byval Accent As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_Angle (Byval Angle As Office.MsoCalloutAngleType Ptr) As HRESULT
		Declare Abstract Function Let_Angle (Byval Angle As Office.MsoCalloutAngleType) As HRESULT
		Declare Abstract Function Get_AutoAttach (Byval AutoAttach As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_AutoAttach (Byval AutoAttach As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_AutoLength (Byval AutoLength As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Get_Border (Byval Border As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_Border (Byval Border As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_Drop (Byval Drop As Single Ptr) As HRESULT
		Declare Abstract Function Get_DropType (Byval DropType As Office.MsoCalloutDropType Ptr) As HRESULT
		Declare Abstract Function Get_Gap (Byval Gap As Single Ptr) As HRESULT
		Declare Abstract Function Let_Gap (Byval Gap As Single) As HRESULT
		Declare Abstract Function Get_Length (Byval Length As Single Ptr) As HRESULT
		Declare Abstract Function Get_Type (Byval Type_v As Office.MsoCalloutType Ptr) As HRESULT
		Declare Abstract Function Let_Type (Byval Type_v As Office.MsoCalloutType) As HRESULT
	End Type 'CalloutFormat_

	Type ColorFormat_ Extends Office._IMsoDispObj
		Declare Abstract Function Get_Parent (Byval Parent As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RGB (Byval RGB_v As Long Ptr) As HRESULT
		Declare Abstract Function Let_RGB (Byval RGB_v As Long) As HRESULT
		Declare Abstract Function Get_SchemeColor (Byval SchemeColor As Long Ptr) As HRESULT
		Declare Abstract Function Let_SchemeColor (Byval SchemeColor As Long) As HRESULT
		Declare Abstract Function Get_Type (Byval Type_v As Office.MsoColorType Ptr) As HRESULT
		Declare Abstract Function Get_TintAndShade (Byval pValue As Single Ptr) As HRESULT
		Declare Abstract Function Let_TintAndShade (Byval pValue As Single) As HRESULT
		Declare Abstract Function Get_ObjectThemeColor (Byval ObjectThemeColor As Office.MsoThemeColorIndex Ptr) As HRESULT
		Declare Abstract Function Let_ObjectThemeColor (Byval ObjectThemeColor As Office.MsoThemeColorIndex) As HRESULT
		Declare Abstract Function Get_Brightness (Byval pValue As Single Ptr) As HRESULT
		Declare Abstract Function Let_Brightness (Byval pValue As Single) As HRESULT
	End Type 'ColorFormat_

	Type LineFormat_ Extends Office._IMsoDispObj
		Declare Abstract Function Get_Parent (Byval Parent As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BackColor (Byval BackColor As ColorFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Let_BackColor (Byval BackColor As ColorFormat Ptr) As HRESULT
		Declare Abstract Function Get_BeginArrowheadLength (Byval BeginArrowheadLength As Office.MsoArrowheadLength Ptr) As HRESULT
		Declare Abstract Function Let_BeginArrowheadLength (Byval BeginArrowheadLength As Office.MsoArrowheadLength) As HRESULT
		Declare Abstract Function Get_BeginArrowheadStyle (Byval BeginArrowheadStyle As Office.MsoArrowheadStyle Ptr) As HRESULT
		Declare Abstract Function Let_BeginArrowheadStyle (Byval BeginArrowheadStyle As Office.MsoArrowheadStyle) As HRESULT
		Declare Abstract Function Get_BeginArrowheadWidth (Byval BeginArrowheadWidth As Office.MsoArrowheadWidth Ptr) As HRESULT
		Declare Abstract Function Let_BeginArrowheadWidth (Byval BeginArrowheadWidth As Office.MsoArrowheadWidth) As HRESULT
		Declare Abstract Function Get_DashStyle (Byval DashStyle As Office.MsoLineDashStyle Ptr) As HRESULT
		Declare Abstract Function Let_DashStyle (Byval DashStyle As Office.MsoLineDashStyle) As HRESULT
		Declare Abstract Function Get_EndArrowheadLength (Byval EndArrowheadLength As Office.MsoArrowheadLength Ptr) As HRESULT
		Declare Abstract Function Let_EndArrowheadLength (Byval EndArrowheadLength As Office.MsoArrowheadLength) As HRESULT
		Declare Abstract Function Get_EndArrowheadStyle (Byval EndArrowheadStyle As Office.MsoArrowheadStyle Ptr) As HRESULT
		Declare Abstract Function Let_EndArrowheadStyle (Byval EndArrowheadStyle As Office.MsoArrowheadStyle) As HRESULT
		Declare Abstract Function Get_EndArrowheadWidth (Byval EndArrowheadWidth As Office.MsoArrowheadWidth Ptr) As HRESULT
		Declare Abstract Function Let_EndArrowheadWidth (Byval EndArrowheadWidth As Office.MsoArrowheadWidth) As HRESULT
		Declare Abstract Function Get_ForeColor (Byval ForeColor As ColorFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ForeColor (Byval ForeColor As ColorFormat Ptr) As HRESULT
		Declare Abstract Function Get_Pattern (Byval Pattern As Office.MsoPatternType Ptr) As HRESULT
		Declare Abstract Function Let_Pattern (Byval Pattern As Office.MsoPatternType) As HRESULT
		Declare Abstract Function Get_Style (Byval Style As Office.MsoLineStyle Ptr) As HRESULT
		Declare Abstract Function Let_Style (Byval Style As Office.MsoLineStyle) As HRESULT
		Declare Abstract Function Get_Transparency (Byval Transparency As Single Ptr) As HRESULT
		Declare Abstract Function Let_Transparency (Byval Transparency As Single) As HRESULT
		Declare Abstract Function Get_Visible (Byval Visible As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval Visible As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_Weight (Byval Weight As Single Ptr) As HRESULT
		Declare Abstract Function Let_Weight (Byval Weight As Single) As HRESULT
		Declare Abstract Function Get_InsetPen (Byval InsetPen As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_InsetPen (Byval InsetPen As Office.MsoTriState) As HRESULT
	End Type 'LineFormat_

	Type ShapeNode_ Extends Office._IMsoDispObj
		Declare Abstract Function Get_Parent (Byval Parent As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_EditingType (Byval EditingType As Office.MsoEditingType Ptr) As HRESULT
		Declare Abstract Function Get_Points (Byval Points As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SegmentType (Byval SegmentType As Office.MsoSegmentType Ptr) As HRESULT
	End Type 'ShapeNode_

	Type ShapeNodes_ Extends Office._IMsoDispObj
		Declare Abstract Function Get_Parent (Byval Parent As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval Count As Long Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval Item_v As ShapeNode Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval _NewEnum As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval Index As Long) As HRESULT
		Declare Abstract Function Insert (Byval Index As Long, Byval SegmentType As Office.MsoSegmentType, Byval EditingType As Office.MsoEditingType, Byval X1 As Single, Byval Y1 As Single, Byval X2 As Single, Byval Y2 As Single, Byval X3 As Single, Byval Y3 As Single) As HRESULT
		Declare Abstract Function SetEditingType (Byval Index As Long, Byval EditingType As Office.MsoEditingType) As HRESULT
		Declare Abstract Function SetPosition (Byval Index As Long, Byval X1 As Single, Byval Y1 As Single) As HRESULT
		Declare Abstract Function SetSegmentType (Byval Index As Long, Byval SegmentType As Office.MsoSegmentType) As HRESULT
	End Type 'ShapeNodes_

	Type PictureFormat_ Extends Office._IMsoDispObj
		Declare Abstract Function Get_Parent (Byval Parent As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function IncrementBrightness (Byval Increment As Single) As HRESULT
		Declare Abstract Function IncrementContrast (Byval Increment As Single) As HRESULT
		Declare Abstract Function Get_Brightness (Byval Brightness As Single Ptr) As HRESULT
		Declare Abstract Function Let_Brightness (Byval Brightness As Single) As HRESULT
		Declare Abstract Function Get_ColorType (Byval ColorType As Office.MsoPictureColorType Ptr) As HRESULT
		Declare Abstract Function Let_ColorType (Byval ColorType As Office.MsoPictureColorType) As HRESULT
		Declare Abstract Function Get_Contrast (Byval Contrast As Single Ptr) As HRESULT
		Declare Abstract Function Let_Contrast (Byval Contrast As Single) As HRESULT
		Declare Abstract Function Get_CropBottom (Byval CropBottom As Single Ptr) As HRESULT
		Declare Abstract Function Let_CropBottom (Byval CropBottom As Single) As HRESULT
		Declare Abstract Function Get_CropLeft (Byval CropLeft As Single Ptr) As HRESULT
		Declare Abstract Function Let_CropLeft (Byval CropLeft As Single) As HRESULT
		Declare Abstract Function Get_CropRight (Byval CropRight As Single Ptr) As HRESULT
		Declare Abstract Function Let_CropRight (Byval CropRight As Single) As HRESULT
		Declare Abstract Function Get_CropTop (Byval CropTop As Single Ptr) As HRESULT
		Declare Abstract Function Let_CropTop (Byval CropTop As Single) As HRESULT
		Declare Abstract Function Get_TransparencyColor (Byval TransparencyColor As Long Ptr) As HRESULT
		Declare Abstract Function Let_TransparencyColor (Byval TransparencyColor As Long) As HRESULT
		Declare Abstract Function Get_TransparentBackground (Byval TransparentBackground As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_TransparentBackground (Byval TransparentBackground As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_Crop (Byval Crop As Office.Crop Ptr Ptr) As HRESULT
	End Type 'PictureFormat_

	Type ShadowFormat_ Extends Office._IMsoDispObj
		Declare Abstract Function Get_Parent (Byval Parent As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function IncrementOffsetX (Byval Increment As Single) As HRESULT
		Declare Abstract Function IncrementOffsetY (Byval Increment As Single) As HRESULT
		Declare Abstract Function Get_ForeColor (Byval ForeColor As ColorFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ForeColor (Byval ForeColor As ColorFormat Ptr) As HRESULT
		Declare Abstract Function Get_Obscured (Byval Obscured As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_Obscured (Byval Obscured As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_OffsetX (Byval OffsetX As Single Ptr) As HRESULT
		Declare Abstract Function Let_OffsetX (Byval OffsetX As Single) As HRESULT
		Declare Abstract Function Get_OffsetY (Byval OffsetY As Single Ptr) As HRESULT
		Declare Abstract Function Let_OffsetY (Byval OffsetY As Single) As HRESULT
		Declare Abstract Function Get_Transparency (Byval Transparency As Single Ptr) As HRESULT
		Declare Abstract Function Let_Transparency (Byval Transparency As Single) As HRESULT
		Declare Abstract Function Get_Type (Byval Type_v As Office.MsoShadowType Ptr) As HRESULT
		Declare Abstract Function Let_Type (Byval Type_v As Office.MsoShadowType) As HRESULT
		Declare Abstract Function Get_Visible (Byval Visible As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval Visible As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_Style (Byval ShadowStyle As Office.MsoShadowStyle Ptr) As HRESULT
		Declare Abstract Function Let_Style (Byval ShadowStyle As Office.MsoShadowStyle) As HRESULT
		Declare Abstract Function Get_Blur (Byval Blur As Single Ptr) As HRESULT
		Declare Abstract Function Let_Blur (Byval Blur As Single) As HRESULT
		Declare Abstract Function Get_Size (Byval Size As Single Ptr) As HRESULT
		Declare Abstract Function Let_Size (Byval Size As Single) As HRESULT
		Declare Abstract Function Get_RotateWithShape (Byval RotateWithShape As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_RotateWithShape (Byval RotateWithShape As Office.MsoTriState) As HRESULT
	End Type 'ShadowFormat_

	Type TextEffectFormat_ Extends Office._IMsoDispObj
		Declare Abstract Function Get_Parent (Byval Parent As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function ToggleVerticalText () As HRESULT
		Declare Abstract Function Get_Alignment (Byval Alignment As Office.MsoTextEffectAlignment Ptr) As HRESULT
		Declare Abstract Function Let_Alignment (Byval Alignment As Office.MsoTextEffectAlignment) As HRESULT
		Declare Abstract Function Get_FontBold (Byval FontBold As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_FontBold (Byval FontBold As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_FontItalic (Byval FontItalic As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_FontItalic (Byval FontItalic As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_FontName (Byval FontName As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_FontName (Byval FontName As BSTR) As HRESULT
		Declare Abstract Function Get_FontSize (Byval FontSize As Single Ptr) As HRESULT
		Declare Abstract Function Let_FontSize (Byval FontSize As Single) As HRESULT
		Declare Abstract Function Get_KernedPairs (Byval KernedPairs As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_KernedPairs (Byval KernedPairs As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_NormalizedHeight (Byval NormalizedHeight As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_NormalizedHeight (Byval NormalizedHeight As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_PresetShape (Byval PresetShape As Office.MsoPresetTextEffectShape Ptr) As HRESULT
		Declare Abstract Function Let_PresetShape (Byval PresetShape As Office.MsoPresetTextEffectShape) As HRESULT
		Declare Abstract Function Get_PresetTextEffect (Byval Preset As Office.MsoPresetTextEffect Ptr) As HRESULT
		Declare Abstract Function Let_PresetTextEffect (Byval Preset As Office.MsoPresetTextEffect) As HRESULT
		Declare Abstract Function Get_RotatedChars (Byval RotatedChars As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_RotatedChars (Byval RotatedChars As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_Text (Byval Text As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Text (Byval Text As BSTR) As HRESULT
		Declare Abstract Function Get_Tracking (Byval Tracking As Single Ptr) As HRESULT
		Declare Abstract Function Let_Tracking (Byval Tracking As Single) As HRESULT
	End Type 'TextEffectFormat_

	Type ThreeDFormat_ Extends Office._IMsoDispObj
		Declare Abstract Function Get_Parent (Byval Parent As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function IncrementRotationX (Byval Increment As Single) As HRESULT
		Declare Abstract Function IncrementRotationY (Byval Increment As Single) As HRESULT
		Declare Abstract Function ResetRotation () As HRESULT
		Declare Abstract Function SetThreeDFormat (Byval PresetThreeDFormat As Office.MsoPresetThreeDFormat) As HRESULT
		Declare Abstract Function SetExtrusionDirection (Byval PresetExtrusionDirection As Office.MsoPresetExtrusionDirection) As HRESULT
		Declare Abstract Function Get_Depth (Byval Depth As Single Ptr) As HRESULT
		Declare Abstract Function Let_Depth (Byval Depth As Single) As HRESULT
		Declare Abstract Function Get_ExtrusionColor (Byval ExtrusionColor As ColorFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ExtrusionColorType (Byval ExtrusionColorType As Office.MsoExtrusionColorType Ptr) As HRESULT
		Declare Abstract Function Let_ExtrusionColorType (Byval ExtrusionColorType As Office.MsoExtrusionColorType) As HRESULT
		Declare Abstract Function Get_Perspective (Byval Perspective As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_Perspective (Byval Perspective As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_PresetExtrusionDirection (Byval PresetExtrusionDirection As Office.MsoPresetExtrusionDirection Ptr) As HRESULT
		Declare Abstract Function Get_PresetLightingDirection (Byval PresetLightingDirection As Office.MsoPresetLightingDirection Ptr) As HRESULT
		Declare Abstract Function Let_PresetLightingDirection (Byval PresetLightingDirection As Office.MsoPresetLightingDirection) As HRESULT
		Declare Abstract Function Get_PresetLightingSoftness (Byval PresetLightingSoftness As Office.MsoPresetLightingSoftness Ptr) As HRESULT
		Declare Abstract Function Let_PresetLightingSoftness (Byval PresetLightingSoftness As Office.MsoPresetLightingSoftness) As HRESULT
		Declare Abstract Function Get_PresetMaterial (Byval PresetMaterial As Office.MsoPresetMaterial Ptr) As HRESULT
		Declare Abstract Function Let_PresetMaterial (Byval PresetMaterial As Office.MsoPresetMaterial) As HRESULT
		Declare Abstract Function Get_PresetThreeDFormat (Byval PresetThreeDFormat As Office.MsoPresetThreeDFormat Ptr) As HRESULT
		Declare Abstract Function Get_RotationX (Byval RotationX As Single Ptr) As HRESULT
		Declare Abstract Function Let_RotationX (Byval RotationX As Single) As HRESULT
		Declare Abstract Function Get_RotationY (Byval RotationY As Single Ptr) As HRESULT
		Declare Abstract Function Let_RotationY (Byval RotationY As Single) As HRESULT
		Declare Abstract Function Get_Visible (Byval Visible As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval Visible As Office.MsoTriState) As HRESULT
		Declare Abstract Function SetPresetCamera (Byval PresetCamera As Office.MsoPresetCamera) As HRESULT
		Declare Abstract Function IncrementRotationZ (Byval Increment As Single) As HRESULT
		Declare Abstract Function IncrementRotationHorizontal (Byval Increment As Single) As HRESULT
		Declare Abstract Function IncrementRotationVertical (Byval Increment As Single) As HRESULT
		Declare Abstract Function Get_PresetLighting (Byval PresetLightRigType As Office.MsoLightRigType Ptr) As HRESULT
		Declare Abstract Function Let_PresetLighting (Byval PresetLightRigType As Office.MsoLightRigType) As HRESULT
		Declare Abstract Function Get_Z (Byval Z As Single Ptr) As HRESULT
		Declare Abstract Function Let_Z (Byval Z As Single) As HRESULT
		Declare Abstract Function Get_BevelTopType (Byval BevelTopType As Office.MsoBevelType Ptr) As HRESULT
		Declare Abstract Function Let_BevelTopType (Byval BevelTopType As Office.MsoBevelType) As HRESULT
		Declare Abstract Function Get_BevelTopInset (Byval BevelTopInset As Single Ptr) As HRESULT
		Declare Abstract Function Let_BevelTopInset (Byval BevelTopInset As Single) As HRESULT
		Declare Abstract Function Get_BevelTopDepth (Byval BevelTopDepth As Single Ptr) As HRESULT
		Declare Abstract Function Let_BevelTopDepth (Byval BevelTopDepth As Single) As HRESULT
		Declare Abstract Function Get_BevelBottomType (Byval BevelBottomType As Office.MsoBevelType Ptr) As HRESULT
		Declare Abstract Function Let_BevelBottomType (Byval BevelBottomType As Office.MsoBevelType) As HRESULT
		Declare Abstract Function Get_BevelBottomInset (Byval BevelBottomInset As Single Ptr) As HRESULT
		Declare Abstract Function Let_BevelBottomInset (Byval BevelBottomInset As Single) As HRESULT
		Declare Abstract Function Get_BevelBottomDepth (Byval BevelBottomDepth As Single Ptr) As HRESULT
		Declare Abstract Function Let_BevelBottomDepth (Byval BevelBottomDepth As Single) As HRESULT
		Declare Abstract Function Get_PresetCamera (Byval PresetCamera As Office.MsoPresetCamera Ptr) As HRESULT
		Declare Abstract Function Get_RotationZ (Byval RotationZ As Single Ptr) As HRESULT
		Declare Abstract Function Let_RotationZ (Byval RotationZ As Single) As HRESULT
		Declare Abstract Function Get_ContourWidth (Byval Width As Single Ptr) As HRESULT
		Declare Abstract Function Let_ContourWidth (Byval Width As Single) As HRESULT
		Declare Abstract Function Get_ContourColor (Byval ContourColor As ColorFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_FieldOfView (Byval FOV As Single Ptr) As HRESULT
		Declare Abstract Function Let_FieldOfView (Byval FOV As Single) As HRESULT
		Declare Abstract Function Get_ProjectText (Byval ProjectText As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_ProjectText (Byval ProjectText As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_LightAngle (Byval LightAngle As Single Ptr) As HRESULT
		Declare Abstract Function Let_LightAngle (Byval LightAngle As Single) As HRESULT
	End Type 'ThreeDFormat_

	Type FillFormat_ Extends Office._IMsoDispObj
		Declare Abstract Function Get_Parent (Byval Parent As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Background () As HRESULT
		Declare Abstract Function OneColorGradient (Byval Style As Office.MsoGradientStyle, Byval Variant As Long, Byval Degree As Single) As HRESULT
		Declare Abstract Function Patterned (Byval Pattern As Office.MsoPatternType) As HRESULT
		Declare Abstract Function PresetGradient (Byval Style As Office.MsoGradientStyle, Byval Variant As Long, Byval PresetGradientType As Office.MsoPresetGradientType) As HRESULT
		Declare Abstract Function PresetTextured (Byval PresetTexture As Office.MsoPresetTexture) As HRESULT
		Declare Abstract Function Solid () As HRESULT
		Declare Abstract Function TwoColorGradient (Byval Style As Office.MsoGradientStyle, Byval Variant As Long) As HRESULT
		Declare Abstract Function UserPicture (Byval PictureFile As BSTR) As HRESULT
		Declare Abstract Function UserTextured (Byval TextureFile As BSTR) As HRESULT
		Declare Abstract Function Get_BackColor (Byval BackColor As ColorFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Let_BackColor (Byval BackColor As ColorFormat Ptr) As HRESULT
		Declare Abstract Function Get_ForeColor (Byval ForeColor As ColorFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ForeColor (Byval ForeColor As ColorFormat Ptr) As HRESULT
		Declare Abstract Function Get_GradientColorType (Byval GradientColorType As Office.MsoGradientColorType Ptr) As HRESULT
		Declare Abstract Function Get_GradientDegree (Byval GradientDegree As Single Ptr) As HRESULT
		Declare Abstract Function Get_GradientStyle (Byval GradientStyle As Office.MsoGradientStyle Ptr) As HRESULT
		Declare Abstract Function Get_GradientVariant (Byval GradientVariant As Long Ptr) As HRESULT
		Declare Abstract Function Get_Pattern (Byval Pattern As Office.MsoPatternType Ptr) As HRESULT
		Declare Abstract Function Get_PresetGradientType (Byval PresetGradientType As Office.MsoPresetGradientType Ptr) As HRESULT
		Declare Abstract Function Get_PresetTexture (Byval PresetTexture As Office.MsoPresetTexture Ptr) As HRESULT
		Declare Abstract Function Get_TextureName (Byval TextureName As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_TextureType (Byval TextureType As Office.MsoTextureType Ptr) As HRESULT
		Declare Abstract Function Get_Transparency (Byval Transparency As Single Ptr) As HRESULT
		Declare Abstract Function Let_Transparency (Byval Transparency As Single) As HRESULT
		Declare Abstract Function Get_Type (Byval Type_v As Office.MsoFillType Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval Visible As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval Visible As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_GradientStops (Byval GradientStops As Office.GradientStops Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TextureOffsetX (Byval TextureOffsetX As Single Ptr) As HRESULT
		Declare Abstract Function Let_TextureOffsetX (Byval TextureOffsetX As Single) As HRESULT
		Declare Abstract Function Get_TextureOffsetY (Byval TextureOffsetY As Single Ptr) As HRESULT
		Declare Abstract Function Let_TextureOffsetY (Byval TextureOffsetY As Single) As HRESULT
		Declare Abstract Function Get_TextureAlignment (Byval TextureAlignment As Office.MsoTextureAlignment Ptr) As HRESULT
		Declare Abstract Function Let_TextureAlignment (Byval TextureAlignment As Office.MsoTextureAlignment) As HRESULT
		Declare Abstract Function Get_TextureHorizontalScale (Byval HorizontalScale As Single Ptr) As HRESULT
		Declare Abstract Function Let_TextureHorizontalScale (Byval HorizontalScale As Single) As HRESULT
		Declare Abstract Function Get_TextureVerticalScale (Byval VerticalScale As Single Ptr) As HRESULT
		Declare Abstract Function Let_TextureVerticalScale (Byval VerticalScale As Single) As HRESULT
		Declare Abstract Function Get_TextureTile (Byval TextureTile As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_TextureTile (Byval TextureTile As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_RotateWithObject (Byval RotateWithObject As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_RotateWithObject (Byval RotateWithObject As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_PictureEffects (Byval PictureEffects As Office.PictureEffects Ptr Ptr) As HRESULT
		Declare Abstract Function Get_GradientAngle (Byval GradientAngle As Single Ptr) As HRESULT
		Declare Abstract Function Let_GradientAngle (Byval GradientAngle As Single) As HRESULT
	End Type 'FillFormat_

	Type DiagramNodes_ Extends Office._IMsoDispObj
		Declare Abstract Function Get__NewEnum (Byval ppunkEnum As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval ppdn As DiagramNode Ptr Ptr) As HRESULT
		Declare Abstract Function SelectAll () As HRESULT
		Declare Abstract Function Get_Parent (Byval ppParent As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval pcDiagramNodes As Long Ptr) As HRESULT
	End Type 'DiagramNodes_

	Type DiagramNodeChildren_ Extends Office._IMsoDispObj
		Declare Abstract Function Get__NewEnum (Byval ppunkEnum As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function Item (Byval Index As Variant Ptr, Byval ppNode As DiagramNode Ptr Ptr) As HRESULT
		Declare Abstract Function AddNode (Byval Index As Variant Ptr, Byval nodeType As Office.MsoDiagramNodeType, Byval ppNewNode As DiagramNode Ptr Ptr) As HRESULT
		Declare Abstract Function SelectAll () As HRESULT
		Declare Abstract Function Get_Parent (Byval ppParent As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval pcDiagramNodes As Long Ptr) As HRESULT
		Declare Abstract Function Get_FirstChild (Byval pFirst As DiagramNode Ptr Ptr) As HRESULT
		Declare Abstract Function Get_LastChild (Byval pLast As DiagramNode Ptr Ptr) As HRESULT
	End Type 'DiagramNodeChildren_

	Type DiagramNode_ Extends Office._IMsoDispObj
		Declare Abstract Function AddNode (Byval pos As Office.MsoRelativeNodePosition, Byval nodeType As Office.MsoDiagramNodeType, Byval NewNode As DiagramNode Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function MoveNode (Byval pTargetNode As DiagramNode Ptr, Byval pos As Office.MsoRelativeNodePosition) As HRESULT
		Declare Abstract Function ReplaceNode (Byval pTargetNode As DiagramNode Ptr) As HRESULT
		Declare Abstract Function SwapNode (Byval pTargetNode As DiagramNode Ptr, Byval swapChildren As VARIANT_BOOL) As HRESULT
		Declare Abstract Function CloneNode (Byval copyChildren As VARIANT_BOOL, Byval pTargetNode As DiagramNode Ptr, Byval pos As Office.MsoRelativeNodePosition, Byval ppNode As DiagramNode Ptr Ptr) As HRESULT
		Declare Abstract Function TransferChildren (Byval pReceivingNode As DiagramNode Ptr) As HRESULT
		Declare Abstract Function NextNode (Byval ppNextNode As DiagramNode Ptr Ptr) As HRESULT
		Declare Abstract Function PrevNode (Byval ppPrevNode As DiagramNode Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval ppParent As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Children (Byval ppChildren As DiagramNodeChildren Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Shape (Byval ppShape As Shape Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Root (Byval ppRoot As DiagramNode Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Diagram (Byval ppDiagram As Office.IMsoDiagram Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Layout (Byval pdgmType As Office.MsoOrgChartLayoutType Ptr) As HRESULT
		Declare Abstract Function Let_Layout (Byval pdgmType As Office.MsoOrgChartLayoutType) As HRESULT
		Declare Abstract Function Get_TextShape (Byval Shape As Shape Ptr Ptr) As HRESULT
	End Type 'DiagramNode_

	Type IRTDUpdateEvent_ Extends CAIDispatch
		Declare Abstract Function UpdateNotify () As HRESULT
		Declare Abstract Function Get_HeartbeatInterval (Byval plRetVal As Long Ptr) As HRESULT
		Declare Abstract Function Let_HeartbeatInterval (Byval plRetVal As Long) As HRESULT
		Declare Abstract Function Disconnect () As HRESULT
	End Type 'IRTDUpdateEvent_

	Type IRtdServer_ Extends CAIDispatch
		Declare Abstract Function ServerStart (Byval CallbackObject As IRTDUpdateEvent Ptr, Byval pfRes As Long Ptr) As HRESULT
		Declare Abstract Function ConnectData (Byval TopicID As Long, Byval Strings As SAFEARRAY Ptr, Byval GetNewValues As VARIANT_BOOL Ptr, Byval pvarOut As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function RefreshData (Byval TopicCount As Long Ptr, Byval parrayOut As SAFEARRAY Ptr) As HRESULT
		Declare Abstract Function DisconnectData (Byval TopicID As Long) As HRESULT
		Declare Abstract Function Heartbeat (Byval pfRes As Long Ptr) As HRESULT
		Declare Abstract Function ServerTerminate () As HRESULT
	End Type 'IRtdServer_

	Type TextFrame2_ Extends Office._IMsoDispObj
		Declare Abstract Function Get_Parent (Byval Parent As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MarginBottom (Byval MarginBottom As Single Ptr) As HRESULT
		Declare Abstract Function Let_MarginBottom (Byval MarginBottom As Single) As HRESULT
		Declare Abstract Function Get_MarginLeft (Byval MarginLeft As Single Ptr) As HRESULT
		Declare Abstract Function Let_MarginLeft (Byval MarginLeft As Single) As HRESULT
		Declare Abstract Function Get_MarginRight (Byval MarginRight As Single Ptr) As HRESULT
		Declare Abstract Function Let_MarginRight (Byval MarginRight As Single) As HRESULT
		Declare Abstract Function Get_MarginTop (Byval MarginTop As Single Ptr) As HRESULT
		Declare Abstract Function Let_MarginTop (Byval MarginTop As Single) As HRESULT
		Declare Abstract Function Get_Orientation (Byval Orientation As Office.MsoTextOrientation Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval Orientation As Office.MsoTextOrientation) As HRESULT
		Declare Abstract Function Get_HorizontalAnchor (Byval HorizontalAnchor As Office.MsoHorizontalAnchor Ptr) As HRESULT
		Declare Abstract Function Let_HorizontalAnchor (Byval HorizontalAnchor As Office.MsoHorizontalAnchor) As HRESULT
		Declare Abstract Function Get_VerticalAnchor (Byval VerticalAnchor As Office.MsoVerticalAnchor Ptr) As HRESULT
		Declare Abstract Function Let_VerticalAnchor (Byval VerticalAnchor As Office.MsoVerticalAnchor) As HRESULT
		Declare Abstract Function Get_PathFormat (Byval PathFormat As Office.MsoPathFormat Ptr) As HRESULT
		Declare Abstract Function Let_PathFormat (Byval PathFormat As Office.MsoPathFormat) As HRESULT
		Declare Abstract Function Get_WarpFormat (Byval WarpFormat As Office.MsoWarpFormat Ptr) As HRESULT
		Declare Abstract Function Let_WarpFormat (Byval WarpFormat As Office.MsoWarpFormat) As HRESULT
		Declare Abstract Function Get_WordArtformat (Byval WordArtformat As Office.MsoPresetTextEffect Ptr) As HRESULT
		Declare Abstract Function Let_WordArtformat (Byval WordArtformat As Office.MsoPresetTextEffect) As HRESULT
		Declare Abstract Function Get_WordWrap (Byval WordWrap As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_WordWrap (Byval WordWrap As Office.MsoTriState) As HRESULT
		Declare Abstract Function Get_AutoSize (Byval AutoSize As Office.MsoAutoSize Ptr) As HRESULT
		Declare Abstract Function Let_AutoSize (Byval AutoSize As Office.MsoAutoSize) As HRESULT
		Declare Abstract Function Get_ThreeD (Byval ThreeD As ThreeDFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HasText (Byval pHasText As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Get_TextRange (Byval Range As Office.TextRange2 Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Column (Byval Column As Office.TextColumn2 Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Ruler (Byval Ruler As Office.Ruler2 Ptr Ptr) As HRESULT
		Declare Abstract Function DeleteText () As HRESULT
		Declare Abstract Function Get_NoTextRotation (Byval NoTextRotation As Office.MsoTriState Ptr) As HRESULT
		Declare Abstract Function Let_NoTextRotation (Byval NoTextRotation As Office.MsoTriState) As HRESULT
	End Type 'TextFrame2_

	Type _Application_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActiveCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActiveChart (Byval RHS As Chart Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActiveDialog (Byval RHS As DialogSheet Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActiveMenuBar (Byval RHS As MenuBar Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActivePrinter (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ActivePrinter (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ActiveSheet (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActiveWindow (Byval RHS As Window Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActiveWorkbook (Byval RHS As Workbook Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AddIns (Byval RHS As AddIns Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Assistant (Byval RHS As Office.Assistant Ptr Ptr) As HRESULT
		Declare Abstract Function Calculate (Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Cells (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Charts (Byval RHS As Sheets Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Columns (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CommandBars (Byval RHS As Office.CommandBars Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DDEAppReturnCode (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function DDEExecute (Byval Channel As Long, Byval String_v As BSTR, Byval lcid As Long) As HRESULT
		Declare Abstract Function DDEInitiate (Byval App As BSTR, Byval Topic As BSTR, Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function DDEPoke (Byval Channel As Long, Byval Item As Variant Ptr, Byval Data As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function DDERequest (Byval Channel As Long, Byval Item As BSTR, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function DDETerminate (Byval Channel As Long, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_DialogSheets (Byval RHS As Sheets Ptr Ptr) As HRESULT
		Declare Abstract Function Evaluate (Byval Name As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function _Evaluate (Byval Name As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function ExecuteExcel4Macro (Byval String_v As BSTR, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Intersect (Byval Arg1 As Range Ptr, Byval Arg2 As Range Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval lcid As Long, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MenuBars (Byval RHS As MenuBars Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Modules (Byval RHS As Modules Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Names (Byval RHS As Names Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Range (Byval Cell1 As Variant Ptr, Byval Cell2 As Variant Ptr, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Rows (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Run (Byval Macro As Variant Ptr, Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function _Run2 (Byval Macro As Variant Ptr, Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Selection (Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function SendKeys (Byval Keys As Variant Ptr, Byval Wait_v As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Sheets (Byval RHS As Sheets Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ShortcutMenus (Byval Index As Long, Byval RHS As Menu Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ThisWorkbook (Byval lcid As Long, Byval RHS As Workbook Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Toolbars (Byval RHS As Toolbars Ptr Ptr) As HRESULT
		Declare Abstract Function Union_ (Byval Arg1 As Range Ptr, Byval Arg2 As Range Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval lcid As Long, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Windows (Byval RHS As Windows Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Workbooks (Byval RHS As Workbooks Ptr Ptr) As HRESULT
		Declare Abstract Function Get_WorksheetFunction (Byval RHS As WorksheetFunction Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Worksheets (Byval RHS As Sheets Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Excel4IntlMacroSheets (Byval RHS As Sheets Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Excel4MacroSheets (Byval RHS As Sheets Ptr Ptr) As HRESULT
		Declare Abstract Function ActivateMicrosoftApp (Byval Index As XlMSApplication, Byval lcid As Long) As HRESULT
		Declare Abstract Function AddChartAutoFormat (Byval Chart As Variant Ptr, Byval Name As BSTR, Byval Description As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function AddCustomList (Byval ListArray As Variant Ptr, Byval ByRow As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_AlertBeforeOverwriting (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AlertBeforeOverwriting (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AltStartupPath (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_AltStartupPath (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_AskToUpdateLinks (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AskToUpdateLinks (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_EnableAnimations (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableAnimations (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AutoCorrect (Byval RHS As AutoCorrect Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Build (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_CalculateBeforeSave (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_CalculateBeforeSave (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Calculation (Byval lcid As Long, Byval RHS As XlCalculation Ptr) As HRESULT
		Declare Abstract Function Let_Calculation (Byval lcid As Long, Byval RHS As XlCalculation) As HRESULT
		Declare Abstract Function Get_Caller (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CanPlaySounds (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_CanRecordSounds (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_CellDragAndDrop (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_CellDragAndDrop (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function CentimetersToPoints (Byval Centimeters As Double, Byval lcid As Long, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval Word As BSTR, Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ClipboardFormats (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DisplayClipboardWindow (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayClipboardWindow (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ColorButtons (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ColorButtons (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_CommandUnderlines (Byval lcid As Long, Byval RHS As XlCommandUnderlines Ptr) As HRESULT
		Declare Abstract Function Let_CommandUnderlines (Byval lcid As Long, Byval RHS As XlCommandUnderlines) As HRESULT
		Declare Abstract Function Get_ConstrainNumeric (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ConstrainNumeric (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function ConvertFormula (Byval Formula As Variant Ptr, Byval FromReferenceStyle As XlReferenceStyle, Byval ToReferenceStyle As Variant Ptr, Byval ToAbsolute As Variant Ptr, Byval RelativeTo As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CopyObjectsWithCells (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_CopyObjectsWithCells (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Cursor (Byval lcid As Long, Byval RHS As XlMousePointer Ptr) As HRESULT
		Declare Abstract Function Let_Cursor (Byval lcid As Long, Byval RHS As XlMousePointer) As HRESULT
		Declare Abstract Function Get_CustomListCount (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_CutCopyMode (Byval lcid As Long, Byval RHS As XlCutCopyMode Ptr) As HRESULT
		Declare Abstract Function Let_CutCopyMode (Byval lcid As Long, Byval RHS As XlCutCopyMode) As HRESULT
		Declare Abstract Function Get_DataEntryMode (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_DataEntryMode (Byval lcid As Long, Byval RHS As Long) As HRESULT
		Declare Abstract Function Dummy1 (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Dummy2 (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Dummy3 (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Dummy4 (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Dummy5 (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Dummy6 (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Dummy7 (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Dummy8 (Byval Arg1 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Dummy9 (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Dummy10 (Byval arg As Variant Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Dummy11 () As HRESULT
		Declare Abstract Function Get__Default (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_DefaultFilePath (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_DefaultFilePath (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function DeleteChartAutoFormat (Byval Name As BSTR, Byval lcid As Long) As HRESULT
		Declare Abstract Function DeleteCustomList (Byval ListNum As Long, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Dialogs (Byval RHS As Dialogs Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DisplayAlerts (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayAlerts (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayFormulaBar (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayFormulaBar (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayFullScreen (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayFullScreen (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayNoteIndicator (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayNoteIndicator (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayCommentIndicator (Byval RHS As XlCommentDisplayMode Ptr) As HRESULT
		Declare Abstract Function Let_DisplayCommentIndicator (Byval RHS As XlCommentDisplayMode) As HRESULT
		Declare Abstract Function Get_DisplayExcel4Menus (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayExcel4Menus (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayRecentFiles (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayRecentFiles (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayScrollBars (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayScrollBars (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayStatusBar (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayStatusBar (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function DoubleClick (Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_EditDirectlyInCell (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EditDirectlyInCell (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_EnableAutoComplete (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableAutoComplete (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_EnableCancelKey (Byval lcid As Long, Byval RHS As XlEnableCancelKey Ptr) As HRESULT
		Declare Abstract Function Let_EnableCancelKey (Byval lcid As Long, Byval RHS As XlEnableCancelKey) As HRESULT
		Declare Abstract Function Get_EnableSound (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableSound (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_EnableTipWizard (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableTipWizard (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_FileConverters (Byval Index1 As Variant Ptr, Byval Index2 As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_FileSearch (Byval RHS As Office.FileSearch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_FileFind (Byval RHS As Office.IFind Ptr Ptr) As HRESULT
		Declare Abstract Function _FindFile (Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_FixedDecimal (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_FixedDecimal (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_FixedDecimalPlaces (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_FixedDecimalPlaces (Byval lcid As Long, Byval RHS As Long) As HRESULT
		Declare Abstract Function GetCustomListContents (Byval ListNum As Long, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function GetCustomListNum (Byval ListArray As Variant Ptr, Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function GetOpenFilename (Byval FileFilter As Variant Ptr, Byval FilterIndex As Variant Ptr, Byval Title As Variant Ptr, Byval ButtonText As Variant Ptr, Byval MultiSelect As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function GetSaveAsFilename (Byval InitialFilename As Variant Ptr, Byval FileFilter As Variant Ptr, Byval FilterIndex As Variant Ptr, Byval Title As Variant Ptr, Byval ButtonText As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Goto_ (Byval Reference As Variant Ptr, Byval Scroll As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Height (Byval lcid As Long, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Height (Byval lcid As Long, Byval RHS As Double) As HRESULT
		Declare Abstract Function Help (Byval HelpFile As Variant Ptr, Byval HelpContextID As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_IgnoreRemoteRequests (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_IgnoreRemoteRequests (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function InchesToPoints (Byval Inches As Double, Byval lcid As Long, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function InputBox (Byval Prompt As BSTR, Byval Title As Variant Ptr, Byval Default As Variant Ptr, Byval Left As Variant Ptr, Byval Top As Variant Ptr, Byval HelpFile As Variant Ptr, Byval HelpContextID As Variant Ptr, Byval Type_v As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Interactive (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Interactive (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_International (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Iteration (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Iteration (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_LargeButtons (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LargeButtons (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Left (Byval lcid As Long, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Left (Byval lcid As Long, Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_LibraryPath (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function _MacroOptions (Byval Macro As Variant Ptr, Byval Description As Variant Ptr, Byval HasMenu As Variant Ptr, Byval MenuText As Variant Ptr, Byval HasShortcutKey As Variant Ptr, Byval ShortcutKey As Variant Ptr, Byval Category As Variant Ptr, Byval StatusBar As Variant Ptr, Byval HelpContextID As Variant Ptr, Byval HelpFile As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function MailLogoff (Byval lcid As Long) As HRESULT
		Declare Abstract Function MailLogon (Byval Name As Variant Ptr, Byval Password As Variant Ptr, Byval DownloadNewMail As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_MailSession (Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MailSystem (Byval lcid As Long, Byval RHS As XlMailSystem Ptr) As HRESULT
		Declare Abstract Function Get_MathCoprocessorAvailable (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_MaxChange (Byval lcid As Long, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_MaxChange (Byval lcid As Long, Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_MaxIterations (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_MaxIterations (Byval lcid As Long, Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_MemoryFree (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_MemoryTotal (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_MemoryUsed (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_MouseAvailable (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_MoveAfterReturn (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_MoveAfterReturn (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_MoveAfterReturnDirection (Byval lcid As Long, Byval RHS As XlDirection Ptr) As HRESULT
		Declare Abstract Function Let_MoveAfterReturnDirection (Byval lcid As Long, Byval RHS As XlDirection) As HRESULT
		Declare Abstract Function Get_RecentFiles (Byval RHS As RecentFiles Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function NextLetter (Byval lcid As Long, Byval RHS As Workbook Ptr Ptr) As HRESULT
		Declare Abstract Function Get_NetworkTemplatesPath (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_ODBCErrors (Byval RHS As ODBCErrors Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ODBCTimeout (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ODBCTimeout (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_OnCalculate (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnCalculate (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnData (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnData (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnDoubleClick (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnDoubleClick (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnEntry (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnEntry (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function OnKey (Byval Key As BSTR, Byval Procedure As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function OnRepeat (Byval Text As BSTR, Byval Procedure As BSTR, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_OnSheetActivate (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnSheetActivate (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnSheetDeactivate (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnSheetDeactivate (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function OnTime (Byval EarliestTime As Variant Ptr, Byval Procedure As BSTR, Byval LatestTime As Variant Ptr, Byval Schedule As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function OnUndo (Byval Text As BSTR, Byval Procedure As BSTR, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_OnWindow (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnWindow (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OperatingSystem (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_OrganizationName (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Path (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_PathSeparator (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_PreviousSelections (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PivotTableSelection (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PivotTableSelection (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PromptForSummaryInfo (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PromptForSummaryInfo (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Quit () As HRESULT
		Declare Abstract Function RecordMacro (Byval BasicCode As Variant Ptr, Byval XlmCode As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_RecordRelative (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ReferenceStyle (Byval lcid As Long, Byval RHS As XlReferenceStyle Ptr) As HRESULT
		Declare Abstract Function Let_ReferenceStyle (Byval lcid As Long, Byval RHS As XlReferenceStyle) As HRESULT
		Declare Abstract Function Get_RegisteredFunctions (Byval Index1 As Variant Ptr, Byval Index2 As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function RegisterXLL (Byval Filename As BSTR, Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Repeat (Byval lcid As Long) As HRESULT
		Declare Abstract Function ResetTipWizard (Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_RollZoom (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RollZoom (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Save (Byval Filename As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function SaveWorkspace (Byval Filename As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_ScreenUpdating (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ScreenUpdating (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function SetDefaultChart (Byval FormatName As Variant Ptr, Byval Gallery As Variant Ptr) As HRESULT
		Declare Abstract Function Get_SheetsInNewWorkbook (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_SheetsInNewWorkbook (Byval lcid As Long, Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_ShowChartTipNames (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowChartTipNames (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowChartTipValues (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowChartTipValues (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_StandardFont (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_StandardFont (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_StandardFontSize (Byval lcid As Long, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_StandardFontSize (Byval lcid As Long, Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_StartupPath (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_StatusBar (Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_StatusBar (Byval lcid As Long, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_TemplatesPath (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_ShowToolTips (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowToolTips (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Top (Byval lcid As Long, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Top (Byval lcid As Long, Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_DefaultSaveFormat (Byval RHS As XlFileFormat Ptr) As HRESULT
		Declare Abstract Function Let_DefaultSaveFormat (Byval RHS As XlFileFormat) As HRESULT
		Declare Abstract Function Get_TransitionMenuKey (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_TransitionMenuKey (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_TransitionMenuKeyAction (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_TransitionMenuKeyAction (Byval lcid As Long, Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_TransitionNavigKeys (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TransitionNavigKeys (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Undo (Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_UsableHeight (Byval lcid As Long, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_UsableWidth (Byval lcid As Long, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_UserControl (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_UserControl (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_UserName (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_UserName (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_VBE (Byval RHS As VBIDE.VBE Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Version (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Volatile (Byval Volatile_v As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function _Wait (Byval Time As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Width (Byval lcid As Long, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_Width (Byval lcid As Long, Byval RHS As Double) As HRESULT
		Declare Abstract Function Get_WindowsForPens (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_WindowState (Byval lcid As Long, Byval RHS As XlWindowState Ptr) As HRESULT
		Declare Abstract Function Let_WindowState (Byval lcid As Long, Byval RHS As XlWindowState) As HRESULT
		Declare Abstract Function Get_UILanguage (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_UILanguage (Byval lcid As Long, Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_DefaultSheetDirection (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_DefaultSheetDirection (Byval lcid As Long, Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_CursorMovement (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_CursorMovement (Byval lcid As Long, Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_ControlCharacters (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ControlCharacters (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function _WSFunction (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_EnableEvents (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableEvents (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayInfoWindow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayInfoWindow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Wait (Byval Time As Variant Ptr, Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ExtendList (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ExtendList (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_OLEDBErrors (Byval RHS As OLEDBErrors Ptr Ptr) As HRESULT
		Declare Abstract Function GetPhonetic (Byval Text As Variant Ptr, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_COMAddIns (Byval RHS As Office.COMAddIns Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DefaultWebOptions (Byval RHS As DefaultWebOptions Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ProductCode (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_UserLibraryPath (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_AutoPercentEntry (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoPercentEntry (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_LanguageSettings (Byval RHS As Office.LanguageSettings Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Dummy101 (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Dummy12 (Byval p1 As PivotTable Ptr, Byval p2 As PivotTable Ptr) As HRESULT
		Declare Abstract Function Get_AnswerWizard (Byval RHS As Office.AnswerWizard Ptr Ptr) As HRESULT
		Declare Abstract Function CalculateFull () As HRESULT
		Declare Abstract Function FindFile (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_CalculationVersion (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ShowWindowsInTaskbar (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowWindowsInTaskbar (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_FeatureInstall (Byval RHS As Office.MsoFeatureInstall Ptr) As HRESULT
		Declare Abstract Function Let_FeatureInstall (Byval RHS As Office.MsoFeatureInstall) As HRESULT
		Declare Abstract Function Get_Ready (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Dummy13 (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_FindFormat (Byval RHS As CellFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Set_FindFormat (Byval RHS As CellFormat Ptr) As HRESULT
		Declare Abstract Function Get_ReplaceFormat (Byval RHS As CellFormat Ptr Ptr) As HRESULT
		Declare Abstract Function Set_ReplaceFormat (Byval RHS As CellFormat Ptr) As HRESULT
		Declare Abstract Function Get_UsedObjects (Byval RHS As UsedObjects Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CalculationState (Byval RHS As XlCalculationState Ptr) As HRESULT
		Declare Abstract Function Get_CalculationInterruptKey (Byval RHS As XlCalculationInterruptKey Ptr) As HRESULT
		Declare Abstract Function Let_CalculationInterruptKey (Byval RHS As XlCalculationInterruptKey) As HRESULT
		Declare Abstract Function Get_Watches (Byval RHS As Watches Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DisplayFunctionToolTips (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayFunctionToolTips (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AutomationSecurity (Byval RHS As Office.MsoAutomationSecurity Ptr) As HRESULT
		Declare Abstract Function Let_AutomationSecurity (Byval RHS As Office.MsoAutomationSecurity) As HRESULT
		Declare Abstract Function Get_FileDialog (Byval fileDialogType As Office.MsoFileDialogType, Byval RHS As Office.FileDialog Ptr Ptr) As HRESULT
		Declare Abstract Function Dummy14 () As HRESULT
		Declare Abstract Function CalculateFullRebuild () As HRESULT
		Declare Abstract Function Get_DisplayPasteOptions (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayPasteOptions (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayInsertOptions (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayInsertOptions (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_GenerateGetPivotData (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_GenerateGetPivotData (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AutoRecover (Byval RHS As AutoRecover Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Hwnd (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Hinstance (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function CheckAbort (Byval KeepAbort As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ErrorCheckingOptions (Byval RHS As ErrorCheckingOptions Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AutoFormatAsYouTypeReplaceHyperlinks (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoFormatAsYouTypeReplaceHyperlinks (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SmartTagRecognizers (Byval RHS As SmartTagRecognizers Ptr Ptr) As HRESULT
		Declare Abstract Function Get_NewWorkbook (Byval RHS As Office.NewFile Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SpellingOptions (Byval RHS As SpellingOptions Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Speech (Byval RHS As Speech Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MapPaperSize (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_MapPaperSize (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowStartupDialog (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowStartupDialog (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DecimalSeparator (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_DecimalSeparator (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ThousandsSeparator (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ThousandsSeparator (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_UseSystemSeparators (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_UseSystemSeparators (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ThisCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RTD (Byval RHS As RTD Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DisplayDocumentActionTaskPane (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayDocumentActionTaskPane (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function DisplayXMLSourcePane (Byval XmlMap As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ArbitraryXMLSupportAvailable (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Support (Byval Object As IDispatch Ptr, Byval ID As Long, Byval arg As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Dummy20 (Byval grfCompareFunctions As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MeasurementUnit (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_MeasurementUnit (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_ShowSelectionFloaties (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowSelectionFloaties (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowMenuFloaties (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowMenuFloaties (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowDevTools (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowDevTools (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_EnableLivePreview (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableLivePreview (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayDocumentInformationPanel (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayDocumentInformationPanel (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AlwaysUseClearType (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AlwaysUseClearType (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_WarnOnFunctionNameConflict (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_WarnOnFunctionNameConflict (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_FormulaBarHeight (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_FormulaBarHeight (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_DisplayFormulaAutoComplete (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayFormulaAutoComplete (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_GenerateTableRefs (Byval lcid As Long, Byval RHS As XlGenerateTableRefs Ptr) As HRESULT
		Declare Abstract Function Let_GenerateTableRefs (Byval lcid As Long, Byval RHS As XlGenerateTableRefs) As HRESULT
		Declare Abstract Function Get_Assistance (Byval RHS As Office.IAssistance Ptr Ptr) As HRESULT
		Declare Abstract Function CalculateUntilAsyncQueriesDone () As HRESULT
		Declare Abstract Function Get_EnableLargeOperationAlert (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableLargeOperationAlert (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_LargeOperationCellThousandCount (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_LargeOperationCellThousandCount (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_DeferAsyncQueries (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DeferAsyncQueries (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_MultiThreadedCalculation (Byval RHS As MultiThreadedCalculation Ptr Ptr) As HRESULT
		Declare Abstract Function SharePointVersion (Byval bstrUrl As BSTR, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_ActiveEncryptionSession (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_HighQualityModeForGraphics (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HighQualityModeForGraphics (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_FileExportConverters (Byval RHS As FileExportConverters Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SmartArtLayouts (Byval RHS As Office.SmartArtLayouts Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SmartArtQuickStyles (Byval RHS As Office.SmartArtQuickStyles Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SmartArtColors (Byval RHS As Office.SmartArtColors Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AddIns2 (Byval RHS As AddIns2 Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PrintCommunication (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrintCommunication (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function MacroOptions (Byval Macro As Variant Ptr, Byval Description As Variant Ptr, Byval HasMenu As Variant Ptr, Byval MenuText As Variant Ptr, Byval HasShortcutKey As Variant Ptr, Byval ShortcutKey As Variant Ptr, Byval Category As Variant Ptr, Byval StatusBar As Variant Ptr, Byval HelpContextID As Variant Ptr, Byval HelpFile As Variant Ptr, Byval ArgumentDescriptions As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_UseClusterConnector (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_UseClusterConnector (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ClusterConnector (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ClusterConnector (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Quitting (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_Dummy22 (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Dummy22 (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Dummy23 (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Dummy23 (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ProtectedViewWindows (Byval RHS As ProtectedViewWindows Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActiveProtectedViewWindow (Byval RHS As ProtectedViewWindow Ptr Ptr) As HRESULT
		Declare Abstract Function Get_IsSandboxed (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_SaveISO8601Dates (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SaveISO8601Dates (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HinstancePtr (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_FileValidation (Byval RHS As Office.MsoFileValidationMode Ptr) As HRESULT
		Declare Abstract Function Let_FileValidation (Byval RHS As Office.MsoFileValidationMode) As HRESULT
		Declare Abstract Function Get_FileValidationPivot (Byval RHS As XlFileValidationPivotMode Ptr) As HRESULT
		Declare Abstract Function Let_FileValidationPivot (Byval RHS As XlFileValidationPivotMode) As HRESULT
		Declare Abstract Function Get_ShowQuickAnalysis (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowQuickAnalysis (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_QuickAnalysis (Byval RHS As QuickAnalysis Ptr Ptr) As HRESULT
		Declare Abstract Function Get_FlashFill (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_FlashFill (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_EnableMacroAnimations (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableMacroAnimations (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ChartDataPointTrack (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ChartDataPointTrack (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_FlashFillMode (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_FlashFillMode (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_MergeInstances (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_MergeInstances (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_EnableCheckFileExtensions (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableCheckFileExtensions (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type '_Application_

	Type _Chart_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Activate (Byval lcid As Long) As HRESULT
		Declare Abstract Function Copy (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Delete_ (Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_CodeName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get__CodeName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let__CodeName (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Index (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Move (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Next (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_OnDoubleClick (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnDoubleClick (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnSheetActivate (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnSheetActivate (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnSheetDeactivate (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnSheetDeactivate (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_PageSetup (Byval RHS As PageSetup Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Previous (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function __PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function PrintPreview (Byval EnableChanges As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function _Protect (Byval Password As Variant Ptr, Byval DrawingObjects_v As Variant Ptr, Byval Contents As Variant Ptr, Byval Scenarios As Variant Ptr, Byval UserInterfaceOnly As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_ProtectContents (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ProtectDrawingObjects (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ProtectionMode (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function _Dummy23 () As HRESULT
		Declare Abstract Function _SaveAs (Byval Filename As BSTR, Byval FileFormat As Variant Ptr, Byval Password As Variant Ptr, Byval WriteResPassword As Variant Ptr, Byval ReadOnlyRecommended As Variant Ptr, Byval CreateBackup As Variant Ptr, Byval AddToMru As Variant Ptr, Byval TextCodepage As Variant Ptr, Byval TextVisualLayout As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Unprotect (Byval Password As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Visible (Byval lcid As Long, Byval RHS As XlSheetVisibility Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval lcid As Long, Byval RHS As XlSheetVisibility) As HRESULT
		Declare Abstract Function Get_Shapes (Byval RHS As Shapes Ptr Ptr) As HRESULT
		Declare Abstract Function _ApplyDataLabels (Byval Type_v As XlDataLabelsType, Byval LegendKey As Variant Ptr, Byval AutoText As Variant Ptr, Byval HasLeaderLines As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Arcs (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Area3DGroup (Byval lcid As Long, Byval RHS As ChartGroup Ptr Ptr) As HRESULT
		Declare Abstract Function AreaGroups (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function AutoFormat (Byval Gallery As Long, Byval Format As Variant Ptr) As HRESULT
		Declare Abstract Function Get_AutoScaling (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoScaling (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Axes (Byval Type_v As Variant Ptr, Byval AxisGroup As XlAxisGroup, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function SetBackgroundPicture (Byval Filename As BSTR) As HRESULT
		Declare Abstract Function Get_Bar3DGroup (Byval lcid As Long, Byval RHS As ChartGroup Ptr Ptr) As HRESULT
		Declare Abstract Function BarGroups (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Buttons (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ChartArea (Byval lcid As Long, Byval RHS As ChartArea Ptr Ptr) As HRESULT
		Declare Abstract Function ChartGroups (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function ChartObjects (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ChartTitle (Byval lcid As Long, Byval RHS As ChartTitle Ptr Ptr) As HRESULT
		Declare Abstract Function ChartWizard (Byval Source As Variant Ptr, Byval Gallery As Variant Ptr, Byval Format As Variant Ptr, Byval PlotBy As Variant Ptr, Byval CategoryLabels As Variant Ptr, Byval SeriesLabels As Variant Ptr, Byval HasLegend As Variant Ptr, Byval Title As Variant Ptr, Byval CategoryTitle As Variant Ptr, Byval ValueTitle As Variant Ptr, Byval ExtraTitle As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function CheckBoxes (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Column3DGroup (Byval lcid As Long, Byval RHS As ChartGroup Ptr Ptr) As HRESULT
		Declare Abstract Function ColumnGroups (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat, Byval Size As XlPictureAppearance, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Corners (Byval lcid As Long, Byval RHS As Corners Ptr Ptr) As HRESULT
		Declare Abstract Function CreatePublisher (Byval Edition As Variant Ptr, Byval Appearance As XlPictureAppearance, Byval Size As XlPictureAppearance, Byval ContainsPICT As Variant Ptr, Byval ContainsBIFF As Variant Ptr, Byval ContainsRTF As Variant Ptr, Byval ContainsVALU As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_DataTable (Byval RHS As DataTable Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DepthPercent (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_DepthPercent (Byval lcid As Long, Byval RHS As Long) As HRESULT
		Declare Abstract Function Deselect (Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_DisplayBlanksAs (Byval lcid As Long, Byval RHS As XlDisplayBlanksAs Ptr) As HRESULT
		Declare Abstract Function Let_DisplayBlanksAs (Byval lcid As Long, Byval RHS As XlDisplayBlanksAs) As HRESULT
		Declare Abstract Function DoughnutGroups (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Drawings (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function DrawingObjects (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function DropDowns (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Elevation (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Elevation (Byval lcid As Long, Byval RHS As Long) As HRESULT
		Declare Abstract Function Evaluate (Byval Name As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function _Evaluate (Byval Name As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Floor (Byval lcid As Long, Byval RHS As Floor Ptr Ptr) As HRESULT
		Declare Abstract Function Get_GapDepth (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_GapDepth (Byval lcid As Long, Byval RHS As Long) As HRESULT
		Declare Abstract Function GroupBoxes (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function GroupObjects (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HasAxis (Byval Index1 As Variant Ptr, Byval Index2 As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_HasAxis (Byval Index1 As Variant Ptr, Byval Index2 As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_HasDataTable (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasDataTable (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HasLegend (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasLegend (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HasTitle (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasTitle (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HeightPercent (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_HeightPercent (Byval lcid As Long, Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_Hyperlinks (Byval RHS As Hyperlinks Ptr Ptr) As HRESULT
		Declare Abstract Function Labels (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Legend (Byval lcid As Long, Byval RHS As Legend Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Line3DGroup (Byval lcid As Long, Byval RHS As ChartGroup Ptr Ptr) As HRESULT
		Declare Abstract Function LineGroups (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Lines (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function ListBoxes (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Location (Byval Where As XlChartLocation, Byval Name As Variant Ptr, Byval RHS As Chart Ptr Ptr) As HRESULT
		Declare Abstract Function OLEObjects (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function OptionButtons (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Ovals (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Paste (Byval Type_v As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Perspective (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Perspective (Byval lcid As Long, Byval RHS As Long) As HRESULT
		Declare Abstract Function Pictures (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Pie3DGroup (Byval lcid As Long, Byval RHS As ChartGroup Ptr Ptr) As HRESULT
		Declare Abstract Function PieGroups (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PlotArea (Byval lcid As Long, Byval RHS As PlotArea Ptr Ptr) As HRESULT
		Declare Abstract Function Get_PlotVisibleOnly (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PlotVisibleOnly (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function RadarGroups (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Rectangles (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RightAngleAxes (Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_RightAngleAxes (Byval lcid As Long, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Rotation (Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Rotation (Byval lcid As Long, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function ScrollBars (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function SeriesCollection (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SizeWithWindow (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SizeWithWindow (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowWindow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowWindow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Spinners (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SubType (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_SubType (Byval lcid As Long, Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_SurfaceGroup (Byval lcid As Long, Byval RHS As ChartGroup Ptr Ptr) As HRESULT
		Declare Abstract Function TextBoxes (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Type (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Type (Byval lcid As Long, Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_ChartType (Byval RHS As XlChartType Ptr) As HRESULT
		Declare Abstract Function Let_ChartType (Byval RHS As XlChartType) As HRESULT
		Declare Abstract Function ApplyCustomType (Byval ChartType As XlChartType, Byval TypeName As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Walls (Byval lcid As Long, Byval RHS As Walls Ptr Ptr) As HRESULT
		Declare Abstract Function Get_WallsAndGridlines2D (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_WallsAndGridlines2D (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function XYGroups (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BarShape (Byval RHS As XlBarShape Ptr) As HRESULT
		Declare Abstract Function Let_BarShape (Byval RHS As XlBarShape) As HRESULT
		Declare Abstract Function Get_PlotBy (Byval RHS As XlRowCol Ptr) As HRESULT
		Declare Abstract Function Let_PlotBy (Byval RHS As XlRowCol) As HRESULT
		Declare Abstract Function CopyChartBuild () As HRESULT
		Declare Abstract Function Get_ProtectFormatting (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ProtectFormatting (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ProtectData (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ProtectData (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ProtectGoalSeek (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ProtectGoalSeek (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ProtectSelection (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ProtectSelection (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function GetChartElement (Byval x As Long, Byval y As Long, Byval ElementID As Long Ptr, Byval Arg1 As Long Ptr, Byval Arg2 As Long Ptr) As HRESULT
		Declare Abstract Function SetSourceData (Byval Source As Range Ptr, Byval PlotBy As Variant Ptr) As HRESULT
		Declare Abstract Function Export_ (Byval Filename As BSTR, Byval FilterName As Variant Ptr, Byval Interactive As Variant Ptr, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Refresh () As HRESULT
		Declare Abstract Function Get_PivotLayout (Byval RHS As PivotLayout Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HasPivotFields (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasPivotFields (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Scripts (Byval RHS As Office.Scripts Ptr Ptr) As HRESULT
		Declare Abstract Function _PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Tab (Byval RHS As Tab Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MailEnvelope (Byval RHS As Office.MsoEnvelope Ptr Ptr) As HRESULT
		Declare Abstract Function ApplyDataLabels (Byval Type_v As XlDataLabelsType, Byval LegendKey As Variant Ptr, Byval AutoText As Variant Ptr, Byval HasLeaderLines As Variant Ptr, Byval ShowSeriesName As Variant Ptr, Byval ShowCategoryName As Variant Ptr, Byval ShowValue As Variant Ptr, Byval ShowPercentage As Variant Ptr, Byval ShowBubbleSize As Variant Ptr, Byval Separator As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function SaveAs (Byval Filename As BSTR, Byval FileFormat As Variant Ptr, Byval Password As Variant Ptr, Byval WriteResPassword As Variant Ptr, Byval ReadOnlyRecommended As Variant Ptr, Byval CreateBackup As Variant Ptr, Byval AddToMru As Variant Ptr, Byval TextCodepage As Variant Ptr, Byval TextVisualLayout As Variant Ptr, Byval Local As Variant Ptr) As HRESULT
		Declare Abstract Function Protect (Byval Password As Variant Ptr, Byval DrawingObjects_v As Variant Ptr, Byval Contents As Variant Ptr, Byval Scenarios As Variant Ptr, Byval UserInterfaceOnly As Variant Ptr) As HRESULT
		Declare Abstract Function ApplyLayout (Byval Layout As Long, Byval ChartType As Variant Ptr) As HRESULT
		Declare Abstract Function SetElement (Byval Element As Office.MsoChartElementType) As HRESULT
		Declare Abstract Function Get_ShowDataLabelsOverMaximum (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowDataLabelsOverMaximum (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SideWall (Byval RHS As Walls Ptr Ptr) As HRESULT
		Declare Abstract Function Get_BackWall (Byval RHS As Walls Ptr Ptr) As HRESULT
		Declare Abstract Function PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function ApplyChartTemplate (Byval Filename As BSTR) As HRESULT
		Declare Abstract Function SaveChartTemplate (Byval Filename As BSTR) As HRESULT
		Declare Abstract Function SetDefaultChart (Byval Name As Variant Ptr) As HRESULT
		Declare Abstract Function ExportAsFixedFormat (Byval Type_v As XlFixedFormatType, Byval Filename As Variant Ptr, Byval Quality As Variant Ptr, Byval IncludeDocProperties As Variant Ptr, Byval IgnorePrintAreas As Variant Ptr, Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval OpenAfterPublish As Variant Ptr, Byval FixedFormatExtClassPtr As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ChartStyle (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ChartStyle (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function ClearToMatchStyle () As HRESULT
		Declare Abstract Function Get_PrintedCommentPages (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Dummy24 (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Dummy24 (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Dummy25 (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Dummy25 (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowReportFilterFieldButtons (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowReportFilterFieldButtons (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowLegendFieldButtons (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowLegendFieldButtons (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowAxisFieldButtons (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowAxisFieldButtons (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowValueFieldButtons (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowValueFieldButtons (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ShowAllFieldButtons (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowAllFieldButtons (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function FullSeriesCollection (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CategoryLabelLevel (Byval RHS As XlCategoryLabelLevel Ptr) As HRESULT
		Declare Abstract Function Let_CategoryLabelLevel (Byval RHS As XlCategoryLabelLevel) As HRESULT
		Declare Abstract Function Get_SeriesNameLevel (Byval RHS As XlSeriesNameLevel Ptr) As HRESULT
		Declare Abstract Function Let_SeriesNameLevel (Byval RHS As XlSeriesNameLevel) As HRESULT
		Declare Abstract Function Get_HasHiddenContent (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function DeleteHiddenContent () As HRESULT
		Declare Abstract Function Get_ChartColor (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_ChartColor (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function ClearToMatchColorStyle () As HRESULT
		Declare Abstract Function Get_ShowExpandCollapseEntireFieldButtons (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowExpandCollapseEntireFieldButtons (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type '_Chart_

	Type Sheets_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval Count As Variant Ptr, Byval Type_v As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Copy (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Delete_ (Byval lcid As Long) As HRESULT
		Declare Abstract Function FillAcrossSheets (Byval Range As Range Ptr, Byval Type_v As XlFillWith, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Move (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function __PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function PrintPreview (Byval EnableChanges As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_HPageBreaks (Byval RHS As HPageBreaks Ptr Ptr) As HRESULT
		Declare Abstract Function Get_VPageBreaks (Byval RHS As VPageBreaks Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Visible (Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval lcid As Long, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function _PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval IgnorePrintAreas As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Add2 (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval Count As Variant Ptr, Byval NewLayout As Variant Ptr, Byval RHS As IDispatch Ptr Ptr) As HRESULT
	End Type 'Sheets_

	Type _Worksheet_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Activate (Byval lcid As Long) As HRESULT
		Declare Abstract Function Copy (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Delete_ (Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_CodeName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get__CodeName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let__CodeName (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Index (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Move (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Name (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Next (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_OnDoubleClick (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnDoubleClick (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnSheetActivate (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnSheetActivate (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnSheetDeactivate (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnSheetDeactivate (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_PageSetup (Byval RHS As PageSetup Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Previous (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function __PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function PrintPreview (Byval EnableChanges As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function _Protect (Byval Password As Variant Ptr, Byval DrawingObjects_v As Variant Ptr, Byval Contents As Variant Ptr, Byval Scenarios_v As Variant Ptr, Byval UserInterfaceOnly As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_ProtectContents (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ProtectDrawingObjects (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ProtectionMode (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ProtectScenarios (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function _SaveAs (Byval Filename As BSTR, Byval FileFormat As Variant Ptr, Byval Password As Variant Ptr, Byval WriteResPassword As Variant Ptr, Byval ReadOnlyRecommended As Variant Ptr, Byval CreateBackup As Variant Ptr, Byval AddToMru As Variant Ptr, Byval TextCodepage As Variant Ptr, Byval TextVisualLayout As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Select_ (Byval Replace As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Unprotect (Byval Password As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Visible (Byval lcid As Long, Byval RHS As XlSheetVisibility Ptr) As HRESULT
		Declare Abstract Function Let_Visible (Byval lcid As Long, Byval RHS As XlSheetVisibility) As HRESULT
		Declare Abstract Function Get_Shapes (Byval RHS As Shapes Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TransitionExpEval (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TransitionExpEval (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Arcs (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AutoFilterMode (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoFilterMode (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function SetBackgroundPicture (Byval Filename As BSTR) As HRESULT
		Declare Abstract Function Buttons (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Calculate (Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_EnableCalculation (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableCalculation (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Cells (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function ChartObjects (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function CheckBoxes (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_CircularReference (Byval lcid As Long, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function ClearArrows (Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Columns (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ConsolidationFunction (Byval lcid As Long, Byval RHS As XlConsolidationFunction Ptr) As HRESULT
		Declare Abstract Function Get_ConsolidationOptions (Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ConsolidationSources (Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DisplayAutomaticPageBreaks (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayAutomaticPageBreaks (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Drawings (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function DrawingObjects (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function DropDowns (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_EnableAutoFilter (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableAutoFilter (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_EnableSelection (Byval RHS As XlEnableSelection Ptr) As HRESULT
		Declare Abstract Function Let_EnableSelection (Byval RHS As XlEnableSelection) As HRESULT
		Declare Abstract Function Get_EnableOutlining (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableOutlining (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_EnablePivotTable (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnablePivotTable (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Evaluate (Byval Name As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function _Evaluate (Byval Name As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_FilterMode (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function ResetAllPageBreaks () As HRESULT
		Declare Abstract Function GroupBoxes (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function GroupObjects (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Labels (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Lines (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function ListBoxes (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Names (Byval RHS As Names Ptr Ptr) As HRESULT
		Declare Abstract Function OLEObjects (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_OnCalculate (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnCalculate (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnData (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnData (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnEntry (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnEntry (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function OptionButtons (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Outline (Byval RHS As Outline Ptr Ptr) As HRESULT
		Declare Abstract Function Ovals (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Paste (Byval Destination As Variant Ptr, Byval Link As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function _PasteSpecial (Byval Format As Variant Ptr, Byval Link As Variant Ptr, Byval DisplayAsIcon As Variant Ptr, Byval IconFileName As Variant Ptr, Byval IconIndex As Variant Ptr, Byval IconLabel As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Pictures (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function PivotTables (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function PivotTableWizard (Byval SourceType As Variant Ptr, Byval SourceData As Variant Ptr, Byval TableDestination As Variant Ptr, Byval TableName As Variant Ptr, Byval RowGrand As Variant Ptr, Byval ColumnGrand As Variant Ptr, Byval SaveData As Variant Ptr, Byval HasAutoFormat As Variant Ptr, Byval AutoPage As Variant Ptr, Byval Reserved As Variant Ptr, Byval BackgroundQuery As Variant Ptr, Byval OptimizeCache As Variant Ptr, Byval PageFieldOrder As Variant Ptr, Byval PageFieldWrapCount As Variant Ptr, Byval ReadData As Variant Ptr, Byval Connection As Variant Ptr, Byval lcid As Long, Byval RHS As PivotTable Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Range (Byval Cell1 As Variant Ptr, Byval Cell2 As Variant Ptr, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Rectangles (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Rows (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Scenarios (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ScrollArea (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ScrollArea (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function ScrollBars (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function ShowAllData (Byval lcid As Long) As HRESULT
		Declare Abstract Function ShowDataForm (Byval lcid As Long) As HRESULT
		Declare Abstract Function Spinners (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_StandardHeight (Byval lcid As Long, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Get_StandardWidth (Byval lcid As Long, Byval RHS As Double Ptr) As HRESULT
		Declare Abstract Function Let_StandardWidth (Byval lcid As Long, Byval RHS As Double) As HRESULT
		Declare Abstract Function TextBoxes (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TransitionFormEntry (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TransitionFormEntry (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Type (Byval lcid As Long, Byval RHS As XlSheetType Ptr) As HRESULT
		Declare Abstract Function Get_UsedRange (Byval lcid As Long, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_HPageBreaks (Byval RHS As HPageBreaks Ptr Ptr) As HRESULT
		Declare Abstract Function Get_VPageBreaks (Byval RHS As VPageBreaks Ptr Ptr) As HRESULT
		Declare Abstract Function Get_QueryTables (Byval RHS As QueryTables Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DisplayPageBreaks (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayPageBreaks (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Comments (Byval RHS As Comments Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Hyperlinks (Byval RHS As Hyperlinks Ptr Ptr) As HRESULT
		Declare Abstract Function ClearCircles () As HRESULT
		Declare Abstract Function CircleInvalid () As HRESULT
		Declare Abstract Function Get__DisplayRightToLeft (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let__DisplayRightToLeft (Byval lcid As Long, Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_AutoFilter (Byval RHS As AutoFilter Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DisplayRightToLeft (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayRightToLeft (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Scripts (Byval RHS As Office.Scripts Ptr Ptr) As HRESULT
		Declare Abstract Function _PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function _CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval IgnoreFinalYaa As Variant Ptr, Byval SpellScript As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Tab (Byval RHS As Tab Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MailEnvelope (Byval RHS As Office.MsoEnvelope Ptr Ptr) As HRESULT
		Declare Abstract Function SaveAs (Byval Filename As BSTR, Byval FileFormat As Variant Ptr, Byval Password As Variant Ptr, Byval WriteResPassword As Variant Ptr, Byval ReadOnlyRecommended As Variant Ptr, Byval CreateBackup As Variant Ptr, Byval AddToMru As Variant Ptr, Byval TextCodepage As Variant Ptr, Byval TextVisualLayout As Variant Ptr, Byval Local As Variant Ptr) As HRESULT
		Declare Abstract Function Get_CustomProperties (Byval RHS As CustomProperties Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SmartTags (Byval RHS As SmartTags Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Protection (Byval RHS As Protection Ptr Ptr) As HRESULT
		Declare Abstract Function PasteSpecial (Byval Format As Variant Ptr, Byval Link As Variant Ptr, Byval DisplayAsIcon As Variant Ptr, Byval IconFileName As Variant Ptr, Byval IconIndex As Variant Ptr, Byval IconLabel As Variant Ptr, Byval NoHTMLFormatting As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Protect (Byval Password As Variant Ptr, Byval DrawingObjects_v As Variant Ptr, Byval Contents As Variant Ptr, Byval Scenarios_v As Variant Ptr, Byval UserInterfaceOnly As Variant Ptr, Byval AllowFormattingCells As Variant Ptr, Byval AllowFormattingColumns As Variant Ptr, Byval AllowFormattingRows As Variant Ptr, Byval AllowInsertingColumns As Variant Ptr, Byval AllowInsertingRows As Variant Ptr, Byval AllowInsertingHyperlinks As Variant Ptr, Byval AllowDeletingColumns As Variant Ptr, Byval AllowDeletingRows As Variant Ptr, Byval AllowSorting As Variant Ptr, Byval AllowFiltering As Variant Ptr, Byval AllowUsingPivotTables As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ListObjects (Byval RHS As ListObjects Ptr Ptr) As HRESULT
		Declare Abstract Function XmlDataQuery (Byval XPath As BSTR, Byval SelectionNamespaces As Variant Ptr, Byval Map As Variant Ptr, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function XmlMapQuery (Byval XPath As BSTR, Byval SelectionNamespaces As Variant Ptr, Byval Map As Variant Ptr, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval IgnorePrintAreas As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_EnableFormatConditionsCalculation (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableFormatConditionsCalculation (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Sort (Byval RHS As Sort Ptr Ptr) As HRESULT
		Declare Abstract Function ExportAsFixedFormat (Byval Type_v As XlFixedFormatType, Byval Filename As Variant Ptr, Byval Quality As Variant Ptr, Byval IncludeDocProperties As Variant Ptr, Byval IgnorePrintAreas As Variant Ptr, Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval OpenAfterPublish As Variant Ptr, Byval FixedFormatExtClassPtr As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PrintedCommentPages (Byval RHS As Long Ptr) As HRESULT
	End Type '_Worksheet_

	Type _Global_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActiveCell (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActiveChart (Byval RHS As Chart Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActiveDialog (Byval RHS As DialogSheet Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActiveMenuBar (Byval RHS As MenuBar Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActivePrinter (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_ActivePrinter (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ActiveSheet (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActiveWindow (Byval RHS As Window Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActiveWorkbook (Byval RHS As Workbook Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AddIns (Byval RHS As AddIns Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Assistant (Byval RHS As Office.Assistant Ptr Ptr) As HRESULT
		Declare Abstract Function Calculate (Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Cells (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Charts (Byval RHS As Sheets Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Columns (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CommandBars (Byval RHS As Office.CommandBars Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DDEAppReturnCode (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function DDEExecute (Byval Channel As Long, Byval String_v As BSTR, Byval lcid As Long) As HRESULT
		Declare Abstract Function DDEInitiate (Byval App As BSTR, Byval Topic As BSTR, Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function DDEPoke (Byval Channel As Long, Byval Item As Variant Ptr, Byval Data As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function DDERequest (Byval Channel As Long, Byval Item As BSTR, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function DDETerminate (Byval Channel As Long, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_DialogSheets (Byval RHS As Sheets Ptr Ptr) As HRESULT
		Declare Abstract Function Evaluate (Byval Name As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function _Evaluate (Byval Name As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function ExecuteExcel4Macro (Byval String_v As BSTR, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Intersect (Byval Arg1 As Range Ptr, Byval Arg2 As Range Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval lcid As Long, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MenuBars (Byval RHS As MenuBars Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Modules (Byval RHS As Modules Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Names (Byval RHS As Names Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Range (Byval Cell1 As Variant Ptr, Byval Cell2 As Variant Ptr, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Rows (Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Run (Byval Macro As Variant Ptr, Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function _Run2 (Byval Macro As Variant Ptr, Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Selection (Byval lcid As Long, Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function SendKeys (Byval Keys As Variant Ptr, Byval Wait As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Sheets (Byval RHS As Sheets Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ShortcutMenus (Byval Index As Long, Byval RHS As Menu Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ThisWorkbook (Byval lcid As Long, Byval RHS As Workbook Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Toolbars (Byval RHS As Toolbars Ptr Ptr) As HRESULT
		Declare Abstract Function Union_ (Byval Arg1 As Range Ptr, Byval Arg2 As Range Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr, Byval lcid As Long, Byval RHS As Range Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Windows (Byval RHS As Windows Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Workbooks (Byval RHS As Workbooks Ptr Ptr) As HRESULT
		Declare Abstract Function Get_WorksheetFunction (Byval RHS As WorksheetFunction Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Worksheets (Byval RHS As Sheets Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Excel4IntlMacroSheets (Byval RHS As Sheets Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Excel4MacroSheets (Byval RHS As Sheets Ptr Ptr) As HRESULT
	End Type '_Global_

	Type _Workbook_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_AcceptLabelsInFormulas (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AcceptLabelsInFormulas (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Activate (Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_ActiveChart (Byval RHS As Chart Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActiveSheet (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Author (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Author (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_AutoUpdateFrequency (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_AutoUpdateFrequency (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_AutoUpdateSaveChanges (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoUpdateSaveChanges (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ChangeHistoryDuration (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_ChangeHistoryDuration (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_BuiltinDocumentProperties (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function ChangeFileAccess (Byval Mode As XlFileAccess, Byval WritePassword As Variant Ptr, Byval Notify As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function ChangeLink (Byval Name As BSTR, Byval NewName As BSTR, Byval Type_v As XlLinkType, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Charts (Byval RHS As Sheets Ptr Ptr) As HRESULT
		Declare Abstract Function Close (Byval SaveChanges As Variant Ptr, Byval Filename As Variant Ptr, Byval RouteWorkbook As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_CodeName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get__CodeName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let__CodeName (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Colors (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Colors (Byval Index As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_CommandBars (Byval RHS As Office.CommandBars Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Comments (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Comments (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_ConflictResolution (Byval RHS As XlSaveConflictResolution Ptr) As HRESULT
		Declare Abstract Function Let_ConflictResolution (Byval RHS As XlSaveConflictResolution) As HRESULT
		Declare Abstract Function Get_Container (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CreateBackup (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_CustomDocumentProperties (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Date1904 (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Date1904 (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function DeleteNumberFormat (Byval NumberFormat As BSTR, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_DialogSheets (Byval RHS As Sheets Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DisplayDrawingObjects (Byval lcid As Long, Byval RHS As XlDisplayDrawingObjects Ptr) As HRESULT
		Declare Abstract Function Let_DisplayDrawingObjects (Byval lcid As Long, Byval RHS As XlDisplayDrawingObjects) As HRESULT
		Declare Abstract Function ExclusiveAccess (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_FileFormat (Byval lcid As Long, Byval RHS As XlFileFormat Ptr) As HRESULT
		Declare Abstract Function ForwardMailer (Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_FullName (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_HasMailer (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasMailer (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HasPassword (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_HasRoutingSlip (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HasRoutingSlip (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_IsAddin (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_IsAddin (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Keywords (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Keywords (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function LinkInfo (Byval Name As BSTR, Byval LinkInfo_v As XlLinkInfo, Byval Type_v As Variant Ptr, Byval EditionRef As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function LinkSources (Byval Type_v As Variant Ptr, Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Mailer (Byval RHS As Mailer Ptr Ptr) As HRESULT
		Declare Abstract Function MergeWorkbook (Byval Filename As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Modules (Byval RHS As Sheets Ptr Ptr) As HRESULT
		Declare Abstract Function Get_MultiUserEditing (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Names (Byval RHS As Names Ptr Ptr) As HRESULT
		Declare Abstract Function NewWindow (Byval lcid As Long, Byval RHS As Window Ptr Ptr) As HRESULT
		Declare Abstract Function Get_OnSave (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnSave (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnSheetActivate (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnSheetActivate (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_OnSheetDeactivate (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_OnSheetDeactivate (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function OpenLinks (Byval Name As BSTR, Byval ReadOnly As Variant Ptr, Byval Type_v As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Path (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_PersonalViewListSettings (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PersonalViewListSettings (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_PersonalViewPrintSettings (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PersonalViewPrintSettings (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function PivotCaches (Byval RHS As PivotCaches Ptr Ptr) As HRESULT
		Declare Abstract Function Post (Byval DestName As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_PrecisionAsDisplayed (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_PrecisionAsDisplayed (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function __PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function PrintPreview (Byval EnableChanges As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function _Protect (Byval Password As Variant Ptr, Byval Structure As Variant Ptr, Byval Windows As Variant Ptr) As HRESULT
		Declare Abstract Function _ProtectSharing (Byval Filename As Variant Ptr, Byval Password As Variant Ptr, Byval WriteResPassword As Variant Ptr, Byval ReadOnlyRecommended As Variant Ptr, Byval CreateBackup As Variant Ptr, Byval SharingPassword As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ProtectStructure (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ProtectWindows (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ReadOnly (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get__ReadOnlyRecommended (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function RefreshAll () As HRESULT
		Declare Abstract Function Reply (Byval lcid As Long) As HRESULT
		Declare Abstract Function ReplyAll (Byval lcid As Long) As HRESULT
		Declare Abstract Function RemoveUser (Byval Index As Long) As HRESULT
		Declare Abstract Function Get_RevisionNumber (Byval lcid As Long, Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Route (Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Routed (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_RoutingSlip (Byval RHS As RoutingSlip Ptr Ptr) As HRESULT
		Declare Abstract Function RunAutoMacros (Byval Which As XlRunAutoMacro, Byval lcid As Long) As HRESULT
		Declare Abstract Function Save (Byval lcid As Long) As HRESULT
		Declare Abstract Function _SaveAs (Byval Filename As Variant Ptr, Byval FileFormat As Variant Ptr, Byval Password As Variant Ptr, Byval WriteResPassword As Variant Ptr, Byval ReadOnlyRecommended As Variant Ptr, Byval CreateBackup As Variant Ptr, Byval AccessMode As XlSaveAsAccessMode, Byval ConflictResolution As Variant Ptr, Byval AddToMru As Variant Ptr, Byval TextCodepage As Variant Ptr, Byval TextVisualLayout As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function SaveCopyAs (Byval Filename As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Saved (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Saved (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SaveLinkValues (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SaveLinkValues (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function SendMail (Byval Recipients As Variant Ptr, Byval Subject As Variant Ptr, Byval ReturnReceipt As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function SendMailer (Byval FileFormat As Variant Ptr, Byval Priority As XlPriority, Byval lcid As Long) As HRESULT
		Declare Abstract Function SetLinkOnData (Byval Name As BSTR, Byval Procedure As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Sheets (Byval RHS As Sheets Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ShowConflictHistory (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowConflictHistory (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Styles (Byval RHS As Styles Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Subject (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Subject (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Title (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Title (Byval lcid As Long, Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Unprotect (Byval Password As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function UnprotectSharing (Byval SharingPassword As Variant Ptr) As HRESULT
		Declare Abstract Function UpdateFromFile (Byval lcid As Long) As HRESULT
		Declare Abstract Function UpdateLink (Byval Name As Variant Ptr, Byval Type_v As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_UpdateRemoteReferences (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_UpdateRemoteReferences (Byval lcid As Long, Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_UserControl (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_UserControl (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_UserStatus (Byval lcid As Long, Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CustomViews (Byval RHS As CustomViews Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Windows (Byval RHS As Windows Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Worksheets (Byval RHS As Sheets Ptr Ptr) As HRESULT
		Declare Abstract Function Get_WriteReserved (Byval lcid As Long, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_WriteReservedBy (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Excel4IntlMacroSheets (Byval RHS As Sheets Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Excel4MacroSheets (Byval RHS As Sheets Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TemplateRemoveExtData (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_TemplateRemoveExtData (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function HighlightChangesOptions (Byval When As Variant Ptr, Byval Who As Variant Ptr, Byval Where As Variant Ptr) As HRESULT
		Declare Abstract Function Get_HighlightChangesOnScreen (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HighlightChangesOnScreen (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_KeepChangeHistory (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_KeepChangeHistory (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ListChangesOnNewSheet (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ListChangesOnNewSheet (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function PurgeChangeHistoryNow (Byval Days As Long, Byval SharingPassword As Variant Ptr) As HRESULT
		Declare Abstract Function AcceptAllChanges (Byval When As Variant Ptr, Byval Who As Variant Ptr, Byval Where As Variant Ptr) As HRESULT
		Declare Abstract Function RejectAllChanges (Byval When As Variant Ptr, Byval Who As Variant Ptr, Byval Where As Variant Ptr) As HRESULT
		Declare Abstract Function PivotTableWizard (Byval SourceType As Variant Ptr, Byval SourceData As Variant Ptr, Byval TableDestination As Variant Ptr, Byval TableName As Variant Ptr, Byval RowGrand As Variant Ptr, Byval ColumnGrand As Variant Ptr, Byval SaveData As Variant Ptr, Byval HasAutoFormat As Variant Ptr, Byval AutoPage As Variant Ptr, Byval Reserved As Variant Ptr, Byval BackgroundQuery As Variant Ptr, Byval OptimizeCache As Variant Ptr, Byval PageFieldOrder As Variant Ptr, Byval PageFieldWrapCount As Variant Ptr, Byval ReadData As Variant Ptr, Byval Connection As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function ResetColors () As HRESULT
		Declare Abstract Function Get_VBProject (Byval RHS As VBIDE.VBProject Ptr Ptr) As HRESULT
		Declare Abstract Function FollowHyperlink (Byval Address As BSTR, Byval SubAddress As Variant Ptr, Byval NewWindow_v As Variant Ptr, Byval AddHistory As Variant Ptr, Byval ExtraInfo As Variant Ptr, Byval Method As Variant Ptr, Byval HeaderInfo As Variant Ptr) As HRESULT
		Declare Abstract Function AddToFavorites () As HRESULT
		Declare Abstract Function Get_IsInplace (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function _PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function WebPagePreview () As HRESULT
		Declare Abstract Function Get_PublishObjects (Byval RHS As PublishObjects Ptr Ptr) As HRESULT
		Declare Abstract Function Get_WebOptions (Byval RHS As WebOptions Ptr Ptr) As HRESULT
		Declare Abstract Function ReloadAs (Byval Encoding As Office.MsoEncoding) As HRESULT
		Declare Abstract Function Get_HTMLProject (Byval RHS As Office.HTMLProject Ptr Ptr) As HRESULT
		Declare Abstract Function Get_EnvelopeVisible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnvelopeVisible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_CalculationVersion (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Dummy17 (Byval calcid As Long) As HRESULT
		Declare Abstract Function sblt (Byval s As BSTR) As HRESULT
		Declare Abstract Function Get_VBASigned (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ShowPivotTableFieldList (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowPivotTableFieldList (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_UpdateLinks (Byval RHS As XlUpdateLinks Ptr) As HRESULT
		Declare Abstract Function Let_UpdateLinks (Byval RHS As XlUpdateLinks) As HRESULT
		Declare Abstract Function BreakLink (Byval Name As BSTR, Byval Type_v As XlLinkType) As HRESULT
		Declare Abstract Function Dummy16 () As HRESULT
		Declare Abstract Function SaveAs (Byval Filename As Variant Ptr, Byval FileFormat As Variant Ptr, Byval Password As Variant Ptr, Byval WriteResPassword As Variant Ptr, Byval ReadOnlyRecommended As Variant Ptr, Byval CreateBackup As Variant Ptr, Byval AccessMode As XlSaveAsAccessMode, Byval ConflictResolution As Variant Ptr, Byval AddToMru As Variant Ptr, Byval TextCodepage As Variant Ptr, Byval TextVisualLayout As Variant Ptr, Byval Local As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_EnableAutoRecover (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableAutoRecover (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RemovePersonalInformation (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RemovePersonalInformation (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_FullNameURLEncoded (Byval lcid As Long, Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function CheckIn (Byval SaveChanges As Variant Ptr, Byval Comments As Variant Ptr, Byval MakePublic As Variant Ptr) As HRESULT
		Declare Abstract Function CanCheckIn (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function SendForReview (Byval Recipients As Variant Ptr, Byval Subject As Variant Ptr, Byval ShowMessage As Variant Ptr, Byval IncludeAttachment As Variant Ptr) As HRESULT
		Declare Abstract Function ReplyWithChanges (Byval ShowMessage As Variant Ptr) As HRESULT
		Declare Abstract Function EndReview () As HRESULT
		Declare Abstract Function Get_Password (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Password (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_WritePassword (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_WritePassword (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_PasswordEncryptionProvider (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_PasswordEncryptionAlgorithm (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_PasswordEncryptionKeyLength (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function SetPasswordEncryptionOptions (Byval PasswordEncryptionProvider As Variant Ptr, Byval PasswordEncryptionAlgorithm As Variant Ptr, Byval PasswordEncryptionKeyLength As Variant Ptr, Byval PasswordEncryptionFileProperties As Variant Ptr) As HRESULT
		Declare Abstract Function Get_PasswordEncryptionFileProperties (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ReadOnlyRecommended (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ReadOnlyRecommended (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Protect (Byval Password As Variant Ptr, Byval Structure As Variant Ptr, Byval Windows As Variant Ptr) As HRESULT
		Declare Abstract Function Get_SmartTagOptions (Byval RHS As SmartTagOptions Ptr Ptr) As HRESULT
		Declare Abstract Function RecheckSmartTags () As HRESULT
		Declare Abstract Function Get_Permission (Byval RHS As Office.Permission Ptr Ptr) As HRESULT
		Declare Abstract Function Get_SharedWorkspace (Byval RHS As Office.SharedWorkspace Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Sync (Byval RHS As Office.Sync Ptr Ptr) As HRESULT
		Declare Abstract Function SendFaxOverInternet (Byval Recipients As Variant Ptr, Byval Subject As Variant Ptr, Byval ShowMessage As Variant Ptr) As HRESULT
		Declare Abstract Function Get_XmlNamespaces (Byval RHS As XmlNamespaces Ptr Ptr) As HRESULT
		Declare Abstract Function Get_XmlMaps (Byval RHS As XmlMaps Ptr Ptr) As HRESULT
		Declare Abstract Function XmlImport (Byval Url As BSTR, Byval ImportMap As XmlMap Ptr Ptr, Byval Overwrite As Variant Ptr, Byval Destination As Variant Ptr, Byval RHS As XlXmlImportResult Ptr) As HRESULT
		Declare Abstract Function Get_SmartDocument (Byval RHS As Office.SmartDocument Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DocumentLibraryVersions (Byval RHS As Office.DocumentLibraryVersions Ptr Ptr) As HRESULT
		Declare Abstract Function Get_InactiveListBorderVisible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_InactiveListBorderVisible (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DisplayInkComments (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DisplayInkComments (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function XmlImportXml (Byval Data As BSTR, Byval ImportMap As XmlMap Ptr Ptr, Byval Overwrite As Variant Ptr, Byval Destination As Variant Ptr, Byval RHS As XlXmlImportResult Ptr) As HRESULT
		Declare Abstract Function SaveAsXMLData (Byval Filename As BSTR, Byval Map As XmlMap Ptr) As HRESULT
		Declare Abstract Function ToggleFormsDesign () As HRESULT
		Declare Abstract Function Get_ContentTypeProperties (Byval RHS As Office.MetaProperties Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Connections (Byval RHS As Connections Ptr Ptr) As HRESULT
		Declare Abstract Function RemoveDocumentInformation (Byval RemoveDocInfoType As XlRemoveDocInfoType) As HRESULT
		Declare Abstract Function Get_Signatures (Byval RHS As Office.SignatureSet Ptr Ptr) As HRESULT
		Declare Abstract Function CheckInWithVersion (Byval SaveChanges As Variant Ptr, Byval Comments As Variant Ptr, Byval MakePublic As Variant Ptr, Byval VersionType As Variant Ptr) As HRESULT
		Declare Abstract Function Get_ServerPolicy (Byval RHS As Office.ServerPolicy Ptr Ptr) As HRESULT
		Declare Abstract Function LockServerFile () As HRESULT
		Declare Abstract Function Get_DocumentInspectors (Byval RHS As Office.DocumentInspectors Ptr Ptr) As HRESULT
		Declare Abstract Function GetWorkflowTasks (Byval RHS As Office.WorkflowTasks Ptr Ptr) As HRESULT
		Declare Abstract Function GetWorkflowTemplates (Byval RHS As Office.WorkflowTemplates Ptr Ptr) As HRESULT
		Declare Abstract Function PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval IgnorePrintAreas As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_ServerViewableItems (Byval RHS As ServerViewableItems Ptr Ptr) As HRESULT
		Declare Abstract Function Get_TableStyles (Byval RHS As TableStyles Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DefaultTableStyle (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_DefaultTableStyle (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_DefaultPivotTableStyle (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_DefaultPivotTableStyle (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_CheckCompatibility (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_CheckCompatibility (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HasVBProject (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_CustomXMLParts (Byval RHS As Office.CustomXMLParts Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Final (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_Final (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Research (Byval RHS As Research Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Theme (Byval RHS As Office.OfficeTheme Ptr Ptr) As HRESULT
		Declare Abstract Function ApplyTheme (Byval Filename As BSTR) As HRESULT
		Declare Abstract Function Get_Excel8CompatibilityMode (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_ConnectionsDisabled (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function EnableConnections () As HRESULT
		Declare Abstract Function Get_ShowPivotChartActiveFields (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowPivotChartActiveFields (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function ExportAsFixedFormat (Byval Type_v As XlFixedFormatType, Byval Filename As Variant Ptr, Byval Quality As Variant Ptr, Byval IncludeDocProperties As Variant Ptr, Byval IgnorePrintAreas As Variant Ptr, Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval OpenAfterPublish As Variant Ptr, Byval FixedFormatExtClassPtr As Variant Ptr) As HRESULT
		Declare Abstract Function Get_IconSets (Byval RHS As IconSets Ptr Ptr) As HRESULT
		Declare Abstract Function Get_EncryptionProvider (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_EncryptionProvider (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_DoNotPromptForConvert (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DoNotPromptForConvert (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ForceFullCalculation (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ForceFullCalculation (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function ProtectSharing (Byval Filename As Variant Ptr, Byval Password As Variant Ptr, Byval WriteResPassword As Variant Ptr, Byval ReadOnlyRecommended As Variant Ptr, Byval CreateBackup As Variant Ptr, Byval SharingPassword As Variant Ptr, Byval FileFormat As Variant Ptr) As HRESULT
		Declare Abstract Function Get_SlicerCaches (Byval RHS As SlicerCaches Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ActiveSlicer (Byval RHS As Slicer Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DefaultSlicerStyle (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_DefaultSlicerStyle (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Dummy26 () As HRESULT
		Declare Abstract Function Dummy27 () As HRESULT
		Declare Abstract Function Get_AccuracyVersion (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_AccuracyVersion (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_CaseSensitive (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_UseWholeCellCriteria (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_UseWildcards (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_PivotTables (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Model (Byval RHS As Model Ptr Ptr) As HRESULT
		Declare Abstract Function Get_ChartDataPointTrack (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ChartDataPointTrack (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DefaultTimelineStyle (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_DefaultTimelineStyle (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Queries (Byval RHS As Queries Ptr Ptr) As HRESULT
		Declare Abstract Function CreateForecastSheet (Byval Timeline As Range Ptr, Byval Values As Range Ptr, Byval ForecastStart As Variant Ptr, Byval ForecastEnd As Variant Ptr, Byval ConfInt As Variant Ptr, Byval Seasonality As Variant Ptr, Byval DataCompletion As Variant Ptr, Byval Aggregation As Variant Ptr, Byval ChartType As Variant Ptr, Byval ShowStatsTable As Variant Ptr) As HRESULT
	End Type '_Workbook_

	Type Workbooks_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Add (Byval Template As Variant Ptr, Byval lcid As Long, Byval RHS As Workbook Ptr Ptr) As HRESULT
		Declare Abstract Function Close (Byval lcid As Long) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As Workbook Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function _Open (Byval Filename As BSTR, Byval UpdateLinks As Variant Ptr, Byval ReadOnly As Variant Ptr, Byval Format As Variant Ptr, Byval Password As Variant Ptr, Byval WriteResPassword As Variant Ptr, Byval IgnoreReadOnlyRecommended As Variant Ptr, Byval Origin As Variant Ptr, Byval Delimiter As Variant Ptr, Byval Editable As Variant Ptr, Byval Notify As Variant Ptr, Byval Converter As Variant Ptr, Byval AddToMru As Variant Ptr, Byval lcid As Long, Byval RHS As Workbook Ptr Ptr) As HRESULT
		Declare Abstract Function __OpenText (Byval Filename As BSTR, Byval Origin As Variant Ptr, Byval StartRow As Variant Ptr, Byval DataType As Variant Ptr, Byval TextQualifier As XlTextQualifier, Byval ConsecutiveDelimiter As Variant Ptr, Byval Tab As Variant Ptr, Byval Semicolon As Variant Ptr, Byval Comma As Variant Ptr, Byval Space As Variant Ptr, Byval Other As Variant Ptr, Byval OtherChar As Variant Ptr, Byval FieldInfo As Variant Ptr, Byval TextVisualLayout As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As Workbook Ptr Ptr) As HRESULT
		Declare Abstract Function _OpenText (Byval Filename As BSTR, Byval Origin As Variant Ptr, Byval StartRow As Variant Ptr, Byval DataType As Variant Ptr, Byval TextQualifier As XlTextQualifier, Byval ConsecutiveDelimiter As Variant Ptr, Byval Tab As Variant Ptr, Byval Semicolon As Variant Ptr, Byval Comma As Variant Ptr, Byval Space As Variant Ptr, Byval Other As Variant Ptr, Byval OtherChar As Variant Ptr, Byval FieldInfo As Variant Ptr, Byval TextVisualLayout As Variant Ptr, Byval DecimalSeparator As Variant Ptr, Byval ThousandsSeparator As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function Open (Byval Filename As BSTR, Byval UpdateLinks As Variant Ptr, Byval ReadOnly As Variant Ptr, Byval Format As Variant Ptr, Byval Password As Variant Ptr, Byval WriteResPassword As Variant Ptr, Byval IgnoreReadOnlyRecommended As Variant Ptr, Byval Origin As Variant Ptr, Byval Delimiter As Variant Ptr, Byval Editable As Variant Ptr, Byval Notify As Variant Ptr, Byval Converter As Variant Ptr, Byval AddToMru As Variant Ptr, Byval Local As Variant Ptr, Byval CorruptLoad As Variant Ptr, Byval lcid As Long, Byval RHS As Workbook Ptr Ptr) As HRESULT
		Declare Abstract Function OpenText (Byval Filename As BSTR, Byval Origin As Variant Ptr, Byval StartRow As Variant Ptr, Byval DataType As Variant Ptr, Byval TextQualifier As XlTextQualifier, Byval ConsecutiveDelimiter As Variant Ptr, Byval Tab As Variant Ptr, Byval Semicolon As Variant Ptr, Byval Comma As Variant Ptr, Byval Space As Variant Ptr, Byval Other As Variant Ptr, Byval OtherChar As Variant Ptr, Byval FieldInfo As Variant Ptr, Byval TextVisualLayout As Variant Ptr, Byval DecimalSeparator As Variant Ptr, Byval ThousandsSeparator As Variant Ptr, Byval TrailingMinusNumbers As Variant Ptr, Byval Local As Variant Ptr, Byval lcid As Long) As HRESULT
		Declare Abstract Function OpenDatabase (Byval Filename As BSTR, Byval CommandText As Variant Ptr, Byval CommandType As Variant Ptr, Byval BackgroundQuery As Variant Ptr, Byval ImportDataAs As Variant Ptr, Byval RHS As Workbook Ptr Ptr) As HRESULT
		Declare Abstract Function CheckOut (Byval Filename As BSTR) As HRESULT
		Declare Abstract Function CanCheckOut (Byval Filename As BSTR, Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function _OpenXML (Byval Filename As BSTR, Byval Stylesheets As Variant Ptr, Byval RHS As Workbook Ptr Ptr) As HRESULT
		Declare Abstract Function OpenXML (Byval Filename As BSTR, Byval Stylesheets As Variant Ptr, Byval LoadOption As Variant Ptr, Byval RHS As Workbook Ptr Ptr) As HRESULT
	End Type 'Workbooks_

	Type PublishObject_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function Publish (Byval Create As Variant Ptr) As HRESULT
		Declare Abstract Function Get_DivID (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Sheet (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_SourceType (Byval RHS As XlSourceType Ptr) As HRESULT
		Declare Abstract Function Get_Source (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_HtmlType (Byval RHS As XlHtmlType Ptr) As HRESULT
		Declare Abstract Function Let_HtmlType (Byval RHS As XlHtmlType) As HRESULT
		Declare Abstract Function Get_Title (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Title (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Filename (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Filename (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_AutoRepublish (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AutoRepublish (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'PublishObject_

	Type DefaultWebOptions_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RelyOnCSS (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RelyOnCSS (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_SaveHiddenData (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SaveHiddenData (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_LoadPictures (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_LoadPictures (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_OrganizeInFolder (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_OrganizeInFolder (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_UpdateLinksOnSave (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_UpdateLinksOnSave (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_UseLongFileNames (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_UseLongFileNames (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_CheckIfOfficeIsHTMLEditor (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_CheckIfOfficeIsHTMLEditor (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DownloadComponents (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DownloadComponents (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RelyOnVML (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RelyOnVML (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AllowPNG (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AllowPNG (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ScreenSize (Byval RHS As Office.MsoScreenSize Ptr) As HRESULT
		Declare Abstract Function Let_ScreenSize (Byval RHS As Office.MsoScreenSize) As HRESULT
		Declare Abstract Function Get_PixelsPerInch (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_PixelsPerInch (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_LocationOfComponents (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_LocationOfComponents (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Encoding (Byval RHS As Office.MsoEncoding Ptr) As HRESULT
		Declare Abstract Function Let_Encoding (Byval RHS As Office.MsoEncoding) As HRESULT
		Declare Abstract Function Get_AlwaysSaveInDefaultEncoding (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AlwaysSaveInDefaultEncoding (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_Fonts (Byval RHS As Office.WebPageFonts Ptr Ptr) As HRESULT
		Declare Abstract Function Get_FolderSuffix (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_TargetBrowser (Byval RHS As Office.MsoTargetBrowser Ptr) As HRESULT
		Declare Abstract Function Let_TargetBrowser (Byval RHS As Office.MsoTargetBrowser) As HRESULT
		Declare Abstract Function Get_SaveNewWebPagesAsWebArchives (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_SaveNewWebPagesAsWebArchives (Byval RHS As VARIANT_BOOL) As HRESULT
	End Type 'DefaultWebOptions_

	Type WebOptions_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_RelyOnCSS (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RelyOnCSS (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_OrganizeInFolder (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_OrganizeInFolder (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_UseLongFileNames (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_UseLongFileNames (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DownloadComponents (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DownloadComponents (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_RelyOnVML (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_RelyOnVML (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_AllowPNG (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_AllowPNG (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_ScreenSize (Byval RHS As Office.MsoScreenSize Ptr) As HRESULT
		Declare Abstract Function Let_ScreenSize (Byval RHS As Office.MsoScreenSize) As HRESULT
		Declare Abstract Function Get_PixelsPerInch (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_PixelsPerInch (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_LocationOfComponents (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_LocationOfComponents (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_Encoding (Byval RHS As Office.MsoEncoding Ptr) As HRESULT
		Declare Abstract Function Let_Encoding (Byval RHS As Office.MsoEncoding) As HRESULT
		Declare Abstract Function Get_FolderSuffix (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function UseDefaultFolderSuffix () As HRESULT
		Declare Abstract Function Get_TargetBrowser (Byval RHS As Office.MsoTargetBrowser Ptr) As HRESULT
		Declare Abstract Function Let_TargetBrowser (Byval RHS As Office.MsoTargetBrowser) As HRESULT
	End Type 'WebOptions_

	Type TreeviewControl_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Hidden (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Hidden (Byval RHS As Variant Ptr) As HRESULT
		Declare Abstract Function Get_Drilled (Byval RHS As Variant Ptr Ptr) As HRESULT
		Declare Abstract Function Let_Drilled (Byval RHS As Variant Ptr) As HRESULT
	End Type 'TreeviewControl_

	Type CubeField_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_CubeFieldType (Byval RHS As XlCubeFieldType Ptr) As HRESULT
		Declare Abstract Function Get__Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Name (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Value (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Get_Orientation (Byval RHS As XlPivotFieldOrientation Ptr) As HRESULT
		Declare Abstract Function Let_Orientation (Byval RHS As XlPivotFieldOrientation) As HRESULT
		Declare Abstract Function Get_Position (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_Position (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_TreeviewControl (Byval RHS As TreeviewControl Ptr Ptr) As HRESULT
		Declare Abstract Function Get_DragToColumn (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DragToColumn (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DragToHide (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DragToHide (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DragToPage (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DragToPage (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DragToRow (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DragToRow (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_DragToData (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_DragToData (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HiddenLevels (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Let_HiddenLevels (Byval RHS As Long) As HRESULT
		Declare Abstract Function Get_HasMemberProperties (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_LayoutForm (Byval RHS As XlLayoutFormType Ptr) As HRESULT
		Declare Abstract Function Let_LayoutForm (Byval RHS As XlLayoutFormType) As HRESULT
		Declare Abstract Function Get_PivotFields (Byval RHS As PivotFields Ptr Ptr) As HRESULT
		Declare Abstract Function _AddMemberPropertyField (Byval Property_v As BSTR, Byval PropertyOrder As Variant Ptr) As HRESULT
		Declare Abstract Function Get_EnableMultiplePageItems (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_EnableMultiplePageItems (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_LayoutSubtotalLocation (Byval RHS As XlSubtototalLocationType Ptr) As HRESULT
		Declare Abstract Function Let_LayoutSubtotalLocation (Byval RHS As XlSubtototalLocationType) As HRESULT
		Declare Abstract Function Get_ShowInFieldList (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_ShowInFieldList (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Delete_ () As HRESULT
		Declare Abstract Function AddMemberPropertyField (Byval Property_v As BSTR, Byval PropertyOrder As Variant Ptr, Byval PropertyDisplayedIn As Variant Ptr) As HRESULT
		Declare Abstract Function Get_IncludeNewItemsInFilter (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_IncludeNewItemsInFilter (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_CubeFieldSubType (Byval RHS As XlCubeFieldSubType Ptr) As HRESULT
		Declare Abstract Function Get_AllItemsVisible (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function ClearManualFilter () As HRESULT
		Declare Abstract Function CreatePivotFields () As HRESULT
		Declare Abstract Function Get_CurrentPageName (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_CurrentPageName (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_IsDate (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Get_Caption (Byval RHS As BSTR Ptr) As HRESULT
		Declare Abstract Function Let_Caption (Byval RHS As BSTR) As HRESULT
		Declare Abstract Function Get_FlattenHierarchies (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_FlattenHierarchies (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function Get_HierarchizeDistinct (Byval RHS As VARIANT_BOOL Ptr) As HRESULT
		Declare Abstract Function Let_HierarchizeDistinct (Byval RHS As VARIANT_BOOL) As HRESULT
		Declare Abstract Function AutoGroup (Byval Orientation As Variant Ptr, Byval Position As Variant Ptr) As HRESULT
	End Type 'CubeField_

	Type CubeFields_ Extends CAIDispatch
		Declare Abstract Function Get_Application (Byval RHS As Application Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Creator (Byval RHS As XlCreator Ptr) As HRESULT
		Declare Abstract Function Get_Parent (Byval RHS As IDispatch Ptr Ptr) As HRESULT
		Declare Abstract Function Get_Count (Byval RHS As Long Ptr) As HRESULT
		Declare Abstract Function Get_Item (Byval Index As Variant Ptr, Byval RHS As CubeField Ptr Ptr) As HRESULT
		Declare Abstract Function Get__Default (Byval Index As Variant Ptr, Byval RHS As CubeField Ptr Ptr) As HRESULT
		Declare Abstract Function Get__NewEnum (Byval RHS As IUnknown Ptr Ptr) As HRESULT
		Declare Abstract Function AddSet (Byval Name As BSTR, Byval Caption As BSTR, Byval RHS As CubeField Ptr Ptr) As HRESULT
		Declare Abstract Function GetMeasure (Byval AttributeHierarchy As Variant Ptr, Byval Function_v As XlConsolidationFunction, Byval Caption As Variant Ptr, Byval RHS As CubeField Ptr Ptr) As HRESULT
	End Type 'CubeFields_

	Type Font_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Background () As Variant Ptr
		' Declare Abstract Function Let_Background () As Variant Ptr
		' Declare Abstract Function Get_Bold () As Variant Ptr
		' Declare Abstract Function Let_Bold () As Variant Ptr
		' Declare Abstract Function Get_Color () As Variant Ptr
		' Declare Abstract Function Let_Color () As Variant Ptr
		' Declare Abstract Function Get_ColorIndex () As Variant Ptr
		' Declare Abstract Function Let_ColorIndex () As Variant Ptr
		' Declare Abstract Function Get_FontStyle () As Variant Ptr
		' Declare Abstract Function Let_FontStyle () As Variant Ptr
		' Declare Abstract Function Get_Italic () As Variant Ptr
		' Declare Abstract Function Let_Italic () As Variant Ptr
		' Declare Abstract Function Get_Name () As Variant Ptr
		' Declare Abstract Function Let_Name () As Variant Ptr
		' Declare Abstract Function Get_OutlineFont () As Variant Ptr
		' Declare Abstract Function Let_OutlineFont () As Variant Ptr
		' Declare Abstract Function Get_Shadow () As Variant Ptr
		' Declare Abstract Function Let_Shadow () As Variant Ptr
		' Declare Abstract Function Get_Size () As Variant Ptr
		' Declare Abstract Function Let_Size () As Variant Ptr
		' Declare Abstract Function Get_Strikethrough () As Variant Ptr
		' Declare Abstract Function Let_Strikethrough () As Variant Ptr
		' Declare Abstract Function Get_Subscript () As Variant Ptr
		' Declare Abstract Function Let_Subscript () As Variant Ptr
		' Declare Abstract Function Get_Superscript () As Variant Ptr
		' Declare Abstract Function Let_Superscript () As Variant Ptr
		' Declare Abstract Function Get_Underline () As Variant Ptr
		' Declare Abstract Function Let_Underline () As Variant Ptr
		' Declare Abstract Function Get_ThemeColor () As Variant Ptr
		' Declare Abstract Function Let_ThemeColor () As Variant Ptr
		' Declare Abstract Function Get_TintAndShade () As Variant Ptr
		' Declare Abstract Function Let_TintAndShade () As Variant Ptr
		' Declare Abstract Function Get_ThemeFont () As XlThemeFont
		' Declare Abstract Function Let_ThemeFont () As XlThemeFont
	End Type 'Font_

	Type Window_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Activate () As Variant Ptr
		' Declare Abstract Function ActivateNext () As Variant Ptr
		' Declare Abstract Function ActivatePrevious () As Variant Ptr
		' Declare Abstract Function Get_ActiveCell () As Range Ptr
		' Declare Abstract Function Get_ActiveChart () As Chart Ptr
		' Declare Abstract Function Get_ActivePane () As Pane Ptr
		' Declare Abstract Function Get_ActiveSheet () As IDispatch Ptr
		' Declare Abstract Function Get_Caption () As Variant Ptr
		' Declare Abstract Function Let_Caption () As Variant Ptr
		' Declare Abstract Function Close (Byval SaveChanges As Variant Ptr, Byval Filename As Variant Ptr, Byval RouteWorkbook As Variant Ptr) As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayFormulas () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayFormulas () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayGridlines () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayGridlines () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayHeadings () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayHeadings () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayHorizontalScrollBar () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayHorizontalScrollBar () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayOutline () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayOutline () As VARIANT_BOOL
		' Declare Abstract Function Get__DisplayRightToLeft () As VARIANT_BOOL
		' Declare Abstract Function Let__DisplayRightToLeft () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayVerticalScrollBar () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayVerticalScrollBar () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayWorkbookTabs () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayWorkbookTabs () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayZeros () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayZeros () As VARIANT_BOOL
		' Declare Abstract Function Get_EnableResize () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableResize () As VARIANT_BOOL
		' Declare Abstract Function Get_FreezePanes () As VARIANT_BOOL
		' Declare Abstract Function Let_FreezePanes () As VARIANT_BOOL
		' Declare Abstract Function Get_GridlineColor () As Long
		' Declare Abstract Function Let_GridlineColor () As Long
		' Declare Abstract Function Get_GridlineColorIndex () As XlColorIndex
		' Declare Abstract Function Let_GridlineColorIndex () As XlColorIndex
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function LargeScroll (Byval Down As Variant Ptr, Byval Up As Variant Ptr, Byval ToRight As Variant Ptr, Byval ToLeft As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function NewWindow () As Window Ptr
		' Declare Abstract Function Get_OnWindow () As BSTR
		' Declare Abstract Function Let_OnWindow () As BSTR
		' Declare Abstract Function Get_Panes () As Panes Ptr
		' Declare Abstract Function _PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr) As Variant Ptr
		' Declare Abstract Function PrintPreview (Byval EnableChanges As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_RangeSelection () As Range Ptr
		' Declare Abstract Function Get_ScrollColumn () As Long
		' Declare Abstract Function Let_ScrollColumn () As Long
		' Declare Abstract Function Get_ScrollRow () As Long
		' Declare Abstract Function Let_ScrollRow () As Long
		' Declare Abstract Function ScrollWorkbookTabs (Byval Sheets As Variant Ptr, Byval Position As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_SelectedSheets () As Sheets Ptr
		' Declare Abstract Function Get_Selection () As IDispatch Ptr
		' Declare Abstract Function SmallScroll (Byval Down As Variant Ptr, Byval Up As Variant Ptr, Byval ToRight As Variant Ptr, Byval ToLeft As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Split () As VARIANT_BOOL
		' Declare Abstract Function Let_Split () As VARIANT_BOOL
		' Declare Abstract Function Get_SplitColumn () As Long
		' Declare Abstract Function Let_SplitColumn () As Long
		' Declare Abstract Function Get_SplitHorizontal () As Double
		' Declare Abstract Function Let_SplitHorizontal () As Double
		' Declare Abstract Function Get_SplitRow () As Long
		' Declare Abstract Function Let_SplitRow () As Long
		' Declare Abstract Function Get_SplitVertical () As Double
		' Declare Abstract Function Let_SplitVertical () As Double
		' Declare Abstract Function Get_TabRatio () As Double
		' Declare Abstract Function Let_TabRatio () As Double
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_Type () As XlWindowType
		' Declare Abstract Function Get_UsableHeight () As Double
		' Declare Abstract Function Get_UsableWidth () As Double
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_VisibleRange () As Range Ptr
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_WindowNumber () As Long
		' Declare Abstract Function Get_WindowState () As XlWindowState
		' Declare Abstract Function Let_WindowState () As XlWindowState
		' Declare Abstract Function Get_Zoom () As Variant Ptr
		' Declare Abstract Function Let_Zoom () As Variant Ptr
		' Declare Abstract Function Get_View () As XlWindowView
		' Declare Abstract Function Let_View () As XlWindowView
		' Declare Abstract Function Get_DisplayRightToLeft () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayRightToLeft () As VARIANT_BOOL
		' Declare Abstract Function PointsToScreenPixelsX (Byval Points As Long) As Long
		' Declare Abstract Function PointsToScreenPixelsY (Byval Points As Long) As Long
		' Declare Abstract Function RangeFromPoint (Byval x As Long, Byval y As Long) As IDispatch Ptr
		' Declare Abstract Function ScrollIntoView (Byval Left As Long, Byval Top As Long, Byval Width As Long, Byval Height As Long, Byval Start As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_SheetViews () As SheetViews Ptr
		' Declare Abstract Function Get_ActiveSheetView () As IDispatch Ptr
		' Declare Abstract Function PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_DisplayRuler () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayRuler () As VARIANT_BOOL
		' Declare Abstract Function Get_AutoFilterDateGrouping () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoFilterDateGrouping () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayWhitespace () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayWhitespace () As VARIANT_BOOL
		' Declare Abstract Function Get_Hwnd () As Long
	End Type 'Window_

	Type Windows_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Arrange (Byval ArrangeStyle As XlArrangeStyle, Byval ActiveWorkbook As Variant Ptr, Byval SyncHorizontal As Variant Ptr, Byval SyncVertical As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As Window Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As Window Ptr
		' Declare Abstract Function CompareSideBySideWith (Byval WindowName As Variant Ptr) As VARIANT_BOOL
		' Declare Abstract Function BreakSideBySide () As VARIANT_BOOL
		' Declare Abstract Function Get_SyncScrollingSideBySide () As VARIANT_BOOL
		' Declare Abstract Function Let_SyncScrollingSideBySide () As VARIANT_BOOL
		' Declare Abstract Function ResetPositionsSideBySide () As HRESULT
	End Type 'Windows_

	Type AppEvents_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function NewWorkbook (Byval Wb As Workbook Ptr) As HRESULT
		' Declare Abstract Function SheetSelectionChange (Byval Sh As IDispatch Ptr, Byval Target As Range Ptr) As HRESULT
		' Declare Abstract Function SheetBeforeDoubleClick (Byval Sh As IDispatch Ptr, Byval Target As Range Ptr, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function SheetBeforeRightClick (Byval Sh As IDispatch Ptr, Byval Target As Range Ptr, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function SheetActivate (Byval Sh As IDispatch Ptr) As HRESULT
		' Declare Abstract Function SheetDeactivate (Byval Sh As IDispatch Ptr) As HRESULT
		' Declare Abstract Function SheetCalculate (Byval Sh As IDispatch Ptr) As HRESULT
		' Declare Abstract Function SheetChange (Byval Sh As IDispatch Ptr, Byval Target As Range Ptr) As HRESULT
		' Declare Abstract Function WorkbookOpen (Byval Wb As Workbook Ptr) As HRESULT
		' Declare Abstract Function WorkbookActivate (Byval Wb As Workbook Ptr) As HRESULT
		' Declare Abstract Function WorkbookDeactivate (Byval Wb As Workbook Ptr) As HRESULT
		' Declare Abstract Function WorkbookBeforeClose (Byval Wb As Workbook Ptr, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function WorkbookBeforeSave (Byval Wb As Workbook Ptr, Byval SaveAsUI As VARIANT_BOOL, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function WorkbookBeforePrint (Byval Wb As Workbook Ptr, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function WorkbookNewSheet (Byval Wb As Workbook Ptr, Byval Sh As IDispatch Ptr) As HRESULT
		' Declare Abstract Function WorkbookAddinInstall (Byval Wb As Workbook Ptr) As HRESULT
		' Declare Abstract Function WorkbookAddinUninstall (Byval Wb As Workbook Ptr) As HRESULT
		' Declare Abstract Function WindowResize (Byval Wb As Workbook Ptr, Byval Wn As Window Ptr) As HRESULT
		' Declare Abstract Function WindowActivate (Byval Wb As Workbook Ptr, Byval Wn As Window Ptr) As HRESULT
		' Declare Abstract Function WindowDeactivate (Byval Wb As Workbook Ptr, Byval Wn As Window Ptr) As HRESULT
		' Declare Abstract Function SheetFollowHyperlink (Byval Sh As IDispatch Ptr, Byval Target As Hyperlink Ptr) As HRESULT
		' Declare Abstract Function SheetPivotTableUpdate (Byval Sh As IDispatch Ptr, Byval Target As PivotTable Ptr) As HRESULT
		' Declare Abstract Function WorkbookPivotTableCloseConnection (Byval Wb As Workbook Ptr, Byval Target As PivotTable Ptr) As HRESULT
		' Declare Abstract Function WorkbookPivotTableOpenConnection (Byval Wb As Workbook Ptr, Byval Target As PivotTable Ptr) As HRESULT
		' Declare Abstract Function WorkbookSync (Byval Wb As Workbook Ptr, Byval SyncEventType As Office.MsoSyncEventType) As HRESULT
		' Declare Abstract Function WorkbookBeforeXmlImport (Byval Wb As Workbook Ptr, Byval Map As XmlMap Ptr, Byval Url As BSTR, Byval IsRefresh As VARIANT_BOOL, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function WorkbookAfterXmlImport (Byval Wb As Workbook Ptr, Byval Map As XmlMap Ptr, Byval IsRefresh As VARIANT_BOOL, Byval Result As XlXmlImportResult) As HRESULT
		' Declare Abstract Function WorkbookBeforeXmlExport (Byval Wb As Workbook Ptr, Byval Map As XmlMap Ptr, Byval Url As BSTR, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function WorkbookAfterXmlExport (Byval Wb As Workbook Ptr, Byval Map As XmlMap Ptr, Byval Url As BSTR, Byval Result As XlXmlExportResult) As HRESULT
		' Declare Abstract Function WorkbookRowsetComplete (Byval Wb As Workbook Ptr, Byval Description As BSTR, Byval Sheet As BSTR, Byval Success As VARIANT_BOOL) As HRESULT
		' Declare Abstract Function AfterCalculate () As HRESULT
		' Declare Abstract Function SheetPivotTableAfterValueChange (Byval Sh As IDispatch Ptr, Byval TargetPivotTable As PivotTable Ptr, Byval TargetRange As Range Ptr) As HRESULT
		' Declare Abstract Function SheetPivotTableBeforeAllocateChanges (Byval Sh As IDispatch Ptr, Byval TargetPivotTable As PivotTable Ptr, Byval ValueChangeStart As Long, Byval ValueChangeEnd As Long, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function SheetPivotTableBeforeCommitChanges (Byval Sh As IDispatch Ptr, Byval TargetPivotTable As PivotTable Ptr, Byval ValueChangeStart As Long, Byval ValueChangeEnd As Long, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function SheetPivotTableBeforeDiscardChanges (Byval Sh As IDispatch Ptr, Byval TargetPivotTable As PivotTable Ptr, Byval ValueChangeStart As Long, Byval ValueChangeEnd As Long) As HRESULT
		' Declare Abstract Function ProtectedViewWindowOpen (Byval Pvw As ProtectedViewWindow Ptr) As HRESULT
		' Declare Abstract Function ProtectedViewWindowBeforeEdit (Byval Pvw As ProtectedViewWindow Ptr, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function ProtectedViewWindowBeforeClose (Byval Pvw As ProtectedViewWindow Ptr, Byval Reason As XlProtectedViewCloseReason, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function ProtectedViewWindowResize (Byval Pvw As ProtectedViewWindow Ptr) As HRESULT
		' Declare Abstract Function ProtectedViewWindowActivate (Byval Pvw As ProtectedViewWindow Ptr) As HRESULT
		' Declare Abstract Function ProtectedViewWindowDeactivate (Byval Pvw As ProtectedViewWindow Ptr) As HRESULT
		' Declare Abstract Function WorkbookAfterSave (Byval Wb As Workbook Ptr, Byval Success As VARIANT_BOOL) As HRESULT
		' Declare Abstract Function WorkbookNewChart (Byval Wb As Workbook Ptr, Byval Ch As Chart Ptr) As HRESULT
		' Declare Abstract Function SheetLensGalleryRenderComplete (Byval Sh As IDispatch Ptr) As HRESULT
		' Declare Abstract Function SheetTableUpdate (Byval Sh As IDispatch Ptr, Byval Target As TableObject Ptr) As HRESULT
		' Declare Abstract Function WorkbookModelChange (Byval Wb As Workbook Ptr, Byval Changes As ModelChanges Ptr) As HRESULT
		' Declare Abstract Function SheetBeforeDelete (Byval Sh As IDispatch Ptr) As HRESULT
	End Type 'AppEvents_

	Type WorksheetFunction_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _WSFunction (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Count (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function IsNA (Byval Arg1 As Variant Ptr) As VARIANT_BOOL
		' Declare Abstract Function IsError (Byval Arg1 As Variant Ptr) As VARIANT_BOOL
		' Declare Abstract Function Sum (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function Average (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function Min_ (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function Max_ (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function Npv (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function StDev (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function Dollar (Byval Arg1 As Double, Byval Arg2 As Variant Ptr) As BSTR
		' Declare Abstract Function Fixed (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As BSTR
		' Declare Abstract Function Pi () As Double
		' Declare Abstract Function Ln (Byval Arg1 As Double) As Double
		' Declare Abstract Function Log10 (Byval Arg1 As Double) As Double
		' Declare Abstract Function Round (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function Lookup (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Index (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Rept (Byval Arg1 As BSTR, Byval Arg2 As Double) As BSTR
		' Declare Abstract Function And_ (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As VARIANT_BOOL
		' Declare Abstract Function Or_ (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As VARIANT_BOOL
		' Declare Abstract Function DCount (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function DSum (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function DAverage (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function DMin (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function DMax (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function DStDev (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function Var_ (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function DVar (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function Text (Byval Arg1 As Variant Ptr, Byval Arg2 As BSTR) As BSTR
		' Declare Abstract Function LinEst (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Trend (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function LogEst (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Growth (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Pv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr) As Double
		' Declare Abstract Function Fv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr) As Double
		' Declare Abstract Function NPer (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr) As Double
		' Declare Abstract Function Pmt (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr) As Double
		' Declare Abstract Function Rate (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr) As Double
		' Declare Abstract Function MIrr (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function Irr (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Match (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function Weekday (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Search (Byval Arg1 As BSTR, Byval Arg2 As BSTR, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function Transpose (Byval Arg1 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Atan2 (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function Asin (Byval Arg1 As Double) As Double
		' Declare Abstract Function Acos (Byval Arg1 As Double) As Double
		' Declare Abstract Function Choose (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function HLookup (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function VLookup (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Log (Byval Arg1 As Double, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Proper (Byval Arg1 As BSTR) As BSTR
		' Declare Abstract Function Trim (Byval Arg1 As BSTR) As BSTR
		' Declare Abstract Function Replace (Byval Arg1 As BSTR, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As BSTR) As BSTR
		' Declare Abstract Function Substitute (Byval Arg1 As BSTR, Byval Arg2 As BSTR, Byval Arg3 As BSTR, Byval Arg4 As Variant Ptr) As BSTR
		' Declare Abstract Function Find (Byval Arg1 As BSTR, Byval Arg2 As BSTR, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function IsErr (Byval Arg1 As Variant Ptr) As VARIANT_BOOL
		' Declare Abstract Function IsText (Byval Arg1 As Variant Ptr) As VARIANT_BOOL
		' Declare Abstract Function IsNumber (Byval Arg1 As Variant Ptr) As VARIANT_BOOL
		' Declare Abstract Function Sln (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function Syd (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Double) As Double
		' Declare Abstract Function Ddb (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Double, Byval Arg5 As Variant Ptr) As Double
		' Declare Abstract Function Clean (Byval Arg1 As BSTR) As BSTR
		' Declare Abstract Function MDeterm (Byval Arg1 As Variant Ptr) As Double
		' Declare Abstract Function MInverse (Byval Arg1 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function MMult (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Ipmt (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Double, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr) As Double
		' Declare Abstract Function Ppmt (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Double, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr) As Double
		' Declare Abstract Function CountA (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function Product (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function Fact (Byval Arg1 As Double) As Double
		' Declare Abstract Function DProduct (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function IsNonText (Byval Arg1 As Variant Ptr) As VARIANT_BOOL
		' Declare Abstract Function StDevP (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function VarP (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function DStDevP (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function DVarP (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function IsLogical (Byval Arg1 As Variant Ptr) As VARIANT_BOOL
		' Declare Abstract Function DCountA (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function USDollar (Byval Arg1 As Double, Byval Arg2 As Double) As BSTR
		' Declare Abstract Function FindB (Byval Arg1 As BSTR, Byval Arg2 As BSTR, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function SearchB (Byval Arg1 As BSTR, Byval Arg2 As BSTR, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function ReplaceB (Byval Arg1 As BSTR, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As BSTR) As BSTR
		' Declare Abstract Function RoundUp (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function RoundDown (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function Rank (Byval Arg1 As Double, Byval Arg2 As Range Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function Days360 (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function Vdb (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Double, Byval Arg5 As Double, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr) As Double
		' Declare Abstract Function Median (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function SumProduct (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function Sinh (Byval Arg1 As Double) As Double
		' Declare Abstract Function Cosh (Byval Arg1 As Double) As Double
		' Declare Abstract Function Tanh (Byval Arg1 As Double) As Double
		' Declare Abstract Function Asinh (Byval Arg1 As Double) As Double
		' Declare Abstract Function Acosh (Byval Arg1 As Double) As Double
		' Declare Abstract Function Atanh (Byval Arg1 As Double) As Double
		' Declare Abstract Function DGet (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Db (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Double, Byval Arg5 As Variant Ptr) As Double
		' Declare Abstract Function Frequency (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function AveDev (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function BetaDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr) As Double
		' Declare Abstract Function GammaLn (Byval Arg1 As Double) As Double
		' Declare Abstract Function BetaInv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr) As Double
		' Declare Abstract Function BinomDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL) As Double
		' Declare Abstract Function ChiDist (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function ChiInv (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function Combin (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function Confidence (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function CritBinom (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function Even (Byval Arg1 As Double) As Double
		' Declare Abstract Function ExponDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As VARIANT_BOOL) As Double
		' Declare Abstract Function FDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function FInv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function Fisher (Byval Arg1 As Double) As Double
		' Declare Abstract Function FisherInv (Byval Arg1 As Double) As Double
		' Declare Abstract Function Floor (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function GammaDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL) As Double
		' Declare Abstract Function GammaInv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function Ceiling (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function HypGeomDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Double) As Double
		' Declare Abstract Function LogNormDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function LogInv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function NegBinomDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function NormDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL) As Double
		' Declare Abstract Function NormSDist (Byval Arg1 As Double) As Double
		' Declare Abstract Function NormInv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function NormSInv (Byval Arg1 As Double) As Double
		' Declare Abstract Function Standardize (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function Odd (Byval Arg1 As Double) As Double
		' Declare Abstract Function Permut (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function Poisson (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As VARIANT_BOOL) As Double
		' Declare Abstract Function TDist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function Weibull (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL) As Double
		' Declare Abstract Function SumXMY2 (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function SumX2MY2 (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function SumX2PY2 (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function ChiTest (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Correl (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Covar (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Forecast (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function FTest (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Intercept (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Pearson (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function RSq (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function StEyx (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Slope (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function TTest (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Double, Byval Arg4 As Double) As Double
		' Declare Abstract Function Prob (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Double, Byval Arg4 As Variant Ptr) As Double
		' Declare Abstract Function DevSq (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function GeoMean (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function HarMean (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function SumSq (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function Kurt (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function Skew (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function ZTest (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function Large (Byval Arg1 As Variant Ptr, Byval Arg2 As Double) As Double
		' Declare Abstract Function Small (Byval Arg1 As Variant Ptr, Byval Arg2 As Double) As Double
		' Declare Abstract Function Quartile (Byval Arg1 As Variant Ptr, Byval Arg2 As Double) As Double
		' Declare Abstract Function Percentile (Byval Arg1 As Variant Ptr, Byval Arg2 As Double) As Double
		' Declare Abstract Function PercentRank (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function Mode (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function TrimMean (Byval Arg1 As Variant Ptr, Byval Arg2 As Double) As Double
		' Declare Abstract Function TInv (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function Power (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function Radians (Byval Arg1 As Double) As Double
		' Declare Abstract Function Degrees (Byval Arg1 As Double) As Double
		' Declare Abstract Function Subtotal (Byval Arg1 As Double, Byval Arg2 As Range Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function SumIf (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function CountIf (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function CountBlank (Byval Arg1 As Range Ptr) As Double
		' Declare Abstract Function Ispmt (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Double) As Double
		' Declare Abstract Function Roman (Byval Arg1 As Double, Byval Arg2 As Variant Ptr) As BSTR
		' Declare Abstract Function Asc (Byval Arg1 As BSTR) As BSTR
		' Declare Abstract Function Dbcs (Byval Arg1 As BSTR) As BSTR
		' Declare Abstract Function Phonetic (Byval Arg1 As Range Ptr) As BSTR
		' Declare Abstract Function BahtText (Byval Arg1 As Double) As BSTR
		' Declare Abstract Function ThaiDayOfWeek (Byval Arg1 As Double) As BSTR
		' Declare Abstract Function ThaiDigit (Byval Arg1 As BSTR) As BSTR
		' Declare Abstract Function ThaiMonthOfYear (Byval Arg1 As Double) As BSTR
		' Declare Abstract Function ThaiNumSound (Byval Arg1 As Double) As BSTR
		' Declare Abstract Function ThaiNumString (Byval Arg1 As Double) As BSTR
		' Declare Abstract Function ThaiStringLength (Byval Arg1 As BSTR) As Double
		' Declare Abstract Function IsThaiDigit (Byval Arg1 As BSTR) As VARIANT_BOOL
		' Declare Abstract Function RoundBahtDown (Byval Arg1 As Double) As Double
		' Declare Abstract Function RoundBahtUp (Byval Arg1 As Double) As Double
		' Declare Abstract Function ThaiYear (Byval Arg1 As Double) As Double
		' Declare Abstract Function RTD (Byval progID As Variant Ptr, Byval server As Variant Ptr, Byval topic1 As Variant Ptr, Byval topic2 As Variant Ptr, Byval topic3 As Variant Ptr, Byval topic4 As Variant Ptr, Byval topic5 As Variant Ptr, Byval topic6 As Variant Ptr, Byval topic7 As Variant Ptr, Byval topic8 As Variant Ptr, Byval topic9 As Variant Ptr, Byval topic10 As Variant Ptr, Byval topic11 As Variant Ptr, Byval topic12 As Variant Ptr, Byval topic13 As Variant Ptr, Byval topic14 As Variant Ptr, Byval topic15 As Variant Ptr, Byval topic16 As Variant Ptr, Byval topic17 As Variant Ptr, Byval topic18 As Variant Ptr, Byval topic19 As Variant Ptr, Byval topic20 As Variant Ptr, Byval topic21 As Variant Ptr, Byval topic22 As Variant Ptr, Byval topic23 As Variant Ptr, Byval topic24 As Variant Ptr, Byval topic25 As Variant Ptr, Byval topic26 As Variant Ptr, Byval topic27 As Variant Ptr, Byval topic28 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Hex2Bin (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As BSTR
		' Declare Abstract Function Hex2Dec (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function Hex2Oct (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As BSTR
		' Declare Abstract Function Dec2Bin (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As BSTR
		' Declare Abstract Function Dec2Hex (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As BSTR
		' Declare Abstract Function Dec2Oct (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As BSTR
		' Declare Abstract Function Oct2Bin (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As BSTR
		' Declare Abstract Function Oct2Hex (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As BSTR
		' Declare Abstract Function Oct2Dec (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function Bin2Dec (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function Bin2Oct (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As BSTR
		' Declare Abstract Function Bin2Hex (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As BSTR
		' Declare Abstract Function ImSub (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As BSTR
		' Declare Abstract Function ImDiv (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As BSTR
		' Declare Abstract Function ImPower (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As BSTR
		' Declare Abstract Function ImAbs (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function ImSqrt (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function ImLn (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function ImLog2 (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function ImLog10 (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function ImSin (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function ImCos (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function ImExp (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function ImArgument (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function ImConjugate (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function Imaginary (Byval Arg1 As Variant Ptr) As Double
		' Declare Abstract Function ImReal (Byval Arg1 As Variant Ptr) As Double
		' Declare Abstract Function Complex (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As BSTR
		' Declare Abstract Function ImSum (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As BSTR
		' Declare Abstract Function ImProduct (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As BSTR
		' Declare Abstract Function SeriesSum (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr) As Double
		' Declare Abstract Function FactDouble (Byval Arg1 As Variant Ptr) As Double
		' Declare Abstract Function SqrtPi (Byval Arg1 As Variant Ptr) As Double
		' Declare Abstract Function Quotient (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Delta (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function GeStep (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function IsEven (Byval Arg1 As Variant Ptr) As VARIANT_BOOL
		' Declare Abstract Function IsOdd (Byval Arg1 As Variant Ptr) As VARIANT_BOOL
		' Declare Abstract Function MRound (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Erf (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function ErfC (Byval Arg1 As Variant Ptr) As Double
		' Declare Abstract Function BesselJ (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function BesselK (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function BesselY (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function BesselI (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Xirr (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function Xnpv (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function PriceMat (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr) As Double
		' Declare Abstract Function YieldMat (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr) As Double
		' Declare Abstract Function IntRate (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr) As Double
		' Declare Abstract Function Received (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr) As Double
		' Declare Abstract Function Disc (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr) As Double
		' Declare Abstract Function PriceDisc (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr) As Double
		' Declare Abstract Function YieldDisc (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr) As Double
		' Declare Abstract Function TBillEq (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function TBillPrice (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function TBillYield (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function Price (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr) As Double
		' Declare Abstract Function DollarDe (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function DollarFr (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Nominal (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Effect (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function CumPrinc (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr) As Double
		' Declare Abstract Function CumIPmt (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr) As Double
		' Declare Abstract Function EDate (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function EoMonth (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function YearFrac (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function CoupDayBs (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr) As Double
		' Declare Abstract Function CoupDays (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr) As Double
		' Declare Abstract Function CoupDaysNc (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr) As Double
		' Declare Abstract Function CoupNcd (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr) As Double
		' Declare Abstract Function CoupNum (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr) As Double
		' Declare Abstract Function CoupPcd (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr) As Double
		' Declare Abstract Function Duration (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr) As Double
		' Declare Abstract Function MDuration (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr) As Double
		' Declare Abstract Function OddLPrice (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr) As Double
		' Declare Abstract Function OddLYield (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr) As Double
		' Declare Abstract Function OddFPrice (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr) As Double
		' Declare Abstract Function OddFYield (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr) As Double
		' Declare Abstract Function RandBetween (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function WeekNum (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function AmorDegrc (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr) As Double
		' Declare Abstract Function AmorLinc (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr) As Double
		' Declare Abstract Function Convert (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function AccrInt (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr) As Double
		' Declare Abstract Function AccrIntM (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr) As Double
		' Declare Abstract Function WorkDay (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function NetworkDays (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function Gcd (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function MultiNomial (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function Lcm (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function FVSchedule (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function SumIfs (Byval Arg1 As Range Ptr, Byval Arg2 As Range Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr) As Double
		' Declare Abstract Function CountIfs (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function AverageIf (Byval Arg1 As Range Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function AverageIfs (Byval Arg1 As Range Ptr, Byval Arg2 As Range Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr) As Double
		' Declare Abstract Function IfError (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Aggregate (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Range Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function Confidence_Norm (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function Confidence_T (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function ChiSq_Test (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function F_Test (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Covariance_P (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Covariance_S (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Expon_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As VARIANT_BOOL) As Double
		' Declare Abstract Function Gamma_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL) As Double
		' Declare Abstract Function Gamma_Inv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function Mode_Mult (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Mode_Sngl (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function Norm_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL) As Double
		' Declare Abstract Function Norm_Inv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function Percentile_Exc (Byval Arg1 As Variant Ptr, Byval Arg2 As Double) As Double
		' Declare Abstract Function Percentile_Inc (Byval Arg1 As Variant Ptr, Byval Arg2 As Double) As Double
		' Declare Abstract Function PercentRank_Exc (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function PercentRank_Inc (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function Poisson_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As VARIANT_BOOL) As Double
		' Declare Abstract Function Quartile_Exc (Byval Arg1 As Variant Ptr, Byval Arg2 As Double) As Double
		' Declare Abstract Function Quartile_Inc (Byval Arg1 As Variant Ptr, Byval Arg2 As Double) As Double
		' Declare Abstract Function Rank_Avg (Byval Arg1 As Double, Byval Arg2 As Range Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function Rank_Eq (Byval Arg1 As Double, Byval Arg2 As Range Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function StDev_S (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function StDev_P (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function T_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As VARIANT_BOOL) As Double
		' Declare Abstract Function T_Dist_2T (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function T_Dist_RT (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function T_Inv (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function T_Inv_2T (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function Var_S (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function Var_P (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function Weibull_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL) As Double
		' Declare Abstract Function NetworkDays_Intl (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr) As Double
		' Declare Abstract Function WorkDay_Intl (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr) As Double
		' Declare Abstract Function ISO_Ceiling (Byval Arg1 As Double, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Dummy21 (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function Dummy19 (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Beta_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr) As Double
		' Declare Abstract Function Beta_Inv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr) As Double
		' Declare Abstract Function ChiSq_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As VARIANT_BOOL) As Double
		' Declare Abstract Function ChiSq_Dist_RT (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function ChiSq_Inv (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function ChiSq_Inv_RT (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function F_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL) As Double
		' Declare Abstract Function F_Dist_RT (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function F_Inv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function F_Inv_RT (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function HypGeom_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Double, Byval Arg5 As VARIANT_BOOL) As Double
		' Declare Abstract Function LogNorm_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL) As Double
		' Declare Abstract Function LogNorm_Inv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function NegBinom_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL) As Double
		' Declare Abstract Function Norm_S_Dist (Byval Arg1 As Double, Byval Arg2 As VARIANT_BOOL) As Double
		' Declare Abstract Function Norm_S_Inv (Byval Arg1 As Double) As Double
		' Declare Abstract Function T_Test (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Double, Byval Arg4 As Double) As Double
		' Declare Abstract Function Z_Test (Byval Arg1 As Variant Ptr, Byval Arg2 As Double, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function Binom_Dist (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As VARIANT_BOOL) As Double
		' Declare Abstract Function Binom_Inv (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function Erf_Precise (Byval Arg1 As Variant Ptr) As Double
		' Declare Abstract Function ErfC_Precise (Byval Arg1 As Variant Ptr) As Double
		' Declare Abstract Function GammaLn_Precise (Byval Arg1 As Double) As Double
		' Declare Abstract Function Ceiling_Precise (Byval Arg1 As Double, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Floor_Precise (Byval Arg1 As Double, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Acot (Byval Arg1 As Double) As Double
		' Declare Abstract Function Acoth (Byval Arg1 As Double) As Double
		' Declare Abstract Function Cot (Byval Arg1 As Double) As Double
		' Declare Abstract Function Coth (Byval Arg1 As Double) As Double
		' Declare Abstract Function Csc (Byval Arg1 As Double) As Double
		' Declare Abstract Function Csch (Byval Arg1 As Double) As Double
		' Declare Abstract Function Sec (Byval Arg1 As Double) As Double
		' Declare Abstract Function Sech (Byval Arg1 As Double) As Double
		' Declare Abstract Function ImCot (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function ImTan (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function ImCsc (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function ImCsch (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function ImSec (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function ImSech (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function Bitand (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function Bitor (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function Bitxor (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function Bitlshift (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function Bitrshift (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function Xor_ (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As VARIANT_BOOL
		' Declare Abstract Function Combina (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function Permutationa (Byval Arg1 As Double, Byval Arg2 As Double) As Double
		' Declare Abstract Function PDuration (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function Base_ (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Variant Ptr) As BSTR
		' Declare Abstract Function Decimal (Byval Arg1 As BSTR, Byval Arg2 As Double) As Double
		' Declare Abstract Function Days (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function Binom_Dist_Range (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double, Byval Arg4 As Variant Ptr) As Double
		' Declare Abstract Function Gamma (Byval Arg1 As Double) As Double
		' Declare Abstract Function Gauss (Byval Arg1 As Double) As Double
		' Declare Abstract Function Phi (Byval Arg1 As Double) As Double
		' Declare Abstract Function Skew_p (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Double
		' Declare Abstract Function Rri (Byval Arg1 As Double, Byval Arg2 As Double, Byval Arg3 As Double) As Double
		' Declare Abstract Function Unichar (Byval Arg1 As Double) As BSTR
		' Declare Abstract Function Unicode (Byval Arg1 As BSTR) As Double
		' Declare Abstract Function Munit (Byval Arg1 As Double) As Variant Ptr
		' Declare Abstract Function Arabic (Byval Arg1 As BSTR) As Double
		' Declare Abstract Function IsoWeekNum (Byval Arg1 As Double, Byval Arg2 As Variant Ptr) As Double
		' Declare Abstract Function NumberValue (Byval Arg1 As BSTR, Byval Arg2 As BSTR, Byval Arg3 As BSTR) As Double
		' Declare Abstract Function IsFormula (Byval Arg1 As Range Ptr) As VARIANT_BOOL
		' Declare Abstract Function IfNa (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Ceiling_Math (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function Floor_Math (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function ImSinh (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function ImCosh (Byval Arg1 As Variant Ptr) As BSTR
		' Declare Abstract Function FilterXML (Byval Arg1 As BSTR, Byval Arg2 As BSTR) As Variant Ptr
		' Declare Abstract Function WebService (Byval Arg1 As BSTR) As Variant Ptr
		' Declare Abstract Function EncodeURL (Byval Arg1 As BSTR) As Variant Ptr
		' Declare Abstract Function Forecast_ETS (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr) As Double
		' Declare Abstract Function Forecast_ETS_ConfInt (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr) As Double
		' Declare Abstract Function Forecast_ETS_Seasonality (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr) As Double
		' Declare Abstract Function Forecast_Linear (Byval Arg1 As Double, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr) As Double
		' Declare Abstract Function Forecast_ETS_STAT (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Double, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr) As Double
	End Type 'WorksheetFunction_

	Type Range_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Activate () As Variant Ptr
		' Declare Abstract Function Get_AddIndent () As Variant Ptr
		' Declare Abstract Function Let_AddIndent () As Variant Ptr
		' Declare Abstract Function Get_Address (Byval RowAbsolute As Variant Ptr, Byval ColumnAbsolute As Variant Ptr, Byval ReferenceStyle As XlReferenceStyle, Byval External As Variant Ptr, Byval RelativeTo As Variant Ptr) As BSTR
		' Declare Abstract Function Get_AddressLocal (Byval RowAbsolute As Variant Ptr, Byval ColumnAbsolute As Variant Ptr, Byval ReferenceStyle As XlReferenceStyle, Byval External As Variant Ptr, Byval RelativeTo As Variant Ptr) As BSTR
		' Declare Abstract Function AdvancedFilter (Byval Action As XlFilterAction, Byval CriteriaRange As Variant Ptr, Byval CopyToRange As Variant Ptr, Byval Unique As Variant Ptr) As Variant Ptr
		' Declare Abstract Function ApplyNames (Byval Names As Variant Ptr, Byval IgnoreRelativeAbsolute As Variant Ptr, Byval UseRowColumnNames As Variant Ptr, Byval OmitColumn As Variant Ptr, Byval OmitRow As Variant Ptr, Byval Order As XlApplyNamesOrder, Byval AppendLast As Variant Ptr) As Variant Ptr
		' Declare Abstract Function ApplyOutlineStyles () As Variant Ptr
		' Declare Abstract Function Get_Areas () As Areas Ptr
		' Declare Abstract Function AutoComplete (Byval String_v As BSTR) As BSTR
		' Declare Abstract Function AutoFill (Byval Destination As Range Ptr, Byval Type_v As XlAutoFillType) As Variant Ptr
		' Declare Abstract Function AutoFilter (Byval Field As Variant Ptr, Byval Criteria1 As Variant Ptr, Byval Operator_v As XlAutoFilterOperator, Byval Criteria2 As Variant Ptr, Byval VisibleDropDown As Variant Ptr) As Variant Ptr
		' Declare Abstract Function AutoFit () As Variant Ptr
		' Declare Abstract Function AutoFormat (Byval Format As XlRangeAutoFormat, Byval Number As Variant Ptr, Byval Font As Variant Ptr, Byval Alignment As Variant Ptr, Byval Border As Variant Ptr, Byval Pattern As Variant Ptr, Byval Width As Variant Ptr) As Variant Ptr
		' Declare Abstract Function AutoOutline () As Variant Ptr
		' Declare Abstract Function _BorderAround (Byval LineStyle As Variant Ptr, Byval Weight As XlBorderWeight, Byval ColorIndex As XlColorIndex, Byval Color As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Borders () As Borders Ptr
		' Declare Abstract Function Calculate () As Variant Ptr
		' Declare Abstract Function Get_Cells () As Range Ptr
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Clear () As Variant Ptr
		' Declare Abstract Function ClearContents () As Variant Ptr
		' Declare Abstract Function ClearFormats () As Variant Ptr
		' Declare Abstract Function ClearNotes () As Variant Ptr
		' Declare Abstract Function ClearOutline () As Variant Ptr
		' Declare Abstract Function Get_Column () As Long
		' Declare Abstract Function ColumnDifferences (Byval Comparison As Variant Ptr) As Range Ptr
		' Declare Abstract Function Get_Columns () As Range Ptr
		' Declare Abstract Function Get_ColumnWidth () As Variant Ptr
		' Declare Abstract Function Let_ColumnWidth () As Variant Ptr
		' Declare Abstract Function Consolidate (Byval Sources As Variant Ptr, Byval Function_v As Variant Ptr, Byval TopRow As Variant Ptr, Byval LeftColumn As Variant Ptr, Byval CreateLinks As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Copy (Byval Destination As Variant Ptr) As Variant Ptr
		' Declare Abstract Function CopyFromRecordset (Byval Data As IUnknown Ptr, Byval MaxRows As Variant Ptr, Byval MaxColumns As Variant Ptr) As Long
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function CreateNames (Byval Top As Variant Ptr, Byval Left As Variant Ptr, Byval Bottom As Variant Ptr, Byval Right As Variant Ptr) As Variant Ptr
		' Declare Abstract Function CreatePublisher (Byval Edition As Variant Ptr, Byval Appearance As XlPictureAppearance, Byval ContainsPICT As Variant Ptr, Byval ContainsBIFF As Variant Ptr, Byval ContainsRTF As Variant Ptr, Byval ContainsVALU As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_CurrentArray () As Range Ptr
		' Declare Abstract Function Get_CurrentRegion () As Range Ptr
		' Declare Abstract Function Cut (Byval Destination As Variant Ptr) As Variant Ptr
		' Declare Abstract Function DataSeries (Byval Rowcol As Variant Ptr, Byval Type_v As XlDataSeriesType, Byval Date As XlDataSeriesDate, Byval Step_v As Variant Ptr, Byval Stop As Variant Ptr, Byval Trend As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get__Default (Byval RowIndex As Variant Ptr, Byval ColumnIndex As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Let__Default (Byval RowIndex As Variant Ptr, Byval ColumnIndex As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Delete_ (Byval Shift As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Dependents () As Range Ptr
		' Declare Abstract Function DialogBox_ () As Variant Ptr
		' Declare Abstract Function Get_DirectDependents () As Range Ptr
		' Declare Abstract Function Get_DirectPrecedents () As Range Ptr
		' Declare Abstract Function EditionOptions (Byval Type_v As XlEditionType, Byval Option As XlEditionOptionsOption, Byval Name As Variant Ptr, Byval Reference As Variant Ptr, Byval Appearance As XlPictureAppearance, Byval ChartSize As XlPictureAppearance, Byval Format As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_End (Byval Direction As XlDirection) As Range Ptr
		' Declare Abstract Function Get_EntireColumn () As Range Ptr
		' Declare Abstract Function Get_EntireRow () As Range Ptr
		' Declare Abstract Function FillDown () As Variant Ptr
		' Declare Abstract Function FillLeft () As Variant Ptr
		' Declare Abstract Function FillRight () As Variant Ptr
		' Declare Abstract Function FillUp () As Variant Ptr
		' Declare Abstract Function Find (Byval What As Variant Ptr, Byval After As Variant Ptr, Byval LookIn As Variant Ptr, Byval LookAt As Variant Ptr, Byval SearchOrder As Variant Ptr, Byval SearchDirection As XlSearchDirection, Byval MatchCase As Variant Ptr, Byval MatchByte As Variant Ptr, Byval SearchFormat As Variant Ptr) As Range Ptr
		' Declare Abstract Function FindNext (Byval After As Variant Ptr) As Range Ptr
		' Declare Abstract Function FindPrevious (Byval After As Variant Ptr) As Range Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Formula () As Variant Ptr
		' Declare Abstract Function Let_Formula () As Variant Ptr
		' Declare Abstract Function Get_FormulaArray () As Variant Ptr
		' Declare Abstract Function Let_FormulaArray () As Variant Ptr
		' Declare Abstract Function Get_FormulaLabel () As XlFormulaLabel
		' Declare Abstract Function Let_FormulaLabel () As XlFormulaLabel
		' Declare Abstract Function Get_FormulaHidden () As Variant Ptr
		' Declare Abstract Function Let_FormulaHidden () As Variant Ptr
		' Declare Abstract Function Get_FormulaLocal () As Variant Ptr
		' Declare Abstract Function Let_FormulaLocal () As Variant Ptr
		' Declare Abstract Function Get_FormulaR1C1 () As Variant Ptr
		' Declare Abstract Function Let_FormulaR1C1 () As Variant Ptr
		' Declare Abstract Function Get_FormulaR1C1Local () As Variant Ptr
		' Declare Abstract Function Let_FormulaR1C1Local () As Variant Ptr
		' Declare Abstract Function FunctionWizard () As Variant Ptr
		' Declare Abstract Function GoalSeek (Byval Goal As Variant Ptr, Byval ChangingCell As Range Ptr) As VARIANT_BOOL
		' Declare Abstract Function Group (Byval Start As Variant Ptr, Byval End_v As Variant Ptr, Byval By As Variant Ptr, Byval Periods As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_HasArray () As Variant Ptr
		' Declare Abstract Function Get_HasFormula () As Variant Ptr
		' Declare Abstract Function Get_Height () As Variant Ptr
		' Declare Abstract Function Get_Hidden () As Variant Ptr
		' Declare Abstract Function Let_Hidden () As Variant Ptr
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Get_IndentLevel () As Variant Ptr
		' Declare Abstract Function Let_IndentLevel () As Variant Ptr
		' Declare Abstract Function InsertIndent (Byval InsertAmount As Long) As HRESULT
		' Declare Abstract Function Insert (Byval Shift As Variant Ptr, Byval CopyOrigin As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Item (Byval RowIndex As Variant Ptr, Byval ColumnIndex As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Let_Item (Byval RowIndex As Variant Ptr, Byval ColumnIndex As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Justify () As Variant Ptr
		' Declare Abstract Function Get_Left () As Variant Ptr
		' Declare Abstract Function Get_ListHeaderRows () As Long
		' Declare Abstract Function ListNames () As Variant Ptr
		' Declare Abstract Function Get_LocationInTable () As XlLocationInTable
		' Declare Abstract Function Get_Locked () As Variant Ptr
		' Declare Abstract Function Let_Locked () As Variant Ptr
		' Declare Abstract Function Merge (Byval Across As Variant Ptr) As HRESULT
		' Declare Abstract Function UnMerge () As HRESULT
		' Declare Abstract Function Get_MergeArea () As Range Ptr
		' Declare Abstract Function Get_MergeCells () As Variant Ptr
		' Declare Abstract Function Let_MergeCells () As Variant Ptr
		' Declare Abstract Function Get_Name () As Variant Ptr
		' Declare Abstract Function Let_Name () As Variant Ptr
		' Declare Abstract Function NavigateArrow (Byval TowardPrecedent As Variant Ptr, Byval ArrowNumber As Variant Ptr, Byval LinkNumber As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_Next () As Range Ptr
		' Declare Abstract Function NoteText (Byval Text As Variant Ptr, Byval Start As Variant Ptr, Byval Length As Variant Ptr) As BSTR
		' Declare Abstract Function Get_NumberFormat () As Variant Ptr
		' Declare Abstract Function Let_NumberFormat () As Variant Ptr
		' Declare Abstract Function Get_NumberFormatLocal () As Variant Ptr
		' Declare Abstract Function Let_NumberFormatLocal () As Variant Ptr
		' Declare Abstract Function Get_Offset (Byval RowOffset As Variant Ptr, Byval ColumnOffset As Variant Ptr) As Range Ptr
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function Get_OutlineLevel () As Variant Ptr
		' Declare Abstract Function Let_OutlineLevel () As Variant Ptr
		' Declare Abstract Function Get_PageBreak () As Long
		' Declare Abstract Function Let_PageBreak () As Long
		' Declare Abstract Function Parse (Byval ParseLine As Variant Ptr, Byval Destination As Variant Ptr) As Variant Ptr
		' Declare Abstract Function _PasteSpecial (Byval Paste As XlPasteType, Byval Operation As XlPasteSpecialOperation, Byval SkipBlanks As Variant Ptr, Byval Transpose As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_PivotField () As PivotField Ptr
		' Declare Abstract Function Get_PivotItem () As PivotItem Ptr
		' Declare Abstract Function Get_PivotTable () As PivotTable Ptr
		' Declare Abstract Function Get_Precedents () As Range Ptr
		' Declare Abstract Function Get_PrefixCharacter () As Variant Ptr
		' Declare Abstract Function Get_Previous () As Range Ptr
		' Declare Abstract Function __PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr) As Variant Ptr
		' Declare Abstract Function PrintPreview (Byval EnableChanges As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_QueryTable () As QueryTable Ptr
		' Declare Abstract Function Get_Range (Byval Cell1 As Variant Ptr, Byval Cell2 As Variant Ptr) As Range Ptr
		' Declare Abstract Function RemoveSubtotal () As Variant Ptr
		' Declare Abstract Function Replace (Byval What As Variant Ptr, Byval Replacement As Variant Ptr, Byval LookAt As Variant Ptr, Byval SearchOrder As Variant Ptr, Byval MatchCase As Variant Ptr, Byval MatchByte As Variant Ptr, Byval SearchFormat As Variant Ptr, Byval ReplaceFormat As Variant Ptr) As VARIANT_BOOL
		' Declare Abstract Function Get_Resize (Byval RowSize As Variant Ptr, Byval ColumnSize As Variant Ptr) As Range Ptr
		' Declare Abstract Function Get_Row () As Long
		' Declare Abstract Function RowDifferences (Byval Comparison As Variant Ptr) As Range Ptr
		' Declare Abstract Function Get_RowHeight () As Variant Ptr
		' Declare Abstract Function Let_RowHeight () As Variant Ptr
		' Declare Abstract Function Get_Rows () As Range Ptr
		' Declare Abstract Function Run (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Show () As Variant Ptr
		' Declare Abstract Function ShowDependents (Byval Remove As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_ShowDetail () As Variant Ptr
		' Declare Abstract Function Let_ShowDetail () As Variant Ptr
		' Declare Abstract Function ShowErrors () As Variant Ptr
		' Declare Abstract Function ShowPrecedents (Byval Remove As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_ShrinkToFit () As Variant Ptr
		' Declare Abstract Function Let_ShrinkToFit () As Variant Ptr
		' Declare Abstract Function Sort (Byval Key1 As Variant Ptr, Byval Order1 As XlSortOrder, Byval Key2 As Variant Ptr, Byval Type_v As Variant Ptr, Byval Order2 As XlSortOrder, Byval Key3 As Variant Ptr, Byval Order3 As XlSortOrder, Byval Header As XlYesNoGuess, Byval OrderCustom As Variant Ptr, Byval MatchCase As Variant Ptr, Byval Orientation As XlSortOrientation, Byval SortMethod As XlSortMethod, Byval DataOption1 As XlSortDataOption, Byval DataOption2 As XlSortDataOption, Byval DataOption3 As XlSortDataOption) As Variant Ptr
		' Declare Abstract Function SortSpecial (Byval SortMethod As XlSortMethod, Byval Key1 As Variant Ptr, Byval Order1 As XlSortOrder, Byval Type_v As Variant Ptr, Byval Key2 As Variant Ptr, Byval Order2 As XlSortOrder, Byval Key3 As Variant Ptr, Byval Order3 As XlSortOrder, Byval Header As XlYesNoGuess, Byval OrderCustom As Variant Ptr, Byval MatchCase As Variant Ptr, Byval Orientation As XlSortOrientation, Byval DataOption1 As XlSortDataOption, Byval DataOption2 As XlSortDataOption, Byval DataOption3 As XlSortDataOption) As Variant Ptr
		' Declare Abstract Function Get_SoundNote () As SoundNote Ptr
		' Declare Abstract Function SpecialCells (Byval Type_v As XlCellType, Byval Value As Variant Ptr) As Range Ptr
		' Declare Abstract Function Get_Style () As Variant Ptr
		' Declare Abstract Function Let_Style () As Variant Ptr
		' Declare Abstract Function SubscribeTo (Byval Edition As BSTR, Byval Format As XlSubscribeToFormat) As Variant Ptr
		' Declare Abstract Function Subtotal (Byval GroupBy As Long, Byval Function_v As XlConsolidationFunction, Byval TotalList As Variant Ptr, Byval Replace_v As Variant Ptr, Byval PageBreaks As Variant Ptr, Byval SummaryBelowData As XlSummaryRow) As Variant Ptr
		' Declare Abstract Function Get_Summary () As Variant Ptr
		' Declare Abstract Function Table (Byval RowInput As Variant Ptr, Byval ColumnInput As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Text () As Variant Ptr
		' Declare Abstract Function TextToColumns (Byval Destination As Variant Ptr, Byval DataType As XlTextParsingType, Byval TextQualifier As XlTextQualifier, Byval ConsecutiveDelimiter As Variant Ptr, Byval Tab As Variant Ptr, Byval Semicolon As Variant Ptr, Byval Comma As Variant Ptr, Byval Space As Variant Ptr, Byval Other As Variant Ptr, Byval OtherChar As Variant Ptr, Byval FieldInfo As Variant Ptr, Byval DecimalSeparator As Variant Ptr, Byval ThousandsSeparator As Variant Ptr, Byval TrailingMinusNumbers As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Top () As Variant Ptr
		' Declare Abstract Function Ungroup () As Variant Ptr
		' Declare Abstract Function Get_UseStandardHeight () As Variant Ptr
		' Declare Abstract Function Let_UseStandardHeight () As Variant Ptr
		' Declare Abstract Function Get_UseStandardWidth () As Variant Ptr
		' Declare Abstract Function Let_UseStandardWidth () As Variant Ptr
		' Declare Abstract Function Get_Validation () As Validation Ptr
		' Declare Abstract Function Get_Value (Byval RangeValueDataType As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Let_Value (Byval RangeValueDataType As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Value2 () As Variant Ptr
		' Declare Abstract Function Let_Value2 () As Variant Ptr
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Get_Width () As Variant Ptr
		' Declare Abstract Function Get_Worksheet () As Worksheet Ptr
		' Declare Abstract Function Get_WrapText () As Variant Ptr
		' Declare Abstract Function Let_WrapText () As Variant Ptr
		' Declare Abstract Function AddComment (Byval Text As Variant Ptr) As Comment Ptr
		' Declare Abstract Function Get_Comment () As Comment Ptr
		' Declare Abstract Function ClearComments () As HRESULT
		' Declare Abstract Function Get_Phonetic () As Phonetic Ptr
		' Declare Abstract Function Get_FormatConditions () As FormatConditions Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_Hyperlinks () As Hyperlinks Ptr
		' Declare Abstract Function Get_Phonetics () As Phonetics Ptr
		' Declare Abstract Function SetPhonetic () As HRESULT
		' Declare Abstract Function Get_ID () As BSTR
		' Declare Abstract Function Let_ID () As BSTR
		' Declare Abstract Function _PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_PivotCell () As PivotCell Ptr
		' Declare Abstract Function Dirty () As HRESULT
		' Declare Abstract Function Get_Errors () As Errors Ptr
		' Declare Abstract Function Get_SmartTags () As SmartTags Ptr
		' Declare Abstract Function Speak (Byval SpeakDirection As Variant Ptr, Byval SpeakFormulas As Variant Ptr) As HRESULT
		' Declare Abstract Function PasteSpecial (Byval Paste As XlPasteType, Byval Operation As XlPasteSpecialOperation, Byval SkipBlanks As Variant Ptr, Byval Transpose As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_AllowEdit () As VARIANT_BOOL
		' Declare Abstract Function Get_ListObject () As ListObject Ptr
		' Declare Abstract Function Get_XPath () As XPath Ptr
		' Declare Abstract Function Get_ServerActions () As Actions Ptr
		' Declare Abstract Function RemoveDuplicates (Byval Columns As Variant Ptr, Byval Header As XlYesNoGuess) As HRESULT
		' Declare Abstract Function PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_MDX () As BSTR
		' Declare Abstract Function ExportAsFixedFormat (Byval Type_v As XlFixedFormatType, Byval Filename As Variant Ptr, Byval Quality As Variant Ptr, Byval IncludeDocProperties As Variant Ptr, Byval IgnorePrintAreas As Variant Ptr, Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval OpenAfterPublish As Variant Ptr, Byval FixedFormatExtClassPtr As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_CountLarge () As Variant Ptr
		' Declare Abstract Function CalculateRowMajorOrder () As Variant Ptr
		' Declare Abstract Function Get_SparklineGroups () As SparklineGroups Ptr
		' Declare Abstract Function ClearHyperlinks () As HRESULT
		' Declare Abstract Function Get_DisplayFormat () As DisplayFormat Ptr
		' Declare Abstract Function BorderAround (Byval LineStyle As Variant Ptr, Byval Weight As XlBorderWeight, Byval ColorIndex As XlColorIndex, Byval Color As Variant Ptr, Byval ThemeColor As Variant Ptr) As Variant Ptr
		' Declare Abstract Function AllocateChanges () As HRESULT
		' Declare Abstract Function DiscardChanges () As HRESULT
		' Declare Abstract Function FlashFill () As HRESULT
	End Type 'Range_

	Type ChartEvents_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Activate () As HRESULT
		' Declare Abstract Function Deactivate () As HRESULT
		' Declare Abstract Function Resize () As HRESULT
		' Declare Abstract Function MouseDown (Byval Button As Long, Byval Shift As Long, Byval x As Long, Byval y As Long) As HRESULT
		' Declare Abstract Function MouseUp (Byval Button As Long, Byval Shift As Long, Byval x As Long, Byval y As Long) As HRESULT
		' Declare Abstract Function MouseMove (Byval Button As Long, Byval Shift As Long, Byval x As Long, Byval y As Long) As HRESULT
		' Declare Abstract Function BeforeRightClick (Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function DragPlot () As HRESULT
		' Declare Abstract Function DragOver () As HRESULT
		' Declare Abstract Function BeforeDoubleClick (Byval ElementID As Long, Byval Arg1 As Long, Byval Arg2 As Long, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function Select_ (Byval ElementID As Long, Byval Arg1 As Long, Byval Arg2 As Long) As HRESULT
		' Declare Abstract Function SeriesChange (Byval SeriesIndex As Long, Byval PointIndex As Long) As HRESULT
		' Declare Abstract Function Calculate () As HRESULT
	End Type 'ChartEvents_

	Type VPageBreak_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As Worksheet Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function DragOff (Byval Direction As XlDirection, Byval RegionIndex As Long) As HRESULT
		' Declare Abstract Function Get_Type () As XlPageBreak
		' Declare Abstract Function Let_Type () As XlPageBreak
		' Declare Abstract Function Get_Extent () As XlPageBreakExtent
		' Declare Abstract Function Get_Location () As Range Ptr
		' Declare Abstract Function Set_Location () As Range Ptr
	End Type 'VPageBreak_

	Type HPageBreak_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As Worksheet Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function DragOff (Byval Direction As XlDirection, Byval RegionIndex As Long) As HRESULT
		' Declare Abstract Function Get_Type () As XlPageBreak
		' Declare Abstract Function Let_Type () As XlPageBreak
		' Declare Abstract Function Get_Extent () As XlPageBreakExtent
		' Declare Abstract Function Get_Location () As Range Ptr
		' Declare Abstract Function Set_Location () As Range Ptr
	End Type 'HPageBreak_

	Type HPageBreaks_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Long) As HPageBreak Ptr
		' Declare Abstract Function Get__Default (Byval Index As Long) As HPageBreak Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Add (Byval Before As IDispatch Ptr) As HPageBreak Ptr
	End Type 'HPageBreaks_

	Type VPageBreaks_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Long) As VPageBreak Ptr
		' Declare Abstract Function Get__Default (Byval Index As Long) As VPageBreak Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Add (Byval Before As IDispatch Ptr) As VPageBreak Ptr
	End Type 'VPageBreaks_

	Type RecentFile_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Get_Path () As BSTR
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Open () As Workbook Ptr
		' Declare Abstract Function Delete_ () As HRESULT
	End Type 'RecentFile_

	Type RecentFiles_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Maximum () As Long
		' Declare Abstract Function Let_Maximum () As Long
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Long) As RecentFile Ptr
		' Declare Abstract Function Get__Default (Byval Index As Long) As RecentFile Ptr
		' Declare Abstract Function Add (Byval Name As BSTR) As RecentFile Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'RecentFiles_

	Type DocEvents_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function SelectionChange (Byval Target As Range Ptr) As HRESULT
		' Declare Abstract Function BeforeDoubleClick (Byval Target As Range Ptr, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function BeforeRightClick (Byval Target As Range Ptr, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function Activate () As HRESULT
		' Declare Abstract Function Deactivate () As HRESULT
		' Declare Abstract Function Calculate () As HRESULT
		' Declare Abstract Function Change (Byval Target As Range Ptr) As HRESULT
		' Declare Abstract Function FollowHyperlink (Byval Target As Hyperlink Ptr) As HRESULT
		' Declare Abstract Function PivotTableUpdate (Byval Target As PivotTable Ptr) As HRESULT
		' Declare Abstract Function PivotTableAfterValueChange (Byval TargetPivotTable As PivotTable Ptr, Byval TargetRange As Range Ptr) As HRESULT
		' Declare Abstract Function PivotTableBeforeAllocateChanges (Byval TargetPivotTable As PivotTable Ptr, Byval ValueChangeStart As Long, Byval ValueChangeEnd As Long, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function PivotTableBeforeCommitChanges (Byval TargetPivotTable As PivotTable Ptr, Byval ValueChangeStart As Long, Byval ValueChangeEnd As Long, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function PivotTableBeforeDiscardChanges (Byval TargetPivotTable As PivotTable Ptr, Byval ValueChangeStart As Long, Byval ValueChangeEnd As Long) As HRESULT
		' Declare Abstract Function PivotTableChangeSync (Byval Target As PivotTable Ptr) As HRESULT
		' Declare Abstract Function LensGalleryRenderComplete () As HRESULT
		' Declare Abstract Function TableUpdate (Byval Target As TableObject Ptr) As HRESULT
		' Declare Abstract Function BeforeDelete () As HRESULT
	End Type 'DocEvents_

	Type Style_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Let_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Get_BuiltIn () As VARIANT_BOOL
		' Declare Abstract Function Get_Borders () As Borders Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_FormulaHidden () As VARIANT_BOOL
		' Declare Abstract Function Let_FormulaHidden () As VARIANT_BOOL
		' Declare Abstract Function Get_HorizontalAlignment () As XlHAlign
		' Declare Abstract Function Let_HorizontalAlignment () As XlHAlign
		' Declare Abstract Function Get_IncludeAlignment () As VARIANT_BOOL
		' Declare Abstract Function Let_IncludeAlignment () As VARIANT_BOOL
		' Declare Abstract Function Get_IncludeBorder () As VARIANT_BOOL
		' Declare Abstract Function Let_IncludeBorder () As VARIANT_BOOL
		' Declare Abstract Function Get_IncludeFont () As VARIANT_BOOL
		' Declare Abstract Function Let_IncludeFont () As VARIANT_BOOL
		' Declare Abstract Function Get_IncludeNumber () As VARIANT_BOOL
		' Declare Abstract Function Let_IncludeNumber () As VARIANT_BOOL
		' Declare Abstract Function Get_IncludePatterns () As VARIANT_BOOL
		' Declare Abstract Function Let_IncludePatterns () As VARIANT_BOOL
		' Declare Abstract Function Get_IncludeProtection () As VARIANT_BOOL
		' Declare Abstract Function Let_IncludeProtection () As VARIANT_BOOL
		' Declare Abstract Function Get_IndentLevel () As Long
		' Declare Abstract Function Let_IndentLevel () As Long
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_MergeCells () As Variant Ptr
		' Declare Abstract Function Let_MergeCells () As Variant Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Get_NameLocal () As BSTR
		' Declare Abstract Function Get_NumberFormat () As BSTR
		' Declare Abstract Function Let_NumberFormat () As BSTR
		' Declare Abstract Function Get_NumberFormatLocal () As BSTR
		' Declare Abstract Function Let_NumberFormatLocal () As BSTR
		' Declare Abstract Function Get_Orientation () As XlOrientation
		' Declare Abstract Function Let_Orientation () As XlOrientation
		' Declare Abstract Function Get_ShrinkToFit () As VARIANT_BOOL
		' Declare Abstract Function Let_ShrinkToFit () As VARIANT_BOOL
		' Declare Abstract Function Get_Value () As BSTR
		' Declare Abstract Function Get_VerticalAlignment () As XlVAlign
		' Declare Abstract Function Let_VerticalAlignment () As XlVAlign
		' Declare Abstract Function Get_WrapText () As VARIANT_BOOL
		' Declare Abstract Function Let_WrapText () As VARIANT_BOOL
		' Declare Abstract Function Get__Default () As BSTR
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
	End Type 'Style_

	Type Styles_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Name As BSTR, Byval BasedOn As Variant Ptr) As Style Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As Style Ptr
		' Declare Abstract Function Merge (Byval Workbook As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As Style Ptr
	End Type 'Styles_

	Type Borders_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Color () As Variant Ptr
		' Declare Abstract Function Let_Color () As Variant Ptr
		' Declare Abstract Function Get_ColorIndex () As Variant Ptr
		' Declare Abstract Function Let_ColorIndex () As Variant Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As XlBordersIndex) As Border Ptr
		' Declare Abstract Function Get_LineStyle () As Variant Ptr
		' Declare Abstract Function Let_LineStyle () As Variant Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_Value () As Variant Ptr
		' Declare Abstract Function Let_Value () As Variant Ptr
		' Declare Abstract Function Get_Weight () As Variant Ptr
		' Declare Abstract Function Let_Weight () As Variant Ptr
		' Declare Abstract Function Get__Default (Byval Index As XlBordersIndex) As Border Ptr
		' Declare Abstract Function Get_ThemeColor () As Variant Ptr
		' Declare Abstract Function Let_ThemeColor () As Variant Ptr
		' Declare Abstract Function Get_TintAndShade () As Variant Ptr
		' Declare Abstract Function Let_TintAndShade () As Variant Ptr
	End Type 'Borders_

	Type AddIn_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Author () As BSTR
		' Declare Abstract Function Get_Comments () As BSTR
		' Declare Abstract Function Get_FullName () As BSTR
		' Declare Abstract Function Get_Installed () As VARIANT_BOOL
		' Declare Abstract Function Let_Installed () As VARIANT_BOOL
		' Declare Abstract Function Get_Keywords () As BSTR
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Get_Path () As BSTR
		' Declare Abstract Function Get_Subject () As BSTR
		' Declare Abstract Function Get_Title () As BSTR
		' Declare Abstract Function Get_progID () As BSTR
		' Declare Abstract Function Get_CLSID () As BSTR
		' Declare Abstract Function Get_IsOpen () As VARIANT_BOOL
	End Type 'AddIn_

	Type AddIns_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Filename As BSTR, Byval CopyFile As Variant Ptr) As AddIn Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As AddIn Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As AddIn Ptr
	End Type 'AddIns_

	Type Toolbar_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BuiltIn () As VARIANT_BOOL
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get_Height () As Long
		' Declare Abstract Function Let_Height () As Long
		' Declare Abstract Function Get_Left () As Long
		' Declare Abstract Function Let_Left () As Long
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Get_Position () As Long
		' Declare Abstract Function Let_Position () As Long
		' Declare Abstract Function Get_Protection () As XlToolbarProtection
		' Declare Abstract Function Let_Protection () As XlToolbarProtection
		' Declare Abstract Function Reset () As HRESULT
		' Declare Abstract Function Get_ToolbarButtons () As ToolbarButtons Ptr
		' Declare Abstract Function Get_Top () As Long
		' Declare Abstract Function Let_Top () As Long
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Long
		' Declare Abstract Function Let_Width () As Long
	End Type 'Toolbar_

	Type Toolbars_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Name As Variant Ptr) As Toolbar Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As Toolbar Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As Toolbar Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'Toolbars_

	Type ToolbarButton_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BuiltIn () As VARIANT_BOOL
		' Declare Abstract Function Get_BuiltInFace () As VARIANT_BOOL
		' Declare Abstract Function Let_BuiltInFace () As VARIANT_BOOL
		' Declare Abstract Function Copy (Byval Toolbar As Toolbar Ptr, Byval Before As Long) As HRESULT
		' Declare Abstract Function CopyFace () As HRESULT
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Edit () As HRESULT
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_HelpContextID () As Long
		' Declare Abstract Function Let_HelpContextID () As Long
		' Declare Abstract Function Get_HelpFile () As BSTR
		' Declare Abstract Function Let_HelpFile () As BSTR
		' Declare Abstract Function Get_ID () As Long
		' Declare Abstract Function Get_IsGap () As VARIANT_BOOL
		' Declare Abstract Function Move (Byval Toolbar As Toolbar Ptr, Byval Before As Long) As HRESULT
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function PasteFace () As HRESULT
		' Declare Abstract Function Get_Pushed () As VARIANT_BOOL
		' Declare Abstract Function Let_Pushed () As VARIANT_BOOL
		' Declare Abstract Function Reset () As HRESULT
		' Declare Abstract Function Get_StatusBar () As BSTR
		' Declare Abstract Function Let_StatusBar () As BSTR
		' Declare Abstract Function Get_Width () As Long
		' Declare Abstract Function Let_Width () As Long
	End Type 'ToolbarButton_

	Type ToolbarButtons_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Button As Variant Ptr, Byval Before As Variant Ptr, Byval OnAction As Variant Ptr, Byval Pushed As Variant Ptr, Byval Enabled As Variant Ptr, Byval StatusBar As Variant Ptr, Byval HelpFile As Variant Ptr, Byval HelpContextID As Variant Ptr) As ToolbarButton Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Long) As ToolbarButton Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get__Default (Byval Index As Long) As ToolbarButton Ptr
	End Type 'ToolbarButtons_

	Type Areas_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Long) As Range Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get__Default (Byval Index As Long) As Range Ptr
	End Type 'Areas_

	Type WorkbookEvents_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Open () As HRESULT
		' Declare Abstract Function Activate () As HRESULT
		' Declare Abstract Function Deactivate () As HRESULT
		' Declare Abstract Function BeforeClose (Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function BeforeSave (Byval SaveAsUI As VARIANT_BOOL, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function BeforePrint (Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function NewSheet (Byval Sh As IDispatch Ptr) As HRESULT
		' Declare Abstract Function AddinInstall () As HRESULT
		' Declare Abstract Function AddinUninstall () As HRESULT
		' Declare Abstract Function WindowResize (Byval Wn As Window Ptr) As HRESULT
		' Declare Abstract Function WindowActivate (Byval Wn As Window Ptr) As HRESULT
		' Declare Abstract Function WindowDeactivate (Byval Wn As Window Ptr) As HRESULT
		' Declare Abstract Function SheetSelectionChange (Byval Sh As IDispatch Ptr, Byval Target As Range Ptr) As HRESULT
		' Declare Abstract Function SheetBeforeDoubleClick (Byval Sh As IDispatch Ptr, Byval Target As Range Ptr, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function SheetBeforeRightClick (Byval Sh As IDispatch Ptr, Byval Target As Range Ptr, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function SheetActivate (Byval Sh As IDispatch Ptr) As HRESULT
		' Declare Abstract Function SheetDeactivate (Byval Sh As IDispatch Ptr) As HRESULT
		' Declare Abstract Function SheetCalculate (Byval Sh As IDispatch Ptr) As HRESULT
		' Declare Abstract Function SheetChange (Byval Sh As IDispatch Ptr, Byval Target As Range Ptr) As HRESULT
		' Declare Abstract Function SheetFollowHyperlink (Byval Sh As IDispatch Ptr, Byval Target As Hyperlink Ptr) As HRESULT
		' Declare Abstract Function SheetPivotTableUpdate (Byval Sh As IDispatch Ptr, Byval Target As PivotTable Ptr) As HRESULT
		' Declare Abstract Function PivotTableCloseConnection (Byval Target As PivotTable Ptr) As HRESULT
		' Declare Abstract Function PivotTableOpenConnection (Byval Target As PivotTable Ptr) As HRESULT
		' Declare Abstract Function Sync (Byval SyncEventType As Office.MsoSyncEventType) As HRESULT
		' Declare Abstract Function BeforeXmlImport (Byval Map As XmlMap Ptr, Byval Url As BSTR, Byval IsRefresh As VARIANT_BOOL, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function AfterXmlImport (Byval Map As XmlMap Ptr, Byval IsRefresh As VARIANT_BOOL, Byval Result As XlXmlImportResult) As HRESULT
		' Declare Abstract Function BeforeXmlExport (Byval Map As XmlMap Ptr, Byval Url As BSTR, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function AfterXmlExport (Byval Map As XmlMap Ptr, Byval Url As BSTR, Byval Result As XlXmlExportResult) As HRESULT
		' Declare Abstract Function RowsetComplete (Byval Description As BSTR, Byval Sheet As BSTR, Byval Success As VARIANT_BOOL) As HRESULT
		' Declare Abstract Function SheetPivotTableAfterValueChange (Byval Sh As IDispatch Ptr, Byval TargetPivotTable As PivotTable Ptr, Byval TargetRange As Range Ptr) As HRESULT
		' Declare Abstract Function SheetPivotTableBeforeAllocateChanges (Byval Sh As IDispatch Ptr, Byval TargetPivotTable As PivotTable Ptr, Byval ValueChangeStart As Long, Byval ValueChangeEnd As Long, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function SheetPivotTableBeforeCommitChanges (Byval Sh As IDispatch Ptr, Byval TargetPivotTable As PivotTable Ptr, Byval ValueChangeStart As Long, Byval ValueChangeEnd As Long, Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function SheetPivotTableBeforeDiscardChanges (Byval Sh As IDispatch Ptr, Byval TargetPivotTable As PivotTable Ptr, Byval ValueChangeStart As Long, Byval ValueChangeEnd As Long) As HRESULT
		' Declare Abstract Function SheetPivotTableChangeSync (Byval Sh As IDispatch Ptr, Byval Target As PivotTable Ptr) As HRESULT
		' Declare Abstract Function AfterSave (Byval Success As VARIANT_BOOL) As HRESULT
		' Declare Abstract Function NewChart (Byval Ch As Chart Ptr) As HRESULT
		' Declare Abstract Function SheetLensGalleryRenderComplete (Byval Sh As IDispatch Ptr) As HRESULT
		' Declare Abstract Function SheetTableUpdate (Byval Sh As IDispatch Ptr, Byval Target As TableObject Ptr) As HRESULT
		' Declare Abstract Function ModelChange (Byval Changes As ModelChanges Ptr) As HRESULT
		' Declare Abstract Function SheetBeforeDelete (Byval Sh As IDispatch Ptr) As HRESULT
	End Type 'WorkbookEvents_

	Type MenuBars_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Name As Variant Ptr) As MenuBar Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As MenuBar Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As MenuBar Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'MenuBars_

	Type MenuBar_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Activate () As HRESULT
		' Declare Abstract Function Get_BuiltIn () As VARIANT_BOOL
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Menus () As Menus Ptr
		' Declare Abstract Function Reset () As HRESULT
	End Type 'MenuBar_

	Type Menus_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Caption As BSTR, Byval Before As Variant Ptr, Byval Restore As Variant Ptr) As Menu Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As Menu Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As Menu Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'Menus_

	Type Menu_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_MenuItems () As MenuItems Ptr
	End Type 'Menu_

	Type MenuItems_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Caption As BSTR, Byval OnAction As Variant Ptr, Byval ShortcutKey As Variant Ptr, Byval Before As Variant Ptr, Byval Restore As Variant Ptr, Byval StatusBar As Variant Ptr, Byval HelpFile As Variant Ptr, Byval HelpContextID As Variant Ptr) As MenuItem Ptr
		' Declare Abstract Function AddMenu (Byval Caption As BSTR, Byval Before As Variant Ptr, Byval Restore As Variant Ptr) As Menu Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'MenuItems_

	Type MenuItem_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Checked () As VARIANT_BOOL
		' Declare Abstract Function Let_Checked () As VARIANT_BOOL
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_HelpContextID () As Long
		' Declare Abstract Function Let_HelpContextID () As Long
		' Declare Abstract Function Get_HelpFile () As BSTR
		' Declare Abstract Function Let_HelpFile () As BSTR
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_StatusBar () As BSTR
		' Declare Abstract Function Let_StatusBar () As BSTR
	End Type 'MenuItem_

	Type Charts_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval Count As Variant Ptr) As Chart Ptr
		' Declare Abstract Function Copy (Byval Before As Variant Ptr, Byval After As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function _Dummy7 () As HRESULT
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Move (Byval Before As Variant Ptr, Byval After As Variant Ptr) As HRESULT
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function __PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr) As HRESULT
		' Declare Abstract Function PrintPreview (Byval EnableChanges As Variant Ptr) As HRESULT
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_HPageBreaks () As HPageBreaks Ptr
		' Declare Abstract Function Get_VPageBreaks () As VPageBreaks Ptr
		' Declare Abstract Function Get_Visible () As Variant Ptr
		' Declare Abstract Function Let_Visible () As Variant Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr) As HRESULT
		' Declare Abstract Function PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr) As HRESULT
		' Declare Abstract Function Add2 (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval Count As Variant Ptr, Byval NewLayout As Variant Ptr) As Chart Ptr
	End Type 'Charts_

	Type DrawingObjects_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_Accelerator () As Variant Ptr
		' Declare Abstract Function Let_Accelerator () As Variant Ptr
		' Declare Abstract Function _Dummy28 () As HRESULT
		' Declare Abstract Function Get_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Let_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function AddItem (Byval Text As Variant Ptr, Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_ArrowHeadLength () As Variant Ptr
		' Declare Abstract Function Let_ArrowHeadLength () As Variant Ptr
		' Declare Abstract Function Get_ArrowHeadStyle () As Variant Ptr
		' Declare Abstract Function Let_ArrowHeadStyle () As Variant Ptr
		' Declare Abstract Function Get_ArrowHeadWidth () As Variant Ptr
		' Declare Abstract Function Let_ArrowHeadWidth () As Variant Ptr
		' Declare Abstract Function Get_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get_CancelButton () As VARIANT_BOOL
		' Declare Abstract Function Let_CancelButton () As VARIANT_BOOL
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get__Default () As Long
		' Declare Abstract Function Let__Default () As Long
		' Declare Abstract Function Get_DefaultButton () As VARIANT_BOOL
		' Declare Abstract Function Let_DefaultButton () As VARIANT_BOOL
		' Declare Abstract Function Get_DismissButton () As VARIANT_BOOL
		' Declare Abstract Function Let_DismissButton () As VARIANT_BOOL
		' Declare Abstract Function Get_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Let_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayVerticalScrollBar () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayVerticalScrollBar () As VARIANT_BOOL
		' Declare Abstract Function Get_DropDownLines () As Long
		' Declare Abstract Function Let_DropDownLines () As Long
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function _Dummy47 () As HRESULT
		' Declare Abstract Function Get_HelpButton () As VARIANT_BOOL
		' Declare Abstract Function Let_HelpButton () As VARIANT_BOOL
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Get_InputType () As Long
		' Declare Abstract Function Let_InputType () As Long
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_LargeChange () As Long
		' Declare Abstract Function Let_LargeChange () As Long
		' Declare Abstract Function Get_LinkedCell () As BSTR
		' Declare Abstract Function Let_LinkedCell () As BSTR
		' Declare Abstract Function _Dummy54 () As HRESULT
		' Declare Abstract Function List (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function _Dummy56 () As HRESULT
		' Declare Abstract Function Get_ListFillRange () As BSTR
		' Declare Abstract Function Let_ListFillRange () As BSTR
		' Declare Abstract Function Get_ListIndex () As Long
		' Declare Abstract Function Let_ListIndex () As Long
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Max () As Long
		' Declare Abstract Function Let_Max () As Long
		' Declare Abstract Function Get_Min () As Long
		' Declare Abstract Function Let_Min () As Long
		' Declare Abstract Function Get_MultiLine () As VARIANT_BOOL
		' Declare Abstract Function Let_MultiLine () As VARIANT_BOOL
		' Declare Abstract Function Get_MultiSelect () As VARIANT_BOOL
		' Declare Abstract Function Let_MultiSelect () As VARIANT_BOOL
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function Get_PhoneticAccelerator () As Variant Ptr
		' Declare Abstract Function Let_PhoneticAccelerator () As Variant Ptr
		' Declare Abstract Function RemoveAllItems () As Variant Ptr
		' Declare Abstract Function RemoveItem (Byval Index As Long, Byval Count As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Reshape (Byval Vertex As Long, Byval Insert As Variant Ptr, Byval Left As Variant Ptr, Byval Top As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_RoundedCorners () As VARIANT_BOOL
		' Declare Abstract Function Let_RoundedCorners () As VARIANT_BOOL
		' Declare Abstract Function Selected (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Get_SmallChange () As Long
		' Declare Abstract Function Let_SmallChange () As Long
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Ungroup () As IDispatch Ptr
		' Declare Abstract Function Get_Value () As Long
		' Declare Abstract Function Let_Value () As Long
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Vertices (Byval Index1 As Variant Ptr, Byval Index2 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function LinkCombo (Byval Link As Variant Ptr) As Variant Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'DrawingObjects_

	Type PivotCache_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BackgroundQuery () As VARIANT_BOOL
		' Declare Abstract Function Let_BackgroundQuery () As VARIANT_BOOL
		' Declare Abstract Function Get_Connection () As Variant Ptr
		' Declare Abstract Function Let_Connection () As Variant Ptr
		' Declare Abstract Function Get_EnableRefresh () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableRefresh () As VARIANT_BOOL
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_MemoryUsed () As Long
		' Declare Abstract Function Get_OptimizeCache () As VARIANT_BOOL
		' Declare Abstract Function Let_OptimizeCache () As VARIANT_BOOL
		' Declare Abstract Function Get_RecordCount () As Long
		' Declare Abstract Function Refresh () As HRESULT
		' Declare Abstract Function Get_RefreshDate () As Date_
		' Declare Abstract Function Get_RefreshName () As BSTR
		' Declare Abstract Function Get_RefreshOnFileOpen () As VARIANT_BOOL
		' Declare Abstract Function Let_RefreshOnFileOpen () As VARIANT_BOOL
		' Declare Abstract Function Get_Sql () As Variant Ptr
		' Declare Abstract Function Let_Sql () As Variant Ptr
		' Declare Abstract Function Get_SavePassword () As VARIANT_BOOL
		' Declare Abstract Function Let_SavePassword () As VARIANT_BOOL
		' Declare Abstract Function Get_SourceData () As Variant Ptr
		' Declare Abstract Function Let_SourceData () As Variant Ptr
		' Declare Abstract Function Get_CommandText () As Variant Ptr
		' Declare Abstract Function Let_CommandText () As Variant Ptr
		' Declare Abstract Function Get_CommandType () As XlCmdType
		' Declare Abstract Function Let_CommandType () As XlCmdType
		' Declare Abstract Function Get_QueryType () As XlQueryType
		' Declare Abstract Function Get_MaintainConnection () As VARIANT_BOOL
		' Declare Abstract Function Let_MaintainConnection () As VARIANT_BOOL
		' Declare Abstract Function Get_RefreshPeriod () As Long
		' Declare Abstract Function Let_RefreshPeriod () As Long
		' Declare Abstract Function Get_Recordset () As IDispatch Ptr
		' Declare Abstract Function Set_Recordset () As IDispatch Ptr
		' Declare Abstract Function ResetTimer () As HRESULT
		' Declare Abstract Function Get_LocalConnection () As Variant Ptr
		' Declare Abstract Function Let_LocalConnection () As Variant Ptr
		' Declare Abstract Function CreatePivotTable (Byval TableDestination As Variant Ptr, Byval TableName As Variant Ptr, Byval ReadData As Variant Ptr, Byval DefaultVersion As Variant Ptr) As PivotTable Ptr
		' Declare Abstract Function Get_UseLocalConnection () As VARIANT_BOOL
		' Declare Abstract Function Let_UseLocalConnection () As VARIANT_BOOL
		' Declare Abstract Function Get_ADOConnection () As IDispatch Ptr
		' Declare Abstract Function Get_IsConnected () As VARIANT_BOOL
		' Declare Abstract Function MakeConnection () As HRESULT
		' Declare Abstract Function Get_OLAP () As VARIANT_BOOL
		' Declare Abstract Function Get_SourceType () As XlPivotTableSourceType
		' Declare Abstract Function Get_MissingItemsLimit () As XlPivotTableMissingItems
		' Declare Abstract Function Let_MissingItemsLimit () As XlPivotTableMissingItems
		' Declare Abstract Function Get_SourceConnectionFile () As BSTR
		' Declare Abstract Function Let_SourceConnectionFile () As BSTR
		' Declare Abstract Function Get_SourceDataFile () As BSTR
		' Declare Abstract Function Get_RobustConnect () As XlRobustConnect
		' Declare Abstract Function Let_RobustConnect () As XlRobustConnect
		' Declare Abstract Function SaveAsODC (Byval ODCFileName As BSTR, Byval Description As Variant Ptr, Byval Keywords As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_WorkbookConnection () As WorkbookConnection Ptr
		' Declare Abstract Function Get_Version () As XlPivotTableVersionList
		' Declare Abstract Function Get_UpgradeOnRefresh () As VARIANT_BOOL
		' Declare Abstract Function Let_UpgradeOnRefresh () As VARIANT_BOOL
		' Declare Abstract Function CreatePivotChart (Byval ChartDestination As Variant Ptr, Byval XlChartType As Variant Ptr, Byval Left As Variant Ptr, Byval Top As Variant Ptr, Byval Width As Variant Ptr, Byval Height As Variant Ptr) As Shape Ptr
	End Type 'PivotCache_

	Type PivotCaches_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As PivotCache Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As PivotCache Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
		' Declare Abstract Function Add (Byval SourceType As XlPivotTableSourceType, Byval SourceData As Variant Ptr) As PivotCache Ptr
		' Declare Abstract Function Create (Byval SourceType As XlPivotTableSourceType, Byval SourceData As Variant Ptr, Byval Version As Variant Ptr) As PivotCache Ptr
	End Type 'PivotCaches_

	Type PivotFormula_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get__Default () As BSTR
		' Declare Abstract Function Let__Default () As BSTR
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_Value () As BSTR
		' Declare Abstract Function Let_Value () As BSTR
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Let_Index () As Long
		' Declare Abstract Function Get_StandardFormula () As BSTR
		' Declare Abstract Function Let_StandardFormula () As BSTR
	End Type 'PivotFormula_

	Type PivotFormulas_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function _Add (Byval Formula As BSTR) As PivotFormula Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As PivotFormula Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As PivotFormula Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
		' Declare Abstract Function Add (Byval Formula As BSTR, Byval UseStandardFormula As Variant Ptr) As PivotFormula Ptr
	End Type 'PivotFormulas_

	Type PivotTable_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function AddFields (Byval RowFields As Variant Ptr, Byval ColumnFields As Variant Ptr, Byval PageFields As Variant Ptr, Byval AddToTable As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_ColumnFields (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_ColumnGrand () As VARIANT_BOOL
		' Declare Abstract Function Let_ColumnGrand () As VARIANT_BOOL
		' Declare Abstract Function Get_ColumnRange () As Range Ptr
		' Declare Abstract Function ShowPages (Byval PageField As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_DataBodyRange () As Range Ptr
		' Declare Abstract Function Get_DataFields (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_DataLabelRange () As Range Ptr
		' Declare Abstract Function Get__Default () As BSTR
		' Declare Abstract Function Let__Default () As BSTR
		' Declare Abstract Function Get_HasAutoFormat () As VARIANT_BOOL
		' Declare Abstract Function Let_HasAutoFormat () As VARIANT_BOOL
		' Declare Abstract Function Get_HiddenFields (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_InnerDetail () As BSTR
		' Declare Abstract Function Let_InnerDetail () As BSTR
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_PageFields (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_PageRange () As Range Ptr
		' Declare Abstract Function Get_PageRangeCells () As Range Ptr
		' Declare Abstract Function PivotFields (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_RefreshDate () As Date_
		' Declare Abstract Function Get_RefreshName () As BSTR
		' Declare Abstract Function RefreshTable () As VARIANT_BOOL
		' Declare Abstract Function Get_RowFields (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_RowGrand () As VARIANT_BOOL
		' Declare Abstract Function Let_RowGrand () As VARIANT_BOOL
		' Declare Abstract Function Get_RowRange () As Range Ptr
		' Declare Abstract Function Get_SaveData () As VARIANT_BOOL
		' Declare Abstract Function Let_SaveData () As VARIANT_BOOL
		' Declare Abstract Function Get_SourceData () As Variant Ptr
		' Declare Abstract Function Let_SourceData () As Variant Ptr
		' Declare Abstract Function Get_TableRange1 () As Range Ptr
		' Declare Abstract Function Get_TableRange2 () As Range Ptr
		' Declare Abstract Function Get_Value () As BSTR
		' Declare Abstract Function Let_Value () As BSTR
		' Declare Abstract Function Get_VisibleFields (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_CacheIndex () As Long
		' Declare Abstract Function Let_CacheIndex () As Long
		' Declare Abstract Function CalculatedFields () As CalculatedFields Ptr
		' Declare Abstract Function Get_DisplayErrorString () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayErrorString () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayNullString () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayNullString () As VARIANT_BOOL
		' Declare Abstract Function Get_EnableDrilldown () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableDrilldown () As VARIANT_BOOL
		' Declare Abstract Function Get_EnableFieldDialog () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableFieldDialog () As VARIANT_BOOL
		' Declare Abstract Function Get_EnableWizard () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableWizard () As VARIANT_BOOL
		' Declare Abstract Function Get_ErrorString () As BSTR
		' Declare Abstract Function Let_ErrorString () As BSTR
		' Declare Abstract Function GetData (Byval Name As BSTR) As Double
		' Declare Abstract Function ListFormulas () As HRESULT
		' Declare Abstract Function Get_ManualUpdate () As VARIANT_BOOL
		' Declare Abstract Function Let_ManualUpdate () As VARIANT_BOOL
		' Declare Abstract Function Get_MergeLabels () As VARIANT_BOOL
		' Declare Abstract Function Let_MergeLabels () As VARIANT_BOOL
		' Declare Abstract Function Get_NullString () As BSTR
		' Declare Abstract Function Let_NullString () As BSTR
		' Declare Abstract Function PivotCache () As PivotCache Ptr
		' Declare Abstract Function Get_PivotFormulas () As PivotFormulas Ptr
		' Declare Abstract Function PivotTableWizard (Byval SourceType As Variant Ptr, Byval SourceData As Variant Ptr, Byval TableDestination As Variant Ptr, Byval TableName As Variant Ptr, Byval RowGrand As Variant Ptr, Byval ColumnGrand As Variant Ptr, Byval SaveData As Variant Ptr, Byval HasAutoFormat As Variant Ptr, Byval AutoPage As Variant Ptr, Byval Reserved As Variant Ptr, Byval BackgroundQuery As Variant Ptr, Byval OptimizeCache As Variant Ptr, Byval PageFieldOrder As Variant Ptr, Byval PageFieldWrapCount As Variant Ptr, Byval ReadData As Variant Ptr, Byval Connection As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_SubtotalHiddenPageItems () As VARIANT_BOOL
		' Declare Abstract Function Let_SubtotalHiddenPageItems () As VARIANT_BOOL
		' Declare Abstract Function Get_PageFieldOrder () As Long
		' Declare Abstract Function Let_PageFieldOrder () As Long
		' Declare Abstract Function Get_PageFieldStyle () As BSTR
		' Declare Abstract Function Let_PageFieldStyle () As BSTR
		' Declare Abstract Function Get_PageFieldWrapCount () As Long
		' Declare Abstract Function Let_PageFieldWrapCount () As Long
		' Declare Abstract Function Get_PreserveFormatting () As VARIANT_BOOL
		' Declare Abstract Function Let_PreserveFormatting () As VARIANT_BOOL
		' Declare Abstract Function _PivotSelect (Byval Name As BSTR, Byval Mode As XlPTSelectionMode) As HRESULT
		' Declare Abstract Function Get_PivotSelection () As BSTR
		' Declare Abstract Function Let_PivotSelection () As BSTR
		' Declare Abstract Function Get_SelectionMode () As XlPTSelectionMode
		' Declare Abstract Function Let_SelectionMode () As XlPTSelectionMode
		' Declare Abstract Function Get_TableStyle () As BSTR
		' Declare Abstract Function Let_TableStyle () As BSTR
		' Declare Abstract Function Get_Tag () As BSTR
		' Declare Abstract Function Let_Tag () As BSTR
		' Declare Abstract Function Update () As HRESULT
		' Declare Abstract Function Get_VacatedStyle () As BSTR
		' Declare Abstract Function Let_VacatedStyle () As BSTR
		' Declare Abstract Function Format (Byval Format_v As XlPivotFormatType) As HRESULT
		' Declare Abstract Function Get_PrintTitles () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintTitles () As VARIANT_BOOL
		' Declare Abstract Function Get_CubeFields () As CubeFields Ptr
		' Declare Abstract Function Get_GrandTotalName () As BSTR
		' Declare Abstract Function Let_GrandTotalName () As BSTR
		' Declare Abstract Function Get_SmallGrid () As VARIANT_BOOL
		' Declare Abstract Function Let_SmallGrid () As VARIANT_BOOL
		' Declare Abstract Function Get_RepeatItemsOnEachPrintedPage () As VARIANT_BOOL
		' Declare Abstract Function Let_RepeatItemsOnEachPrintedPage () As VARIANT_BOOL
		' Declare Abstract Function Get_TotalsAnnotation () As VARIANT_BOOL
		' Declare Abstract Function Let_TotalsAnnotation () As VARIANT_BOOL
		' Declare Abstract Function PivotSelect (Byval Name As BSTR, Byval Mode As XlPTSelectionMode, Byval UseStandardName As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_PivotSelectionStandard () As BSTR
		' Declare Abstract Function Let_PivotSelectionStandard () As BSTR
		' Declare Abstract Function GetPivotData (Byval DataField As Variant Ptr, Byval Field1 As Variant Ptr, Byval Item1 As Variant Ptr, Byval Field2 As Variant Ptr, Byval Item2 As Variant Ptr, Byval Field3 As Variant Ptr, Byval Item3 As Variant Ptr, Byval Field4 As Variant Ptr, Byval Item4 As Variant Ptr, Byval Field5 As Variant Ptr, Byval Item5 As Variant Ptr, Byval Field6 As Variant Ptr, Byval Item6 As Variant Ptr, Byval Field7 As Variant Ptr, Byval Item7 As Variant Ptr, Byval Field8 As Variant Ptr, Byval Item8 As Variant Ptr, Byval Field9 As Variant Ptr, Byval Item9 As Variant Ptr, Byval Field10 As Variant Ptr, Byval Item10 As Variant Ptr, Byval Field11 As Variant Ptr, Byval Item11 As Variant Ptr, Byval Field12 As Variant Ptr, Byval Item12 As Variant Ptr, Byval Field13 As Variant Ptr, Byval Item13 As Variant Ptr, Byval Field14 As Variant Ptr, Byval Item14 As Variant Ptr) As Range Ptr
		' Declare Abstract Function Get_DataPivotField () As PivotField Ptr
		' Declare Abstract Function Get_EnableDataValueEditing () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableDataValueEditing () As VARIANT_BOOL
		' Declare Abstract Function AddDataField (Byval Field As IDispatch Ptr, Byval Caption As Variant Ptr, Byval Function_v As Variant Ptr) As PivotField Ptr
		' Declare Abstract Function Get_MDX () As BSTR
		' Declare Abstract Function Get_ViewCalculatedMembers () As VARIANT_BOOL
		' Declare Abstract Function Let_ViewCalculatedMembers () As VARIANT_BOOL
		' Declare Abstract Function Get_CalculatedMembers () As CalculatedMembers Ptr
		' Declare Abstract Function Get_DisplayImmediateItems () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayImmediateItems () As VARIANT_BOOL
		' Declare Abstract Function Dummy15 (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_EnableFieldList () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableFieldList () As VARIANT_BOOL
		' Declare Abstract Function Get_VisualTotals () As VARIANT_BOOL
		' Declare Abstract Function Let_VisualTotals () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowPageMultipleItemLabel () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowPageMultipleItemLabel () As VARIANT_BOOL
		' Declare Abstract Function Get_Version () As XlPivotTableVersionList
		' Declare Abstract Function CreateCubeFile (Byval File As BSTR, Byval Measures As Variant Ptr, Byval Levels As Variant Ptr, Byval Members As Variant Ptr, Byval Properties As Variant Ptr) As BSTR
		' Declare Abstract Function Get_DisplayEmptyRow () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayEmptyRow () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayEmptyColumn () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayEmptyColumn () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowCellBackgroundFromOLAP () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowCellBackgroundFromOLAP () As VARIANT_BOOL
		' Declare Abstract Function Get_PivotColumnAxis () As PivotAxis Ptr
		' Declare Abstract Function Get_PivotRowAxis () As PivotAxis Ptr
		' Declare Abstract Function Get_ShowDrillIndicators () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowDrillIndicators () As VARIANT_BOOL
		' Declare Abstract Function Get_PrintDrillIndicators () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintDrillIndicators () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayMemberPropertyTooltips () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayMemberPropertyTooltips () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayContextTooltips () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayContextTooltips () As VARIANT_BOOL
		' Declare Abstract Function ClearTable () As HRESULT
		' Declare Abstract Function Get_CompactRowIndent () As Long
		' Declare Abstract Function Let_CompactRowIndent () As Long
		' Declare Abstract Function Get_LayoutRowDefault () As XlLayoutRowType
		' Declare Abstract Function Let_LayoutRowDefault () As XlLayoutRowType
		' Declare Abstract Function Get_DisplayFieldCaptions () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayFieldCaptions () As VARIANT_BOOL
		' Declare Abstract Function RowAxisLayout (Byval RowLayout As XlLayoutRowType) As HRESULT
		' Declare Abstract Function SubtotalLocation (Byval Location As XlSubtototalLocationType) As HRESULT
		' Declare Abstract Function Get_ActiveFilters () As PivotFilters Ptr
		' Declare Abstract Function Get_InGridDropZones () As VARIANT_BOOL
		' Declare Abstract Function Let_InGridDropZones () As VARIANT_BOOL
		' Declare Abstract Function ClearAllFilters () As HRESULT
		' Declare Abstract Function Get_TableStyle2 () As Variant Ptr
		' Declare Abstract Function Let_TableStyle2 () As Variant Ptr
		' Declare Abstract Function Get_ShowTableStyleLastColumn () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowTableStyleLastColumn () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowTableStyleRowStripes () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowTableStyleRowStripes () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowTableStyleColumnStripes () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowTableStyleColumnStripes () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowTableStyleRowHeaders () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowTableStyleRowHeaders () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowTableStyleColumnHeaders () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowTableStyleColumnHeaders () As VARIANT_BOOL
		' Declare Abstract Function ConvertToFormulas (Byval ConvertFilters As VARIANT_BOOL) As HRESULT
		' Declare Abstract Function Get_AllowMultipleFilters () As VARIANT_BOOL
		' Declare Abstract Function Let_AllowMultipleFilters () As VARIANT_BOOL
		' Declare Abstract Function Get_CompactLayoutRowHeader () As BSTR
		' Declare Abstract Function Let_CompactLayoutRowHeader () As BSTR
		' Declare Abstract Function Get_CompactLayoutColumnHeader () As BSTR
		' Declare Abstract Function Let_CompactLayoutColumnHeader () As BSTR
		' Declare Abstract Function Get_FieldListSortAscending () As VARIANT_BOOL
		' Declare Abstract Function Let_FieldListSortAscending () As VARIANT_BOOL
		' Declare Abstract Function Get_SortUsingCustomLists () As VARIANT_BOOL
		' Declare Abstract Function Let_SortUsingCustomLists () As VARIANT_BOOL
		' Declare Abstract Function ChangeConnection (Byval conn As WorkbookConnection Ptr) As HRESULT
		' Declare Abstract Function ChangePivotCache (Byval PivotCache_v As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_Location () As BSTR
		' Declare Abstract Function Let_Location () As BSTR
		' Declare Abstract Function Get_EnableWriteback () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableWriteback () As VARIANT_BOOL
		' Declare Abstract Function Get_Allocation () As XlAllocation
		' Declare Abstract Function Let_Allocation () As XlAllocation
		' Declare Abstract Function Get_AllocationValue () As XlAllocationValue
		' Declare Abstract Function Let_AllocationValue () As XlAllocationValue
		' Declare Abstract Function Get_AllocationMethod () As XlAllocationMethod
		' Declare Abstract Function Let_AllocationMethod () As XlAllocationMethod
		' Declare Abstract Function Get_AllocationWeightExpression () As BSTR
		' Declare Abstract Function Let_AllocationWeightExpression () As BSTR
		' Declare Abstract Function AllocateChanges () As HRESULT
		' Declare Abstract Function CommitChanges () As HRESULT
		' Declare Abstract Function DiscardChanges () As HRESULT
		' Declare Abstract Function RefreshDataSourceValues () As HRESULT
		' Declare Abstract Function RepeatAllLabels (Byval Repeat As XlPivotFieldRepeatLabels) As HRESULT
		' Declare Abstract Function Get_ChangeList () As PivotTableChangeList Ptr
		' Declare Abstract Function Get_Slicers () As Slicers Ptr
		' Declare Abstract Function Get_AlternativeText () As BSTR
		' Declare Abstract Function Let_AlternativeText () As BSTR
		' Declare Abstract Function Get_Summary () As BSTR
		' Declare Abstract Function Let_Summary () As BSTR
		' Declare Abstract Function Get_VisualTotalsForSets () As VARIANT_BOOL
		' Declare Abstract Function Let_VisualTotalsForSets () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowValuesRow () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowValuesRow () As VARIANT_BOOL
		' Declare Abstract Function Get_CalculatedMembersInFilters () As VARIANT_BOOL
		' Declare Abstract Function Let_CalculatedMembersInFilters () As VARIANT_BOOL
		' Declare Abstract Function PivotValueCell (Byval rowline As Variant Ptr, Byval columnline As Variant Ptr) As PivotValueCell Ptr
		' Declare Abstract Function Get_Hidden () As VARIANT_BOOL
		' Declare Abstract Function Get_PivotChart () As Shape Ptr
		' Declare Abstract Function DrillDown (Byval PivotItem As PivotItem Ptr, Byval PivotLine As Variant Ptr) As HRESULT
		' Declare Abstract Function DrillUp (Byval PivotItem As PivotItem Ptr, Byval PivotLine As Variant Ptr, Byval LevelUniqueName As Variant Ptr) As HRESULT
		' Declare Abstract Function DrillTo (Byval PivotItem As PivotItem Ptr, Byval CubeField As CubeField Ptr, Byval PivotLine As Variant Ptr) As HRESULT
		' Declare Abstract Function Dummy2 (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr) As Variant Ptr
	End Type 'PivotTable_

	Type PivotTables_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As PivotTable Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
		' Declare Abstract Function Add (Byval PivotCache As PivotCache Ptr, Byval TableDestination As Variant Ptr, Byval TableName As Variant Ptr, Byval ReadData As Variant Ptr, Byval DefaultVersion As Variant Ptr) As PivotTable Ptr
	End Type 'PivotTables_

	Type PivotField_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Calculation () As XlPivotFieldCalculation
		' Declare Abstract Function Let_Calculation () As XlPivotFieldCalculation
		' Declare Abstract Function Get_ChildField () As PivotField Ptr
		' Declare Abstract Function Get_ChildItems (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_CurrentPage () As Variant Ptr
		' Declare Abstract Function Let_CurrentPage () As Variant Ptr
		' Declare Abstract Function Get_DataRange () As Range Ptr
		' Declare Abstract Function Get_DataType () As XlPivotFieldDataType
		' Declare Abstract Function Get__Default () As BSTR
		' Declare Abstract Function Let__Default () As BSTR
		' Declare Abstract Function Get_Function () As XlConsolidationFunction
		' Declare Abstract Function Let_Function () As XlConsolidationFunction
		' Declare Abstract Function Get_GroupLevel () As Variant Ptr
		' Declare Abstract Function Get_HiddenItems (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_LabelRange () As Range Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_NumberFormat () As BSTR
		' Declare Abstract Function Let_NumberFormat () As BSTR
		' Declare Abstract Function Get_Orientation () As XlPivotFieldOrientation
		' Declare Abstract Function Let_Orientation () As XlPivotFieldOrientation
		' Declare Abstract Function Get_ShowAllItems () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowAllItems () As VARIANT_BOOL
		' Declare Abstract Function Get_ParentField () As PivotField Ptr
		' Declare Abstract Function Get_ParentItems (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function PivotItems (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Position () As Variant Ptr
		' Declare Abstract Function Let_Position () As Variant Ptr
		' Declare Abstract Function Get_SourceName () As BSTR
		' Declare Abstract Function Get_Subtotals (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Let_Subtotals (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_BaseField () As Variant Ptr
		' Declare Abstract Function Let_BaseField () As Variant Ptr
		' Declare Abstract Function Get_BaseItem () As Variant Ptr
		' Declare Abstract Function Let_BaseItem () As Variant Ptr
		' Declare Abstract Function Get_TotalLevels () As Variant Ptr
		' Declare Abstract Function Get_Value () As BSTR
		' Declare Abstract Function Let_Value () As BSTR
		' Declare Abstract Function Get_VisibleItems (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function CalculatedItems () As CalculatedItems Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get_DragToColumn () As VARIANT_BOOL
		' Declare Abstract Function Let_DragToColumn () As VARIANT_BOOL
		' Declare Abstract Function Get_DragToHide () As VARIANT_BOOL
		' Declare Abstract Function Let_DragToHide () As VARIANT_BOOL
		' Declare Abstract Function Get_DragToPage () As VARIANT_BOOL
		' Declare Abstract Function Let_DragToPage () As VARIANT_BOOL
		' Declare Abstract Function Get_DragToRow () As VARIANT_BOOL
		' Declare Abstract Function Let_DragToRow () As VARIANT_BOOL
		' Declare Abstract Function Get_DragToData () As VARIANT_BOOL
		' Declare Abstract Function Let_DragToData () As VARIANT_BOOL
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_IsCalculated () As VARIANT_BOOL
		' Declare Abstract Function Get_MemoryUsed () As Long
		' Declare Abstract Function Get_ServerBased () As VARIANT_BOOL
		' Declare Abstract Function Let_ServerBased () As VARIANT_BOOL
		' Declare Abstract Function _AutoSort (Byval Order As Long, Byval Field As BSTR) As HRESULT
		' Declare Abstract Function AutoShow (Byval Type_v As Long, Byval Range As Long, Byval Count As Long, Byval Field As BSTR) As HRESULT
		' Declare Abstract Function Get_AutoSortOrder () As Long
		' Declare Abstract Function Get_AutoSortField () As BSTR
		' Declare Abstract Function Get_AutoShowType () As Long
		' Declare Abstract Function Get_AutoShowRange () As Long
		' Declare Abstract Function Get_AutoShowCount () As Long
		' Declare Abstract Function Get_AutoShowField () As BSTR
		' Declare Abstract Function Get_LayoutBlankLine () As VARIANT_BOOL
		' Declare Abstract Function Let_LayoutBlankLine () As VARIANT_BOOL
		' Declare Abstract Function Get_LayoutSubtotalLocation () As XlSubtototalLocationType
		' Declare Abstract Function Let_LayoutSubtotalLocation () As XlSubtototalLocationType
		' Declare Abstract Function Get_LayoutPageBreak () As VARIANT_BOOL
		' Declare Abstract Function Let_LayoutPageBreak () As VARIANT_BOOL
		' Declare Abstract Function Get_LayoutForm () As XlLayoutFormType
		' Declare Abstract Function Let_LayoutForm () As XlLayoutFormType
		' Declare Abstract Function Get_SubtotalName () As BSTR
		' Declare Abstract Function Let_SubtotalName () As BSTR
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_DrilledDown () As VARIANT_BOOL
		' Declare Abstract Function Let_DrilledDown () As VARIANT_BOOL
		' Declare Abstract Function Get_CubeField () As CubeField Ptr
		' Declare Abstract Function Get_CurrentPageName () As BSTR
		' Declare Abstract Function Let_CurrentPageName () As BSTR
		' Declare Abstract Function Get_StandardFormula () As BSTR
		' Declare Abstract Function Let_StandardFormula () As BSTR
		' Declare Abstract Function Get_HiddenItemsList () As Variant Ptr
		' Declare Abstract Function Let_HiddenItemsList () As Variant Ptr
		' Declare Abstract Function Get_DatabaseSort () As VARIANT_BOOL
		' Declare Abstract Function Let_DatabaseSort () As VARIANT_BOOL
		' Declare Abstract Function Get_IsMemberProperty () As VARIANT_BOOL
		' Declare Abstract Function Get_PropertyParentField () As PivotField Ptr
		' Declare Abstract Function Get_PropertyOrder () As Long
		' Declare Abstract Function Let_PropertyOrder () As Long
		' Declare Abstract Function Get_EnableItemSelection () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableItemSelection () As VARIANT_BOOL
		' Declare Abstract Function Get_CurrentPageList () As Variant Ptr
		' Declare Abstract Function Let_CurrentPageList () As Variant Ptr
		' Declare Abstract Function AddPageItem (Byval Item As BSTR, Byval ClearList As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_Hidden () As VARIANT_BOOL
		' Declare Abstract Function Let_Hidden () As VARIANT_BOOL
		' Declare Abstract Function DrillTo (Byval Field As BSTR) As HRESULT
		' Declare Abstract Function Get_UseMemberPropertyAsCaption () As VARIANT_BOOL
		' Declare Abstract Function Let_UseMemberPropertyAsCaption () As VARIANT_BOOL
		' Declare Abstract Function Get_MemberPropertyCaption () As BSTR
		' Declare Abstract Function Let_MemberPropertyCaption () As BSTR
		' Declare Abstract Function Get_DisplayAsTooltip () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayAsTooltip () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayInReport () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayInReport () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayAsCaption () As VARIANT_BOOL
		' Declare Abstract Function Get_LayoutCompactRow () As VARIANT_BOOL
		' Declare Abstract Function Let_LayoutCompactRow () As VARIANT_BOOL
		' Declare Abstract Function Get_IncludeNewItemsInFilter () As VARIANT_BOOL
		' Declare Abstract Function Let_IncludeNewItemsInFilter () As VARIANT_BOOL
		' Declare Abstract Function Get_VisibleItemsList () As Variant Ptr
		' Declare Abstract Function Let_VisibleItemsList () As Variant Ptr
		' Declare Abstract Function Get_PivotFilters () As PivotFilters Ptr
		' Declare Abstract Function Get_AutoSortPivotLine () As PivotLine Ptr
		' Declare Abstract Function Get_AutoSortCustomSubtotal () As Long
		' Declare Abstract Function Get_ShowingInAxis () As VARIANT_BOOL
		' Declare Abstract Function Get_EnableMultiplePageItems () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableMultiplePageItems () As VARIANT_BOOL
		' Declare Abstract Function Get_AllItemsVisible () As VARIANT_BOOL
		' Declare Abstract Function ClearManualFilter () As HRESULT
		' Declare Abstract Function ClearAllFilters () As HRESULT
		' Declare Abstract Function ClearValueFilters () As HRESULT
		' Declare Abstract Function ClearLabelFilters () As HRESULT
		' Declare Abstract Function AutoSort (Byval Order As Long, Byval Field As BSTR, Byval PivotLine As Variant Ptr, Byval CustomSubtotal As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_SourceCaption () As BSTR
		' Declare Abstract Function Get_ShowDetail () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowDetail () As VARIANT_BOOL
		' Declare Abstract Function Get_RepeatLabels () As VARIANT_BOOL
		' Declare Abstract Function Let_RepeatLabels () As VARIANT_BOOL
		' Declare Abstract Function AutoGroup () As HRESULT
	End Type 'PivotField_

	Type PivotFields_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As PivotTable Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'PivotFields_

	Type CalculatedFields_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function _Add (Byval Name As BSTR, Byval Formula As BSTR) As PivotField Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As PivotField Ptr
		' Declare Abstract Function Get__Default (Byval Field As Variant Ptr) As PivotField Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
		' Declare Abstract Function Add (Byval Name As BSTR, Byval Formula As BSTR, Byval UseStandardFormula As Variant Ptr) As PivotField Ptr
	End Type 'CalculatedFields_

	Type PivotItem_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As PivotField Ptr
		' Declare Abstract Function Get_ChildItems (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_DataRange () As Range Ptr
		' Declare Abstract Function Get__Default () As BSTR
		' Declare Abstract Function Let__Default () As BSTR
		' Declare Abstract Function Get_LabelRange () As Range Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_ParentItem () As PivotItem Ptr
		' Declare Abstract Function Get_ParentShowDetail () As VARIANT_BOOL
		' Declare Abstract Function Get_Position () As Long
		' Declare Abstract Function Let_Position () As Long
		' Declare Abstract Function Get_ShowDetail () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowDetail () As VARIANT_BOOL
		' Declare Abstract Function Get_SourceName () As Variant Ptr
		' Declare Abstract Function Get_Value () As BSTR
		' Declare Abstract Function Let_Value () As BSTR
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get_IsCalculated () As VARIANT_BOOL
		' Declare Abstract Function Get_RecordCount () As Long
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_DrilledDown () As VARIANT_BOOL
		' Declare Abstract Function Let_DrilledDown () As VARIANT_BOOL
		' Declare Abstract Function Get_StandardFormula () As BSTR
		' Declare Abstract Function Let_StandardFormula () As BSTR
		' Declare Abstract Function Get_SourceNameStandard () As BSTR
		' Declare Abstract Function DrillTo (Byval Field As BSTR) As HRESULT
	End Type 'PivotItem_

	Type PivotItems_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As PivotField Ptr
		' Declare Abstract Function Add (Byval Name As BSTR) As HRESULT
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'PivotItems_

	Type CalculatedItems_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function _Add (Byval Name As BSTR, Byval Formula As BSTR) As PivotItem Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As PivotItem Ptr
		' Declare Abstract Function Get__Default (Byval Field As Variant Ptr) As PivotItem Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
		' Declare Abstract Function Add (Byval Name As BSTR, Byval Formula As BSTR, Byval UseStandardFormula As Variant Ptr) As PivotItem Ptr
	End Type 'CalculatedItems_

	Type Characters_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Insert (Byval String_v As BSTR) As Variant Ptr
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_PhoneticCharacters () As BSTR
		' Declare Abstract Function Let_PhoneticCharacters () As BSTR
	End Type 'Characters_

	Type Dialogs_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As XlBuiltInDialog) As Dialog Ptr
		' Declare Abstract Function Get__Default (Byval Index As XlBuiltInDialog) As Dialog Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'Dialogs_

	Type Dialog_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Show (Byval Arg1 As Variant Ptr, Byval Arg2 As Variant Ptr, Byval Arg3 As Variant Ptr, Byval Arg4 As Variant Ptr, Byval Arg5 As Variant Ptr, Byval Arg6 As Variant Ptr, Byval Arg7 As Variant Ptr, Byval Arg8 As Variant Ptr, Byval Arg9 As Variant Ptr, Byval Arg10 As Variant Ptr, Byval Arg11 As Variant Ptr, Byval Arg12 As Variant Ptr, Byval Arg13 As Variant Ptr, Byval Arg14 As Variant Ptr, Byval Arg15 As Variant Ptr, Byval Arg16 As Variant Ptr, Byval Arg17 As Variant Ptr, Byval Arg18 As Variant Ptr, Byval Arg19 As Variant Ptr, Byval Arg20 As Variant Ptr, Byval Arg21 As Variant Ptr, Byval Arg22 As Variant Ptr, Byval Arg23 As Variant Ptr, Byval Arg24 As Variant Ptr, Byval Arg25 As Variant Ptr, Byval Arg26 As Variant Ptr, Byval Arg27 As Variant Ptr, Byval Arg28 As Variant Ptr, Byval Arg29 As Variant Ptr, Byval Arg30 As Variant Ptr) As VARIANT_BOOL
	End Type 'Dialog_

	Type SoundNote_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Import_ (Byval Filename As BSTR) As Variant Ptr
		' Declare Abstract Function Play () As Variant Ptr
		' Declare Abstract Function Record () As Variant Ptr
	End Type 'SoundNote_

	Type Button_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Let_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_Accelerator () As Variant Ptr
		' Declare Abstract Function Let_Accelerator () As Variant Ptr
		' Declare Abstract Function Get_CancelButton () As VARIANT_BOOL
		' Declare Abstract Function Let_CancelButton () As VARIANT_BOOL
		' Declare Abstract Function Get_DefaultButton () As VARIANT_BOOL
		' Declare Abstract Function Let_DefaultButton () As VARIANT_BOOL
		' Declare Abstract Function Get_DismissButton () As VARIANT_BOOL
		' Declare Abstract Function Let_DismissButton () As VARIANT_BOOL
		' Declare Abstract Function Get_HelpButton () As VARIANT_BOOL
		' Declare Abstract Function Let_HelpButton () As VARIANT_BOOL
		' Declare Abstract Function Get_PhoneticAccelerator () As Variant Ptr
		' Declare Abstract Function Let_PhoneticAccelerator () As Variant Ptr
	End Type 'Button_

	Type Buttons_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Let_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_Accelerator () As Variant Ptr
		' Declare Abstract Function Let_Accelerator () As Variant Ptr
		' Declare Abstract Function Get_CancelButton () As VARIANT_BOOL
		' Declare Abstract Function Let_CancelButton () As VARIANT_BOOL
		' Declare Abstract Function Get_DefaultButton () As VARIANT_BOOL
		' Declare Abstract Function Let_DefaultButton () As VARIANT_BOOL
		' Declare Abstract Function Get_DismissButton () As VARIANT_BOOL
		' Declare Abstract Function Let_DismissButton () As VARIANT_BOOL
		' Declare Abstract Function Get_HelpButton () As VARIANT_BOOL
		' Declare Abstract Function Let_HelpButton () As VARIANT_BOOL
		' Declare Abstract Function Get_PhoneticAccelerator () As Variant Ptr
		' Declare Abstract Function Let_PhoneticAccelerator () As Variant Ptr
		' Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double) As Button Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'Buttons_

	Type CheckBox_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_Accelerator () As Variant Ptr
		' Declare Abstract Function Let_Accelerator () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get__Default () As Long
		' Declare Abstract Function Let__Default () As Long
		' Declare Abstract Function Get_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Let_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_LinkedCell () As BSTR
		' Declare Abstract Function Let_LinkedCell () As BSTR
		' Declare Abstract Function Get_PhoneticAccelerator () As Variant Ptr
		' Declare Abstract Function Let_PhoneticAccelerator () As Variant Ptr
		' Declare Abstract Function Get_Value () As Variant Ptr
		' Declare Abstract Function Let_Value () As Variant Ptr
	End Type 'CheckBox_

	Type CheckBoxes_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_Accelerator () As Variant Ptr
		' Declare Abstract Function Let_Accelerator () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get__Default () As Long
		' Declare Abstract Function Let__Default () As Long
		' Declare Abstract Function Get_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Let_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_LinkedCell () As BSTR
		' Declare Abstract Function Let_LinkedCell () As BSTR
		' Declare Abstract Function Get_PhoneticAccelerator () As Variant Ptr
		' Declare Abstract Function Let_PhoneticAccelerator () As Variant Ptr
		' Declare Abstract Function Get_Value () As Variant Ptr
		' Declare Abstract Function Let_Value () As Variant Ptr
		' Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double) As CheckBox Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'CheckBoxes_

	Type OptionButton_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_Accelerator () As Variant Ptr
		' Declare Abstract Function Let_Accelerator () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get__Default () As Long
		' Declare Abstract Function Let__Default () As Long
		' Declare Abstract Function Get_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Let_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_LinkedCell () As BSTR
		' Declare Abstract Function Let_LinkedCell () As BSTR
		' Declare Abstract Function Get_PhoneticAccelerator () As Variant Ptr
		' Declare Abstract Function Let_PhoneticAccelerator () As Variant Ptr
		' Declare Abstract Function Get_Value () As Variant Ptr
		' Declare Abstract Function Let_Value () As Variant Ptr
		' Declare Abstract Function Get_GroupBox () As GroupBox Ptr
	End Type 'OptionButton_

	Type OptionButtons_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_Accelerator () As Variant Ptr
		' Declare Abstract Function Let_Accelerator () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get__Default () As Long
		' Declare Abstract Function Let__Default () As Long
		' Declare Abstract Function Get_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Let_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_LinkedCell () As BSTR
		' Declare Abstract Function Let_LinkedCell () As BSTR
		' Declare Abstract Function Get_PhoneticAccelerator () As Variant Ptr
		' Declare Abstract Function Let_PhoneticAccelerator () As Variant Ptr
		' Declare Abstract Function Get_Value () As Variant Ptr
		' Declare Abstract Function Let_Value () As Variant Ptr
		' Declare Abstract Function Get_GroupBox () As GroupBox Ptr
		' Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double) As OptionButton Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'OptionButtons_

	Type EditBox_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_DisplayVerticalScrollBar () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayVerticalScrollBar () As VARIANT_BOOL
		' Declare Abstract Function Get_InputType () As Long
		' Declare Abstract Function Let_InputType () As Long
		' Declare Abstract Function Get_LinkedObject () As BSTR
		' Declare Abstract Function Get_MultiLine () As VARIANT_BOOL
		' Declare Abstract Function Let_MultiLine () As VARIANT_BOOL
		' Declare Abstract Function Get_PasswordEdit () As VARIANT_BOOL
		' Declare Abstract Function Let_PasswordEdit () As VARIANT_BOOL
	End Type 'EditBox_

	Type EditBoxes_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_DisplayVerticalScrollBar () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayVerticalScrollBar () As VARIANT_BOOL
		' Declare Abstract Function Get_InputType () As Long
		' Declare Abstract Function Let_InputType () As Long
		' Declare Abstract Function _Dummy34 () As HRESULT
		' Declare Abstract Function Get_MultiLine () As VARIANT_BOOL
		' Declare Abstract Function Let_MultiLine () As VARIANT_BOOL
		' Declare Abstract Function Get_PasswordEdit () As VARIANT_BOOL
		' Declare Abstract Function Let_PasswordEdit () As VARIANT_BOOL
		' Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double) As EditBox Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'EditBoxes_

	Type ScrollBar_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get__Default () As Long
		' Declare Abstract Function Let__Default () As Long
		' Declare Abstract Function Get_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Let_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Get_LinkedCell () As BSTR
		' Declare Abstract Function Let_LinkedCell () As BSTR
		' Declare Abstract Function Get_Max () As Long
		' Declare Abstract Function Let_Max () As Long
		' Declare Abstract Function Get_Min () As Long
		' Declare Abstract Function Let_Min () As Long
		' Declare Abstract Function Get_SmallChange () As Long
		' Declare Abstract Function Let_SmallChange () As Long
		' Declare Abstract Function Get_Value () As Long
		' Declare Abstract Function Let_Value () As Long
		' Declare Abstract Function Get_LargeChange () As Long
		' Declare Abstract Function Let_LargeChange () As Long
	End Type 'ScrollBar_

	Type ScrollBars_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get__Default () As Long
		' Declare Abstract Function Let__Default () As Long
		' Declare Abstract Function Get_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Let_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Get_LinkedCell () As BSTR
		' Declare Abstract Function Let_LinkedCell () As BSTR
		' Declare Abstract Function Get_Max () As Long
		' Declare Abstract Function Let_Max () As Long
		' Declare Abstract Function Get_Min () As Long
		' Declare Abstract Function Let_Min () As Long
		' Declare Abstract Function Get_SmallChange () As Long
		' Declare Abstract Function Let_SmallChange () As Long
		' Declare Abstract Function Get_Value () As Long
		' Declare Abstract Function Let_Value () As Long
		' Declare Abstract Function Get_LargeChange () As Long
		' Declare Abstract Function Let_LargeChange () As Long
		' Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double) As ScrollBar Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'ScrollBars_

	Type ListBox_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function AddItem (Byval Text As Variant Ptr, Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Let_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Get__Default () As Long
		' Declare Abstract Function Let__Default () As Long
		' Declare Abstract Function Get_LinkedCell () As BSTR
		' Declare Abstract Function Let_LinkedCell () As BSTR
		' Declare Abstract Function Get_LinkedObject () As Variant Ptr
		' Declare Abstract Function Get_List (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Let_List (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_ListCount () As Long
		' Declare Abstract Function Get_ListFillRange () As BSTR
		' Declare Abstract Function Let_ListFillRange () As BSTR
		' Declare Abstract Function Get_ListIndex () As Long
		' Declare Abstract Function Let_ListIndex () As Long
		' Declare Abstract Function Get_MultiSelect () As Long
		' Declare Abstract Function Let_MultiSelect () As Long
		' Declare Abstract Function RemoveAllItems () As Variant Ptr
		' Declare Abstract Function RemoveItem (Byval Index As Long, Byval Count As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Selected (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Let_Selected (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Value () As Long
		' Declare Abstract Function Let_Value () As Long
	End Type 'ListBox_

	Type ListBoxes_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function AddItem (Byval Text As Variant Ptr, Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Let_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Get__Default () As Long
		' Declare Abstract Function Let__Default () As Long
		' Declare Abstract Function Get_LinkedCell () As BSTR
		' Declare Abstract Function Let_LinkedCell () As BSTR
		' Declare Abstract Function _Dummy31 () As HRESULT
		' Declare Abstract Function Get_List (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Let_List (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function _Dummy33 () As HRESULT
		' Declare Abstract Function Get_ListFillRange () As BSTR
		' Declare Abstract Function Let_ListFillRange () As BSTR
		' Declare Abstract Function Get_ListIndex () As Long
		' Declare Abstract Function Let_ListIndex () As Long
		' Declare Abstract Function Get_MultiSelect () As Long
		' Declare Abstract Function Let_MultiSelect () As Long
		' Declare Abstract Function RemoveAllItems () As Variant Ptr
		' Declare Abstract Function RemoveItem (Byval Index As Long, Byval Count As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Selected (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Let_Selected (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Value () As Long
		' Declare Abstract Function Let_Value () As Long
		' Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double) As ListBox Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'ListBoxes_

	Type GroupBox_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_Accelerator () As Variant Ptr
		' Declare Abstract Function Let_Accelerator () As Variant Ptr
		' Declare Abstract Function Get_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Let_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Get_PhoneticAccelerator () As Variant Ptr
		' Declare Abstract Function Let_PhoneticAccelerator () As Variant Ptr
	End Type 'GroupBox_

	Type GroupBoxes_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_Accelerator () As Variant Ptr
		' Declare Abstract Function Let_Accelerator () As Variant Ptr
		' Declare Abstract Function Get_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Let_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Get_PhoneticAccelerator () As Variant Ptr
		' Declare Abstract Function Let_PhoneticAccelerator () As Variant Ptr
		' Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double) As GroupBox Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'GroupBoxes_

	Type DropDown_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function AddItem (Byval Text As Variant Ptr, Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Let_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Get__Default () As Long
		' Declare Abstract Function Let__Default () As Long
		' Declare Abstract Function Get_LinkedCell () As BSTR
		' Declare Abstract Function Let_LinkedCell () As BSTR
		' Declare Abstract Function Get_LinkedObject () As Variant Ptr
		' Declare Abstract Function Get_List (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Let_List (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_ListCount () As Long
		' Declare Abstract Function Get_ListFillRange () As BSTR
		' Declare Abstract Function Let_ListFillRange () As BSTR
		' Declare Abstract Function Get_ListIndex () As Long
		' Declare Abstract Function Let_ListIndex () As Long
		' Declare Abstract Function _Dummy36 () As HRESULT
		' Declare Abstract Function RemoveAllItems () As Variant Ptr
		' Declare Abstract Function RemoveItem (Byval Index As Long, Byval Count As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Selected (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Let_Selected (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Value () As Long
		' Declare Abstract Function Let_Value () As Long
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function Get_DropDownLines () As Long
		' Declare Abstract Function Let_DropDownLines () As Long
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
	End Type 'DropDown_

	Type DropDowns_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function AddItem (Byval Text As Variant Ptr, Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Let_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Get__Default () As Long
		' Declare Abstract Function Let__Default () As Long
		' Declare Abstract Function Get_LinkedCell () As BSTR
		' Declare Abstract Function Let_LinkedCell () As BSTR
		' Declare Abstract Function _Dummy31 () As HRESULT
		' Declare Abstract Function Get_List (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Let_List (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function _Dummy33 () As HRESULT
		' Declare Abstract Function Get_ListFillRange () As BSTR
		' Declare Abstract Function Let_ListFillRange () As BSTR
		' Declare Abstract Function Get_ListIndex () As Long
		' Declare Abstract Function Let_ListIndex () As Long
		' Declare Abstract Function _Dummy36 () As HRESULT
		' Declare Abstract Function RemoveAllItems () As Variant Ptr
		' Declare Abstract Function RemoveItem (Byval Index As Long, Byval Count As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Selected (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Let_Selected (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Value () As Long
		' Declare Abstract Function Let_Value () As Long
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function Get_DropDownLines () As Long
		' Declare Abstract Function Let_DropDownLines () As Long
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double, Byval Editable As Variant Ptr) As DropDown Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'DropDowns_

	Type Spinner_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get__Default () As Long
		' Declare Abstract Function Let__Default () As Long
		' Declare Abstract Function Get_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Let_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Get_LinkedCell () As BSTR
		' Declare Abstract Function Let_LinkedCell () As BSTR
		' Declare Abstract Function Get_Max () As Long
		' Declare Abstract Function Let_Max () As Long
		' Declare Abstract Function Get_Min () As Long
		' Declare Abstract Function Let_Min () As Long
		' Declare Abstract Function Get_SmallChange () As Long
		' Declare Abstract Function Let_SmallChange () As Long
		' Declare Abstract Function Get_Value () As Long
		' Declare Abstract Function Let_Value () As Long
	End Type 'Spinner_

	Type Spinners_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get__Default () As Long
		' Declare Abstract Function Let__Default () As Long
		' Declare Abstract Function Get_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Let_Display3DShading () As VARIANT_BOOL
		' Declare Abstract Function Get_LinkedCell () As BSTR
		' Declare Abstract Function Let_LinkedCell () As BSTR
		' Declare Abstract Function Get_Max () As Long
		' Declare Abstract Function Let_Max () As Long
		' Declare Abstract Function Get_Min () As Long
		' Declare Abstract Function Let_Min () As Long
		' Declare Abstract Function Get_SmallChange () As Long
		' Declare Abstract Function Let_SmallChange () As Long
		' Declare Abstract Function Get_Value () As Long
		' Declare Abstract Function Let_Value () As Long
		' Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double) As Spinner Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'Spinners_

	Type DialogFrame_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function _Dummy4 () As HRESULT
		' Declare Abstract Function _Dummy5 () As HRESULT
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function _Dummy7 () As HRESULT
		' Declare Abstract Function _Dummy8 () As HRESULT
		' Declare Abstract Function _Dummy9 () As HRESULT
		' Declare Abstract Function _Dummy10 () As HRESULT
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function _Dummy17 () As HRESULT
		' Declare Abstract Function _Dummy18 () As HRESULT
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function _Dummy20 () As HRESULT
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function _Dummy23 () As HRESULT
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function _Dummy25 () As HRESULT
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
	End Type 'DialogFrame_

	Type Label_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_Accelerator () As Variant Ptr
		' Declare Abstract Function Let_Accelerator () As Variant Ptr
		' Declare Abstract Function _Dummy33 () As HRESULT
		' Declare Abstract Function Get_PhoneticAccelerator () As Variant Ptr
		' Declare Abstract Function Let_PhoneticAccelerator () As Variant Ptr
	End Type 'Label_

	Type Labels_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_Accelerator () As Variant Ptr
		' Declare Abstract Function Let_Accelerator () As Variant Ptr
		' Declare Abstract Function _Dummy33 () As HRESULT
		' Declare Abstract Function Get_PhoneticAccelerator () As Variant Ptr
		' Declare Abstract Function Let_PhoneticAccelerator () As Variant Ptr
		' Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double) As Label Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'Labels_

	Type Panes_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Long) As Pane Ptr
		' Declare Abstract Function Get__Default (Byval Index As Long) As Pane Ptr
	End Type 'Panes_

	Type Pane_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Activate () As VARIANT_BOOL
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function LargeScroll (Byval Down As Variant Ptr, Byval Up As Variant Ptr, Byval ToRight As Variant Ptr, Byval ToLeft As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_ScrollColumn () As Long
		' Declare Abstract Function Let_ScrollColumn () As Long
		' Declare Abstract Function Get_ScrollRow () As Long
		' Declare Abstract Function Let_ScrollRow () As Long
		' Declare Abstract Function SmallScroll (Byval Down As Variant Ptr, Byval Up As Variant Ptr, Byval ToRight As Variant Ptr, Byval ToLeft As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_VisibleRange () As Range Ptr
		' Declare Abstract Function ScrollIntoView (Byval Left As Long, Byval Top As Long, Byval Width As Long, Byval Height As Long, Byval Start As Variant Ptr) As HRESULT
		' Declare Abstract Function PointsToScreenPixelsX (Byval Points As Long) As Long
		' Declare Abstract Function PointsToScreenPixelsY (Byval Points As Long) As Long
	End Type 'Pane_

	Type Scenarios_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Name As BSTR, Byval ChangingCells As Variant Ptr, Byval Values As Variant Ptr, Byval Comment As Variant Ptr, Byval Locked As Variant Ptr, Byval Hidden As Variant Ptr) As Scenario Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function CreateSummary (Byval ReportType As XlSummaryReportType, Byval ResultCells As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As Scenario Ptr
		' Declare Abstract Function Merge (Byval Source As Variant Ptr) As Variant Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'Scenarios_

	Type Scenario_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function ChangeScenario (Byval ChangingCells As Variant Ptr, Byval Values As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_ChangingCells () As Range Ptr
		' Declare Abstract Function Get_Comment () As BSTR
		' Declare Abstract Function Let_Comment () As BSTR
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_Hidden () As VARIANT_BOOL
		' Declare Abstract Function Let_Hidden () As VARIANT_BOOL
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Show () As Variant Ptr
		' Declare Abstract Function Get_Values (Byval Index As Variant Ptr) As Variant Ptr
	End Type 'Scenario_

	Type GroupObject_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function _Dummy27 () As HRESULT
		' Declare Abstract Function _Dummy28 () As HRESULT
		' Declare Abstract Function Get_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Let_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function _Dummy30 () As HRESULT
		' Declare Abstract Function Get_ArrowHeadLength () As Variant Ptr
		' Declare Abstract Function Let_ArrowHeadLength () As Variant Ptr
		' Declare Abstract Function Get_ArrowHeadStyle () As Variant Ptr
		' Declare Abstract Function Let_ArrowHeadStyle () As Variant Ptr
		' Declare Abstract Function Get_ArrowHeadWidth () As Variant Ptr
		' Declare Abstract Function Let_ArrowHeadWidth () As Variant Ptr
		' Declare Abstract Function Get_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function _Dummy36 () As HRESULT
		' Declare Abstract Function _Dummy37 () As HRESULT
		' Declare Abstract Function _Dummy38 () As HRESULT
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get__Default () As Long
		' Declare Abstract Function Let__Default () As Long
		' Declare Abstract Function _Dummy41 () As HRESULT
		' Declare Abstract Function _Dummy42 () As HRESULT
		' Declare Abstract Function _Dummy43 () As HRESULT
		' Declare Abstract Function _Dummy44 () As HRESULT
		' Declare Abstract Function _Dummy45 () As HRESULT
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function _Dummy47 () As HRESULT
		' Declare Abstract Function _Dummy48 () As HRESULT
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function _Dummy50 () As HRESULT
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function _Dummy52 () As HRESULT
		' Declare Abstract Function _Dummy53 () As HRESULT
		' Declare Abstract Function _Dummy54 () As HRESULT
		' Declare Abstract Function _Dummy55 () As HRESULT
		' Declare Abstract Function _Dummy56 () As HRESULT
		' Declare Abstract Function _Dummy57 () As HRESULT
		' Declare Abstract Function _Dummy58 () As HRESULT
		' Declare Abstract Function _Dummy59 () As HRESULT
		' Declare Abstract Function _Dummy60 () As HRESULT
		' Declare Abstract Function _Dummy61 () As HRESULT
		' Declare Abstract Function _Dummy62 () As HRESULT
		' Declare Abstract Function _Dummy63 () As HRESULT
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function _Dummy65 () As HRESULT
		' Declare Abstract Function _Dummy66 () As HRESULT
		' Declare Abstract Function _Dummy67 () As HRESULT
		' Declare Abstract Function _Dummy68 () As HRESULT
		' Declare Abstract Function Get_RoundedCorners () As VARIANT_BOOL
		' Declare Abstract Function Let_RoundedCorners () As VARIANT_BOOL
		' Declare Abstract Function _Dummy70 () As HRESULT
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function _Dummy72 () As HRESULT
		' Declare Abstract Function _Dummy73 () As HRESULT
		' Declare Abstract Function Ungroup () As IDispatch Ptr
		' Declare Abstract Function _Dummy75 () As HRESULT
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function _Dummy77 () As HRESULT
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
	End Type 'GroupObject_

	Type GroupObjects_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function _Dummy27 () As HRESULT
		' Declare Abstract Function _Dummy28 () As HRESULT
		' Declare Abstract Function Get_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Let_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function _Dummy30 () As HRESULT
		' Declare Abstract Function Get_ArrowHeadLength () As Variant Ptr
		' Declare Abstract Function Let_ArrowHeadLength () As Variant Ptr
		' Declare Abstract Function Get_ArrowHeadStyle () As Variant Ptr
		' Declare Abstract Function Let_ArrowHeadStyle () As Variant Ptr
		' Declare Abstract Function Get_ArrowHeadWidth () As Variant Ptr
		' Declare Abstract Function Let_ArrowHeadWidth () As Variant Ptr
		' Declare Abstract Function Get_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function _Dummy36 () As HRESULT
		' Declare Abstract Function _Dummy37 () As HRESULT
		' Declare Abstract Function _Dummy38 () As HRESULT
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get__Default () As Long
		' Declare Abstract Function Let__Default () As Long
		' Declare Abstract Function _Dummy41 () As HRESULT
		' Declare Abstract Function _Dummy42 () As HRESULT
		' Declare Abstract Function _Dummy43 () As HRESULT
		' Declare Abstract Function _Dummy44 () As HRESULT
		' Declare Abstract Function _Dummy45 () As HRESULT
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function _Dummy47 () As HRESULT
		' Declare Abstract Function _Dummy48 () As HRESULT
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function _Dummy50 () As HRESULT
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function _Dummy52 () As HRESULT
		' Declare Abstract Function _Dummy53 () As HRESULT
		' Declare Abstract Function _Dummy54 () As HRESULT
		' Declare Abstract Function _Dummy55 () As HRESULT
		' Declare Abstract Function _Dummy56 () As HRESULT
		' Declare Abstract Function _Dummy57 () As HRESULT
		' Declare Abstract Function _Dummy58 () As HRESULT
		' Declare Abstract Function _Dummy59 () As HRESULT
		' Declare Abstract Function _Dummy60 () As HRESULT
		' Declare Abstract Function _Dummy61 () As HRESULT
		' Declare Abstract Function _Dummy62 () As HRESULT
		' Declare Abstract Function _Dummy63 () As HRESULT
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function _Dummy65 () As HRESULT
		' Declare Abstract Function _Dummy66 () As HRESULT
		' Declare Abstract Function _Dummy67 () As HRESULT
		' Declare Abstract Function _Dummy68 () As HRESULT
		' Declare Abstract Function Get_RoundedCorners () As VARIANT_BOOL
		' Declare Abstract Function Let_RoundedCorners () As VARIANT_BOOL
		' Declare Abstract Function _Dummy70 () As HRESULT
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function _Dummy72 () As HRESULT
		' Declare Abstract Function _Dummy73 () As HRESULT
		' Declare Abstract Function Ungroup () As IDispatch Ptr
		' Declare Abstract Function _Dummy75 () As HRESULT
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function _Dummy77 () As HRESULT
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'GroupObjects_

	Type Line_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_ArrowHeadLength () As Variant Ptr
		' Declare Abstract Function Let_ArrowHeadLength () As Variant Ptr
		' Declare Abstract Function Get_ArrowHeadStyle () As Variant Ptr
		' Declare Abstract Function Let_ArrowHeadStyle () As Variant Ptr
		' Declare Abstract Function Get_ArrowHeadWidth () As Variant Ptr
		' Declare Abstract Function Let_ArrowHeadWidth () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
	End Type 'Line_

	Type Lines_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_ArrowHeadLength () As Variant Ptr
		' Declare Abstract Function Let_ArrowHeadLength () As Variant Ptr
		' Declare Abstract Function Get_ArrowHeadStyle () As Variant Ptr
		' Declare Abstract Function Let_ArrowHeadStyle () As Variant Ptr
		' Declare Abstract Function Get_ArrowHeadWidth () As Variant Ptr
		' Declare Abstract Function Let_ArrowHeadWidth () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Add (Byval X1 As Double, Byval Y1 As Double, Byval X2 As Double, Byval Y2 As Double) As Line Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'Lines_

	Type Rectangle_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Let_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Get_RoundedCorners () As VARIANT_BOOL
		' Declare Abstract Function Let_RoundedCorners () As VARIANT_BOOL
	End Type 'Rectangle_

	Type Rectangles_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Let_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Get_RoundedCorners () As VARIANT_BOOL
		' Declare Abstract Function Let_RoundedCorners () As VARIANT_BOOL
		' Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double) As Rectangle Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'Rectangles_

	Type Oval_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Let_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
	End Type 'Oval_

	Type Ovals_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Let_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double) As Oval Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'Ovals_

	Type Arc_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Let_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function _Dummy43 () As HRESULT
	End Type 'Arc_

	Type Arcs_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Let_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function _Dummy43 () As HRESULT
		' Declare Abstract Function Add (Byval X1 As Double, Byval Y1 As Double, Byval X2 As Double, Byval Y2 As Double) As Arc Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'Arcs_

	Type OLEObjectEvents_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function GotFocus () As HRESULT
		' Declare Abstract Function LostFocus () As HRESULT
	End Type 'OLEObjectEvents_

	Type _OLEObject_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Activate () As Variant Ptr
		' Declare Abstract Function Get_AutoLoad () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoLoad () As VARIANT_BOOL
		' Declare Abstract Function Get_AutoUpdate () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoUpdate () As VARIANT_BOOL
		' Declare Abstract Function Get_Object () As IDispatch Ptr
		' Declare Abstract Function Get_OLEType () As Variant Ptr
		' Declare Abstract Function Get_SourceName () As BSTR
		' Declare Abstract Function Let_SourceName () As BSTR
		' Declare Abstract Function Update () As Variant Ptr
		' Declare Abstract Function Verb (Byval Verb_v As XlOLEVerb) As Variant Ptr
		' Declare Abstract Function Get_LinkedCell () As BSTR
		' Declare Abstract Function Let_LinkedCell () As BSTR
		' Declare Abstract Function Get_ListFillRange () As BSTR
		' Declare Abstract Function Let_ListFillRange () As BSTR
		' Declare Abstract Function Get_progID () As BSTR
		' Declare Abstract Function Get_AltHTML () As BSTR
		' Declare Abstract Function Let_AltHTML () As BSTR
	End Type '_OLEObject_

	Type OLEObjects_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function _Dummy30 () As HRESULT
		' Declare Abstract Function Get_AutoLoad () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoLoad () As VARIANT_BOOL
		' Declare Abstract Function _Dummy32 () As HRESULT
		' Declare Abstract Function _Dummy33 () As HRESULT
		' Declare Abstract Function _Dummy34 () As HRESULT
		' Declare Abstract Function Get_SourceName () As BSTR
		' Declare Abstract Function Let_SourceName () As BSTR
		' Declare Abstract Function _Dummy36 () As HRESULT
		' Declare Abstract Function _Dummy37 () As HRESULT
		' Declare Abstract Function _Dummy38 () As HRESULT
		' Declare Abstract Function _Dummy39 () As HRESULT
		' Declare Abstract Function _Dummy40 () As HRESULT
		' Declare Abstract Function _Dummy41 () As HRESULT
		' Declare Abstract Function Add (Byval ClassType As Variant Ptr, Byval Filename As Variant Ptr, Byval Link As Variant Ptr, Byval DisplayAsIcon As Variant Ptr, Byval IconFileName As Variant Ptr, Byval IconIndex As Variant Ptr, Byval IconLabel As Variant Ptr, Byval Left As Variant Ptr, Byval Top As Variant Ptr, Byval Width As Variant Ptr, Byval Height As Variant Ptr) As OLEObject Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'OLEObjects_

	Type TextBox_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Let_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_RoundedCorners () As VARIANT_BOOL
		' Declare Abstract Function Let_RoundedCorners () As VARIANT_BOOL
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
	End Type 'TextBox_

	Type TextBoxes_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Let_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_RoundedCorners () As VARIANT_BOOL
		' Declare Abstract Function Let_RoundedCorners () As VARIANT_BOOL
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double) As TextBox Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'TextBoxes_

	Type Picture_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
	End Type 'Picture_

	Type Pictures_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double) As Picture Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function Insert (Byval Filename As BSTR, Byval Converter As Variant Ptr) As Picture Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
		' Declare Abstract Function Paste (Byval Link As Variant Ptr) As Picture Ptr
	End Type 'Pictures_

	Type Drawing_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Let_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function AddVertex (Byval Left As Double, Byval Top As Double) As Variant Ptr
		' Declare Abstract Function Reshape (Byval Vertex As Long, Byval Insert As VARIANT_BOOL, Byval Left As Variant Ptr, Byval Top As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Vertices (Byval Index1 As Variant Ptr, Byval Index2 As Variant Ptr) As Variant Ptr
	End Type 'Drawing_

	Type Drawings_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Get_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Let_AddIndent () As VARIANT_BOOL
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function _Dummy44 () As HRESULT
		' Declare Abstract Function Reshape (Byval Vertex As Long, Byval Insert As VARIANT_BOOL, Byval Left As Variant Ptr, Byval Top As Variant Ptr) As Variant Ptr
		' Declare Abstract Function _Dummy46 () As HRESULT
		' Declare Abstract Function Add (Byval X1 As Double, Byval Y1 As Double, Byval X2 As Double, Byval Y2 As Double, Byval Closed As VARIANT_BOOL) As Drawing Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'Drawings_

	Type RoutingSlip_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Delivery () As XlRoutingSlipDelivery
		' Declare Abstract Function Let_Delivery () As XlRoutingSlipDelivery
		' Declare Abstract Function Get_Message () As Variant Ptr
		' Declare Abstract Function Let_Message () As Variant Ptr
		' Declare Abstract Function Get_Recipients (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Let_Recipients (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Reset () As Variant Ptr
		' Declare Abstract Function Get_ReturnWhenDone () As VARIANT_BOOL
		' Declare Abstract Function Let_ReturnWhenDone () As VARIANT_BOOL
		' Declare Abstract Function Get_Status () As XlRoutingSlipStatus
		' Declare Abstract Function Get_Subject () As Variant Ptr
		' Declare Abstract Function Let_Subject () As Variant Ptr
		' Declare Abstract Function Get_TrackStatus () As VARIANT_BOOL
		' Declare Abstract Function Let_TrackStatus () As VARIANT_BOOL
	End Type 'RoutingSlip_

	Type Outline_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_AutomaticStyles () As VARIANT_BOOL
		' Declare Abstract Function Let_AutomaticStyles () As VARIANT_BOOL
		' Declare Abstract Function ShowLevels (Byval RowLevels As Variant Ptr, Byval ColumnLevels As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_SummaryColumn () As XlSummaryColumn
		' Declare Abstract Function Let_SummaryColumn () As XlSummaryColumn
		' Declare Abstract Function Get_SummaryRow () As XlSummaryRow
		' Declare Abstract Function Let_SummaryRow () As XlSummaryRow
	End Type 'Outline_

	Type Module_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Activate () As HRESULT
		' Declare Abstract Function Copy (Byval Before As Variant Ptr, Byval After As Variant Ptr) As HRESULT
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get_CodeName () As BSTR
		' Declare Abstract Function Get__CodeName () As BSTR
		' Declare Abstract Function Let__CodeName () As BSTR
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Move (Byval Before As Variant Ptr, Byval After As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_Next () As IDispatch Ptr
		' Declare Abstract Function Get_OnDoubleClick () As BSTR
		' Declare Abstract Function Let_OnDoubleClick () As BSTR
		' Declare Abstract Function Get_OnSheetActivate () As BSTR
		' Declare Abstract Function Let_OnSheetActivate () As BSTR
		' Declare Abstract Function Get_OnSheetDeactivate () As BSTR
		' Declare Abstract Function Let_OnSheetDeactivate () As BSTR
		' Declare Abstract Function Get_PageSetup () As PageSetup Ptr
		' Declare Abstract Function Get_Previous () As IDispatch Ptr
		' Declare Abstract Function __PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr) As HRESULT
		' Declare Abstract Function _Dummy18 () As HRESULT
		' Declare Abstract Function _Protect (Byval Password As Variant Ptr, Byval DrawingObjects As Variant Ptr, Byval Contents As Variant Ptr, Byval Scenarios As Variant Ptr, Byval UserInterfaceOnly As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_ProtectContents () As VARIANT_BOOL
		' Declare Abstract Function _Dummy21 () As HRESULT
		' Declare Abstract Function Get_ProtectionMode () As VARIANT_BOOL
		' Declare Abstract Function _Dummy23 () As HRESULT
		' Declare Abstract Function _SaveAs (Byval Filename As BSTR, Byval FileFormat As Variant Ptr, Byval Password As Variant Ptr, Byval WriteResPassword As Variant Ptr, Byval ReadOnlyRecommended As Variant Ptr, Byval CreateBackup As Variant Ptr, Byval AddToMru As Variant Ptr, Byval TextCodepage As Variant Ptr, Byval TextVisualLayout As Variant Ptr) As HRESULT
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As HRESULT
		' Declare Abstract Function Unprotect (Byval Password As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_Visible () As XlSheetVisibility
		' Declare Abstract Function Let_Visible () As XlSheetVisibility
		' Declare Abstract Function Get_Shapes () As Shapes Ptr
		' Declare Abstract Function InsertFile (Byval Filename As Variant Ptr, Byval Merge As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SaveAs (Byval Filename As BSTR, Byval FileFormat As Variant Ptr, Byval Password As Variant Ptr, Byval WriteResPassword As Variant Ptr, Byval ReadOnlyRecommended As Variant Ptr, Byval CreateBackup As Variant Ptr, Byval AddToMru As Variant Ptr, Byval TextCodepage As Variant Ptr, Byval TextVisualLayout As Variant Ptr) As HRESULT
		' Declare Abstract Function Protect (Byval Password As Variant Ptr, Byval DrawingObjects As Variant Ptr, Byval Contents As Variant Ptr, Byval Scenarios As Variant Ptr, Byval UserInterfaceOnly As Variant Ptr) As HRESULT
		' Declare Abstract Function _PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr) As HRESULT
		' Declare Abstract Function PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr) As HRESULT
	End Type 'Module_

	Type Modules_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval Count As Variant Ptr) As Module Ptr
		' Declare Abstract Function Copy (Byval Before As Variant Ptr, Byval After As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function _Dummy7 () As HRESULT
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Move (Byval Before As Variant Ptr, Byval After As Variant Ptr) As HRESULT
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function __PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr) As HRESULT
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_HPageBreaks () As HPageBreaks Ptr
		' Declare Abstract Function Get_VPageBreaks () As VPageBreaks Ptr
		' Declare Abstract Function Get_Visible () As Variant Ptr
		' Declare Abstract Function Let_Visible () As Variant Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr) As HRESULT
		' Declare Abstract Function PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval IgnorePrintAreas As Variant Ptr) As HRESULT
		' Declare Abstract Function Add2 (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval Count As Variant Ptr, Byval NewLayout As Variant Ptr) As IDispatch Ptr
	End Type 'Modules_

	Type DialogSheet_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Activate () As HRESULT
		' Declare Abstract Function Copy (Byval Before As Variant Ptr, Byval After As Variant Ptr) As HRESULT
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get_CodeName () As BSTR
		' Declare Abstract Function Get__CodeName () As BSTR
		' Declare Abstract Function Let__CodeName () As BSTR
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Move (Byval Before As Variant Ptr, Byval After As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_Next () As IDispatch Ptr
		' Declare Abstract Function Get_OnDoubleClick () As BSTR
		' Declare Abstract Function Let_OnDoubleClick () As BSTR
		' Declare Abstract Function Get_OnSheetActivate () As BSTR
		' Declare Abstract Function Let_OnSheetActivate () As BSTR
		' Declare Abstract Function Get_OnSheetDeactivate () As BSTR
		' Declare Abstract Function Let_OnSheetDeactivate () As BSTR
		' Declare Abstract Function Get_PageSetup () As PageSetup Ptr
		' Declare Abstract Function Get_Previous () As IDispatch Ptr
		' Declare Abstract Function __PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr) As HRESULT
		' Declare Abstract Function PrintPreview (Byval EnableChanges As Variant Ptr) As HRESULT
		' Declare Abstract Function _Protect (Byval Password As Variant Ptr, Byval DrawingObjects_v As Variant Ptr, Byval Contents As Variant Ptr, Byval Scenarios As Variant Ptr, Byval UserInterfaceOnly As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_ProtectContents () As VARIANT_BOOL
		' Declare Abstract Function Get_ProtectDrawingObjects () As VARIANT_BOOL
		' Declare Abstract Function Get_ProtectionMode () As VARIANT_BOOL
		' Declare Abstract Function Get_ProtectScenarios () As VARIANT_BOOL
		' Declare Abstract Function _SaveAs (Byval Filename As BSTR, Byval FileFormat As Variant Ptr, Byval Password As Variant Ptr, Byval WriteResPassword As Variant Ptr, Byval ReadOnlyRecommended As Variant Ptr, Byval CreateBackup As Variant Ptr, Byval AddToMru As Variant Ptr, Byval TextCodepage As Variant Ptr, Byval TextVisualLayout As Variant Ptr) As HRESULT
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As HRESULT
		' Declare Abstract Function Unprotect (Byval Password As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_Visible () As XlSheetVisibility
		' Declare Abstract Function Let_Visible () As XlSheetVisibility
		' Declare Abstract Function Get_Shapes () As Shapes Ptr
		' Declare Abstract Function _Dummy29 () As HRESULT
		' Declare Abstract Function Arcs (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _Dummy31 () As HRESULT
		' Declare Abstract Function _Dummy32 () As HRESULT
		' Declare Abstract Function Buttons (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _Dummy34 () As HRESULT
		' Declare Abstract Function Get_EnableCalculation () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableCalculation () As VARIANT_BOOL
		' Declare Abstract Function _Dummy36 () As HRESULT
		' Declare Abstract Function ChartObjects (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function CheckBoxes (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr) As HRESULT
		' Declare Abstract Function _Dummy40 () As HRESULT
		' Declare Abstract Function _Dummy41 () As HRESULT
		' Declare Abstract Function _Dummy42 () As HRESULT
		' Declare Abstract Function _Dummy43 () As HRESULT
		' Declare Abstract Function _Dummy44 () As HRESULT
		' Declare Abstract Function _Dummy45 () As HRESULT
		' Declare Abstract Function Get_DisplayAutomaticPageBreaks () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayAutomaticPageBreaks () As VARIANT_BOOL
		' Declare Abstract Function Drawings (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function DrawingObjects (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function DropDowns (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_EnableAutoFilter () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableAutoFilter () As VARIANT_BOOL
		' Declare Abstract Function Get_EnableSelection () As XlEnableSelection
		' Declare Abstract Function Let_EnableSelection () As XlEnableSelection
		' Declare Abstract Function Get_EnableOutlining () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableOutlining () As VARIANT_BOOL
		' Declare Abstract Function Get_EnablePivotTable () As VARIANT_BOOL
		' Declare Abstract Function Let_EnablePivotTable () As VARIANT_BOOL
		' Declare Abstract Function Evaluate (Byval Name As Variant Ptr) As Variant Ptr
		' Declare Abstract Function _Evaluate (Byval Name As Variant Ptr) As Variant Ptr
		' Declare Abstract Function _Dummy56 () As HRESULT
		' Declare Abstract Function ResetAllPageBreaks () As HRESULT
		' Declare Abstract Function GroupBoxes (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function GroupObjects (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Labels (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Lines (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function ListBoxes (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_Names () As Names Ptr
		' Declare Abstract Function OLEObjects (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _Dummy65 () As HRESULT
		' Declare Abstract Function _Dummy66 () As HRESULT
		' Declare Abstract Function _Dummy67 () As HRESULT
		' Declare Abstract Function OptionButtons (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _Dummy69 () As HRESULT
		' Declare Abstract Function Ovals (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Paste (Byval Destination As Variant Ptr, Byval Link As Variant Ptr) As HRESULT
		' Declare Abstract Function _PasteSpecial (Byval Format As Variant Ptr, Byval Link As Variant Ptr, Byval DisplayAsIcon As Variant Ptr, Byval IconFileName As Variant Ptr, Byval IconIndex As Variant Ptr, Byval IconLabel As Variant Ptr) As HRESULT
		' Declare Abstract Function Pictures (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _Dummy74 () As HRESULT
		' Declare Abstract Function _Dummy75 () As HRESULT
		' Declare Abstract Function _Dummy76 () As HRESULT
		' Declare Abstract Function Rectangles (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _Dummy78 () As HRESULT
		' Declare Abstract Function _Dummy79 () As HRESULT
		' Declare Abstract Function Get_ScrollArea () As BSTR
		' Declare Abstract Function Let_ScrollArea () As BSTR
		' Declare Abstract Function ScrollBars (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _Dummy82 () As HRESULT
		' Declare Abstract Function _Dummy83 () As HRESULT
		' Declare Abstract Function Spinners (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _Dummy85 () As HRESULT
		' Declare Abstract Function _Dummy86 () As HRESULT
		' Declare Abstract Function TextBoxes (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _Dummy88 () As HRESULT
		' Declare Abstract Function _Dummy89 () As HRESULT
		' Declare Abstract Function _Dummy90 () As HRESULT
		' Declare Abstract Function Get_HPageBreaks () As HPageBreaks Ptr
		' Declare Abstract Function Get_VPageBreaks () As VPageBreaks Ptr
		' Declare Abstract Function Get_QueryTables () As QueryTables Ptr
		' Declare Abstract Function Get_DisplayPageBreaks () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayPageBreaks () As VARIANT_BOOL
		' Declare Abstract Function Get_Comments () As Comments Ptr
		' Declare Abstract Function Get_Hyperlinks () As Hyperlinks Ptr
		' Declare Abstract Function ClearCircles () As HRESULT
		' Declare Abstract Function CircleInvalid () As HRESULT
		' Declare Abstract Function Get__DisplayRightToLeft () As Long
		' Declare Abstract Function Let__DisplayRightToLeft () As Long
		' Declare Abstract Function Get_AutoFilter () As AutoFilter Ptr
		' Declare Abstract Function Get_DisplayRightToLeft () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayRightToLeft () As VARIANT_BOOL
		' Declare Abstract Function Get_Scripts () As Office.Scripts Ptr
		' Declare Abstract Function _PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr) As HRESULT
		' Declare Abstract Function _CheckSpelling (Byval CustomDictionary As Variant Ptr, Byval IgnoreUppercase As Variant Ptr, Byval AlwaysSuggest As Variant Ptr, Byval SpellLang As Variant Ptr, Byval IgnoreFinalYaa As Variant Ptr, Byval SpellScript As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_Tab () As Tab Ptr
		' Declare Abstract Function Get_MailEnvelope () As Office.MsoEnvelope Ptr
		' Declare Abstract Function SaveAs (Byval Filename As BSTR, Byval FileFormat As Variant Ptr, Byval Password As Variant Ptr, Byval WriteResPassword As Variant Ptr, Byval ReadOnlyRecommended As Variant Ptr, Byval CreateBackup As Variant Ptr, Byval AddToMru As Variant Ptr, Byval TextCodepage As Variant Ptr, Byval TextVisualLayout As Variant Ptr, Byval Local As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_CustomProperties () As CustomProperties Ptr
		' Declare Abstract Function Get_SmartTags () As SmartTags Ptr
		' Declare Abstract Function Get_Protection () As Protection Ptr
		' Declare Abstract Function PasteSpecial (Byval Format As Variant Ptr, Byval Link As Variant Ptr, Byval DisplayAsIcon As Variant Ptr, Byval IconFileName As Variant Ptr, Byval IconIndex As Variant Ptr, Byval IconLabel As Variant Ptr, Byval NoHTMLFormatting As Variant Ptr) As HRESULT
		' Declare Abstract Function Protect (Byval Password As Variant Ptr, Byval DrawingObjects_v As Variant Ptr, Byval Contents As Variant Ptr, Byval Scenarios As Variant Ptr, Byval UserInterfaceOnly As Variant Ptr, Byval AllowFormattingCells As Variant Ptr, Byval AllowFormattingColumns As Variant Ptr, Byval AllowFormattingRows As Variant Ptr, Byval AllowInsertingColumns As Variant Ptr, Byval AllowInsertingRows As Variant Ptr, Byval AllowInsertingHyperlinks As Variant Ptr, Byval AllowDeletingColumns As Variant Ptr, Byval AllowDeletingRows As Variant Ptr, Byval AllowSorting As Variant Ptr, Byval AllowFiltering As Variant Ptr, Byval AllowUsingPivotTables As Variant Ptr) As HRESULT
		' Declare Abstract Function _Dummy113 () As HRESULT
		' Declare Abstract Function _Dummy114 () As HRESULT
		' Declare Abstract Function _Dummy115 () As HRESULT
		' Declare Abstract Function PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_EnableFormatConditionsCalculation () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableFormatConditionsCalculation () As VARIANT_BOOL
		' Declare Abstract Function Get_Sort () As Sort Ptr
		' Declare Abstract Function ExportAsFixedFormat (Byval Type_v As XlFixedFormatType, Byval Filename As Variant Ptr, Byval Quality As Variant Ptr, Byval IncludeDocProperties As Variant Ptr, Byval IgnorePrintAreas As Variant Ptr, Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval OpenAfterPublish As Variant Ptr, Byval FixedFormatExtClassPtr As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_PrintedCommentPages () As Long
		' Declare Abstract Function Get_DefaultButton () As Variant Ptr
		' Declare Abstract Function Let_DefaultButton () As Variant Ptr
		' Declare Abstract Function Get_DialogFrame () As DialogFrame Ptr
		' Declare Abstract Function EditBoxes (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_Focus () As Variant Ptr
		' Declare Abstract Function Let_Focus () As Variant Ptr
		' Declare Abstract Function Hide (Byval Cancel As Variant Ptr) As VARIANT_BOOL
		' Declare Abstract Function Show () As VARIANT_BOOL
	End Type 'DialogSheet_

	Type DialogSheets_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval Count As Variant Ptr) As DialogSheet Ptr
		' Declare Abstract Function Copy (Byval Before As Variant Ptr, Byval After As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function _Dummy7 () As HRESULT
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Move (Byval Before As Variant Ptr, Byval After As Variant Ptr) As HRESULT
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function __PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr) As HRESULT
		' Declare Abstract Function PrintPreview (Byval EnableChanges As Variant Ptr) As HRESULT
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_HPageBreaks () As HPageBreaks Ptr
		' Declare Abstract Function Get_VPageBreaks () As VPageBreaks Ptr
		' Declare Abstract Function Get_Visible () As Variant Ptr
		' Declare Abstract Function Let_Visible () As Variant Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr) As HRESULT
		' Declare Abstract Function PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr) As HRESULT
		' Declare Abstract Function Add2 (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval Count As Variant Ptr, Byval NewLayout As Variant Ptr) As IDispatch Ptr
	End Type 'DialogSheets_

	Type Worksheets_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval Count As Variant Ptr, Byval Type_v As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Copy (Byval Before As Variant Ptr, Byval After As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function FillAcrossSheets (Byval Range As Range Ptr, Byval Type_v As XlFillWith) As HRESULT
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Move (Byval Before As Variant Ptr, Byval After As Variant Ptr) As HRESULT
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function __PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr) As HRESULT
		' Declare Abstract Function PrintPreview (Byval EnableChanges As Variant Ptr) As HRESULT
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_HPageBreaks () As HPageBreaks Ptr
		' Declare Abstract Function Get_VPageBreaks () As VPageBreaks Ptr
		' Declare Abstract Function Get_Visible () As Variant Ptr
		' Declare Abstract Function Let_Visible () As Variant Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr) As HRESULT
		' Declare Abstract Function PrintOut (Byval From As Variant Ptr, Byval To_v As Variant Ptr, Byval Copies As Variant Ptr, Byval Preview As Variant Ptr, Byval ActivePrinter As Variant Ptr, Byval PrintToFile As Variant Ptr, Byval Collate As Variant Ptr, Byval PrToFileName As Variant Ptr, Byval IgnorePrintAreas As Variant Ptr) As HRESULT
		' Declare Abstract Function Add2 (Byval Before As Variant Ptr, Byval After As Variant Ptr, Byval Count As Variant Ptr, Byval NewLayout As Variant Ptr) As IDispatch Ptr
	End Type 'Worksheets_

	Type PageSetup_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BlackAndWhite () As VARIANT_BOOL
		' Declare Abstract Function Let_BlackAndWhite () As VARIANT_BOOL
		' Declare Abstract Function Get_BottomMargin () As Double
		' Declare Abstract Function Let_BottomMargin () As Double
		' Declare Abstract Function Get_CenterFooter () As BSTR
		' Declare Abstract Function Let_CenterFooter () As BSTR
		' Declare Abstract Function Get_CenterHeader () As BSTR
		' Declare Abstract Function Let_CenterHeader () As BSTR
		' Declare Abstract Function Get_CenterHorizontally () As VARIANT_BOOL
		' Declare Abstract Function Let_CenterHorizontally () As VARIANT_BOOL
		' Declare Abstract Function Get_CenterVertically () As VARIANT_BOOL
		' Declare Abstract Function Let_CenterVertically () As VARIANT_BOOL
		' Declare Abstract Function Get_ChartSize () As XlObjectSize
		' Declare Abstract Function Let_ChartSize () As XlObjectSize
		' Declare Abstract Function Get_Draft () As VARIANT_BOOL
		' Declare Abstract Function Let_Draft () As VARIANT_BOOL
		' Declare Abstract Function Get_FirstPageNumber () As Long
		' Declare Abstract Function Let_FirstPageNumber () As Long
		' Declare Abstract Function Get_FitToPagesTall () As Variant Ptr
		' Declare Abstract Function Let_FitToPagesTall () As Variant Ptr
		' Declare Abstract Function Get_FitToPagesWide () As Variant Ptr
		' Declare Abstract Function Let_FitToPagesWide () As Variant Ptr
		' Declare Abstract Function Get_FooterMargin () As Double
		' Declare Abstract Function Let_FooterMargin () As Double
		' Declare Abstract Function Get_HeaderMargin () As Double
		' Declare Abstract Function Let_HeaderMargin () As Double
		' Declare Abstract Function Get_LeftFooter () As BSTR
		' Declare Abstract Function Let_LeftFooter () As BSTR
		' Declare Abstract Function Get_LeftHeader () As BSTR
		' Declare Abstract Function Let_LeftHeader () As BSTR
		' Declare Abstract Function Get_LeftMargin () As Double
		' Declare Abstract Function Let_LeftMargin () As Double
		' Declare Abstract Function Get_Order () As XlOrder
		' Declare Abstract Function Let_Order () As XlOrder
		' Declare Abstract Function Get_Orientation () As XlPageOrientation
		' Declare Abstract Function Let_Orientation () As XlPageOrientation
		' Declare Abstract Function Get_PaperSize () As XlPaperSize
		' Declare Abstract Function Let_PaperSize () As XlPaperSize
		' Declare Abstract Function Get_PrintArea () As BSTR
		' Declare Abstract Function Let_PrintArea () As BSTR
		' Declare Abstract Function Get_PrintGridlines () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintGridlines () As VARIANT_BOOL
		' Declare Abstract Function Get_PrintHeadings () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintHeadings () As VARIANT_BOOL
		' Declare Abstract Function Get_PrintNotes () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintNotes () As VARIANT_BOOL
		' Declare Abstract Function Get_PrintQuality (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Let_PrintQuality (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_PrintTitleColumns () As BSTR
		' Declare Abstract Function Let_PrintTitleColumns () As BSTR
		' Declare Abstract Function Get_PrintTitleRows () As BSTR
		' Declare Abstract Function Let_PrintTitleRows () As BSTR
		' Declare Abstract Function Get_RightFooter () As BSTR
		' Declare Abstract Function Let_RightFooter () As BSTR
		' Declare Abstract Function Get_RightHeader () As BSTR
		' Declare Abstract Function Let_RightHeader () As BSTR
		' Declare Abstract Function Get_RightMargin () As Double
		' Declare Abstract Function Let_RightMargin () As Double
		' Declare Abstract Function Get_TopMargin () As Double
		' Declare Abstract Function Let_TopMargin () As Double
		' Declare Abstract Function Get_Zoom () As Variant Ptr
		' Declare Abstract Function Let_Zoom () As Variant Ptr
		' Declare Abstract Function Get_PrintComments () As XlPrintLocation
		' Declare Abstract Function Let_PrintComments () As XlPrintLocation
		' Declare Abstract Function Get_PrintErrors () As XlPrintErrors
		' Declare Abstract Function Let_PrintErrors () As XlPrintErrors
		' Declare Abstract Function Get_CenterHeaderPicture () As Graphic Ptr
		' Declare Abstract Function Get_CenterFooterPicture () As Graphic Ptr
		' Declare Abstract Function Get_LeftHeaderPicture () As Graphic Ptr
		' Declare Abstract Function Get_LeftFooterPicture () As Graphic Ptr
		' Declare Abstract Function Get_RightHeaderPicture () As Graphic Ptr
		' Declare Abstract Function Get_RightFooterPicture () As Graphic Ptr
		' Declare Abstract Function Get_OddAndEvenPagesHeaderFooter () As VARIANT_BOOL
		' Declare Abstract Function Let_OddAndEvenPagesHeaderFooter () As VARIANT_BOOL
		' Declare Abstract Function Get_DifferentFirstPageHeaderFooter () As VARIANT_BOOL
		' Declare Abstract Function Let_DifferentFirstPageHeaderFooter () As VARIANT_BOOL
		' Declare Abstract Function Get_ScaleWithDocHeaderFooter () As VARIANT_BOOL
		' Declare Abstract Function Let_ScaleWithDocHeaderFooter () As VARIANT_BOOL
		' Declare Abstract Function Get_AlignMarginsHeaderFooter () As VARIANT_BOOL
		' Declare Abstract Function Let_AlignMarginsHeaderFooter () As VARIANT_BOOL
		' Declare Abstract Function Get_Pages () As Pages Ptr
		' Declare Abstract Function Get_EvenPage () As Page Ptr
		' Declare Abstract Function Get_FirstPage () As Page Ptr
	End Type 'PageSetup_

	Type Names_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Name As Variant Ptr, Byval RefersTo As Variant Ptr, Byval Visible As Variant Ptr, Byval MacroType As Variant Ptr, Byval ShortcutKey As Variant Ptr, Byval Category As Variant Ptr, Byval NameLocal As Variant Ptr, Byval RefersToLocal As Variant Ptr, Byval CategoryLocal As Variant Ptr, Byval RefersToR1C1 As Variant Ptr, Byval RefersToR1C1Local As Variant Ptr) As Name Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr, Byval IndexLocal As Variant Ptr, Byval RefersTo As Variant Ptr) As Name Ptr
		' Declare Abstract Function _Default (Byval Index As Variant Ptr, Byval IndexLocal As Variant Ptr, Byval RefersTo As Variant Ptr) As Name Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'Names_

	Type Name_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get__Default () As BSTR
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Category () As BSTR
		' Declare Abstract Function Let_Category () As BSTR
		' Declare Abstract Function Get_CategoryLocal () As BSTR
		' Declare Abstract Function Let_CategoryLocal () As BSTR
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get_MacroType () As XlXLMMacroType
		' Declare Abstract Function Let_MacroType () As XlXLMMacroType
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_RefersTo () As Variant Ptr
		' Declare Abstract Function Let_RefersTo () As Variant Ptr
		' Declare Abstract Function Get_ShortcutKey () As BSTR
		' Declare Abstract Function Let_ShortcutKey () As BSTR
		' Declare Abstract Function Get_Value () As BSTR
		' Declare Abstract Function Let_Value () As BSTR
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_NameLocal () As BSTR
		' Declare Abstract Function Let_NameLocal () As BSTR
		' Declare Abstract Function Get_RefersToLocal () As Variant Ptr
		' Declare Abstract Function Let_RefersToLocal () As Variant Ptr
		' Declare Abstract Function Get_RefersToR1C1 () As Variant Ptr
		' Declare Abstract Function Let_RefersToR1C1 () As Variant Ptr
		' Declare Abstract Function Get_RefersToR1C1Local () As Variant Ptr
		' Declare Abstract Function Let_RefersToR1C1Local () As Variant Ptr
		' Declare Abstract Function Get_RefersToRange () As Range Ptr
		' Declare Abstract Function Get_Comment () As BSTR
		' Declare Abstract Function Let_Comment () As BSTR
		' Declare Abstract Function Get_WorkbookParameter () As VARIANT_BOOL
		' Declare Abstract Function Let_WorkbookParameter () As VARIANT_BOOL
		' Declare Abstract Function Get_ValidWorkbookParameter () As VARIANT_BOOL
	End Type 'Name_

	Type ChartObject_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function _Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_ZOrder () As Long
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function Activate () As Variant Ptr
		' Declare Abstract Function Get_Chart () As Chart Ptr
		' Declare Abstract Function Get_ProtectChartObject () As VARIANT_BOOL
		' Declare Abstract Function Let_ProtectChartObject () As VARIANT_BOOL
		' Declare Abstract Function Get_RoundedCorners () As VARIANT_BOOL
		' Declare Abstract Function Let_RoundedCorners () As VARIANT_BOOL
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Copy () As Variant Ptr
	End Type 'ChartObject_

	Type ChartObjects_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Dummy3 () As HRESULT
		' Declare Abstract Function BringToFront () As Variant Ptr
		' Declare Abstract Function _Copy () As Variant Ptr
		' Declare Abstract Function CopyPicture (Byval Appearance As XlPictureAppearance, Byval Format As XlCopyPictureFormat) As Variant Ptr
		' Declare Abstract Function Cut () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Duplicate () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function _Dummy12 () As HRESULT
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function _Dummy15 () As HRESULT
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Placement () As Variant Ptr
		' Declare Abstract Function Let_Placement () As Variant Ptr
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As Variant Ptr
		' Declare Abstract Function SendToBack () As Variant Ptr
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function _Dummy22 () As HRESULT
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function _Dummy25 () As HRESULT
		' Declare Abstract Function Get_ShapeRange () As ShapeRange Ptr
		' Declare Abstract Function _Dummy27 () As HRESULT
		' Declare Abstract Function _Dummy28 () As HRESULT
		' Declare Abstract Function Get_ProtectChartObject () As VARIANT_BOOL
		' Declare Abstract Function Let_ProtectChartObject () As VARIANT_BOOL
		' Declare Abstract Function Get_RoundedCorners () As VARIANT_BOOL
		' Declare Abstract Function Let_RoundedCorners () As VARIANT_BOOL
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function Add (Byval Left As Double, Byval Top As Double, Byval Width As Double, Byval Height As Double) As ChartObject Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Group () As GroupObject Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
		' Declare Abstract Function _Default (Byval Index As Variant Ptr) As IDispatch Ptr
	End Type 'ChartObjects_

	Type Mailer_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BCCRecipients () As Variant Ptr
		' Declare Abstract Function Let_BCCRecipients () As Variant Ptr
		' Declare Abstract Function Get_CCRecipients () As Variant Ptr
		' Declare Abstract Function Let_CCRecipients () As Variant Ptr
		' Declare Abstract Function Get_Enclosures () As Variant Ptr
		' Declare Abstract Function Let_Enclosures () As Variant Ptr
		' Declare Abstract Function Get_Received () As VARIANT_BOOL
		' Declare Abstract Function Get_SendDateTime () As Date_
		' Declare Abstract Function Get_Sender () As BSTR
		' Declare Abstract Function Get_Subject () As BSTR
		' Declare Abstract Function Let_Subject () As BSTR
		' Declare Abstract Function Get_ToRecipients () As Variant Ptr
		' Declare Abstract Function Let_ToRecipients () As Variant Ptr
		' Declare Abstract Function Get_WhichAddress () As Variant Ptr
		' Declare Abstract Function Let_WhichAddress () As Variant Ptr
	End Type 'Mailer_

	Type CustomViews_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval ViewName As Variant Ptr) As CustomView Ptr
		' Declare Abstract Function Add (Byval ViewName As BSTR, Byval PrintSettings As Variant Ptr, Byval RowColSettings As Variant Ptr) As CustomView Ptr
		' Declare Abstract Function Get__Default (Byval ViewName As Variant Ptr) As CustomView Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'CustomViews_

	Type CustomView_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Get_PrintSettings () As VARIANT_BOOL
		' Declare Abstract Function Get_RowColSettings () As VARIANT_BOOL
		' Declare Abstract Function Show () As HRESULT
		' Declare Abstract Function Delete_ () As HRESULT
	End Type 'CustomView_

	Type FormatConditions_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Add (Byval Type_v As XlFormatConditionType, Byval Operator_v As Variant Ptr, Byval Formula1 As Variant Ptr, Byval Formula2 As Variant Ptr, Byval String_v As Variant Ptr, Byval TextOperator As Variant Ptr, Byval DateOperator As Variant Ptr, Byval ScopeType As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function AddColorScale (Byval ColorScaleType As Long) As IDispatch Ptr
		' Declare Abstract Function AddDatabar () As IDispatch Ptr
		' Declare Abstract Function AddIconSetCondition () As IDispatch Ptr
		' Declare Abstract Function AddTop10 () As IDispatch Ptr
		' Declare Abstract Function AddAboveAverage () As IDispatch Ptr
		' Declare Abstract Function AddUniqueValues () As IDispatch Ptr
	End Type 'FormatConditions_

	Type FormatCondition_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Modify (Byval Type_v As XlFormatConditionType, Byval Operator_v As Variant Ptr, Byval Formula1 As Variant Ptr, Byval Formula2 As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_Type () As Long
		' Declare Abstract Function Get_Operator () As Long
		' Declare Abstract Function Get_Formula1 () As BSTR
		' Declare Abstract Function Get_Formula2 () As BSTR
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Borders () As Borders Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Modify (Byval Type_v As XlFormatConditionType, Byval Operator_v As Variant Ptr, Byval Formula1 As Variant Ptr, Byval Formula2 As Variant Ptr, Byval String_v As Variant Ptr, Byval Operator2 As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_TextOperator () As XlContainsOperator
		' Declare Abstract Function Let_TextOperator () As XlContainsOperator
		' Declare Abstract Function Get_DateOperator () As XlTimePeriods
		' Declare Abstract Function Let_DateOperator () As XlTimePeriods
		' Declare Abstract Function Get_NumberFormat () As Variant Ptr
		' Declare Abstract Function Let_NumberFormat () As Variant Ptr
		' Declare Abstract Function Get_Priority () As Long
		' Declare Abstract Function Let_Priority () As Long
		' Declare Abstract Function Get_StopIfTrue () As VARIANT_BOOL
		' Declare Abstract Function Let_StopIfTrue () As VARIANT_BOOL
		' Declare Abstract Function Get_AppliesTo () As Range Ptr
		' Declare Abstract Function ModifyAppliesToRange (Byval Range As Range Ptr) As HRESULT
		' Declare Abstract Function SetFirstPriority () As HRESULT
		' Declare Abstract Function SetLastPriority () As HRESULT
		' Declare Abstract Function Get_PTCondition () As VARIANT_BOOL
		' Declare Abstract Function Get_ScopeType () As XlPivotConditionScope
		' Declare Abstract Function Let_ScopeType () As XlPivotConditionScope
	End Type 'FormatCondition_

	Type Comments_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Long) As Comment Ptr
		' Declare Abstract Function Get__Default (Byval Index As Long) As Comment Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'Comments_

	Type Comment_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Author () As BSTR
		' Declare Abstract Function Get_Shape () As Shape Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Text (Byval Text_v As Variant Ptr, Byval Start As Variant Ptr, Byval Overwrite As Variant Ptr) As BSTR
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Next_ () As Comment Ptr
		' Declare Abstract Function Previous () As Comment Ptr
	End Type 'Comment_

	Type RefreshEvents_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function BeforeRefresh (Byval Cancel As VARIANT_BOOL Ptr) As HRESULT
		' Declare Abstract Function AfterRefresh (Byval Success As VARIANT_BOOL) As HRESULT
	End Type 'RefreshEvents_

	Type _QueryTable_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_FieldNames () As VARIANT_BOOL
		' Declare Abstract Function Let_FieldNames () As VARIANT_BOOL
		' Declare Abstract Function Get_RowNumbers () As VARIANT_BOOL
		' Declare Abstract Function Let_RowNumbers () As VARIANT_BOOL
		' Declare Abstract Function Get_FillAdjacentFormulas () As VARIANT_BOOL
		' Declare Abstract Function Let_FillAdjacentFormulas () As VARIANT_BOOL
		' Declare Abstract Function Get_HasAutoFormat () As VARIANT_BOOL
		' Declare Abstract Function Let_HasAutoFormat () As VARIANT_BOOL
		' Declare Abstract Function Get_RefreshOnFileOpen () As VARIANT_BOOL
		' Declare Abstract Function Let_RefreshOnFileOpen () As VARIANT_BOOL
		' Declare Abstract Function Get_Refreshing () As VARIANT_BOOL
		' Declare Abstract Function Get_FetchedRowOverflow () As VARIANT_BOOL
		' Declare Abstract Function Get_BackgroundQuery () As VARIANT_BOOL
		' Declare Abstract Function Let_BackgroundQuery () As VARIANT_BOOL
		' Declare Abstract Function CancelRefresh () As HRESULT
		' Declare Abstract Function Get_RefreshStyle () As XlCellInsertionMode
		' Declare Abstract Function Let_RefreshStyle () As XlCellInsertionMode
		' Declare Abstract Function Get_EnableRefresh () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableRefresh () As VARIANT_BOOL
		' Declare Abstract Function Get_SavePassword () As VARIANT_BOOL
		' Declare Abstract Function Let_SavePassword () As VARIANT_BOOL
		' Declare Abstract Function Get_Destination () As Range Ptr
		' Declare Abstract Function Get_Connection () As Variant Ptr
		' Declare Abstract Function Let_Connection () As Variant Ptr
		' Declare Abstract Function Get_Sql () As Variant Ptr
		' Declare Abstract Function Let_Sql () As Variant Ptr
		' Declare Abstract Function Get_PostText () As BSTR
		' Declare Abstract Function Let_PostText () As BSTR
		' Declare Abstract Function Get_ResultRange () As Range Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Refresh (Byval BackgroundQuery As Variant Ptr) As VARIANT_BOOL
		' Declare Abstract Function Get_Parameters () As Parameters Ptr
		' Declare Abstract Function Get_Recordset () As IDispatch Ptr
		' Declare Abstract Function Set_Recordset () As IDispatch Ptr
		' Declare Abstract Function Get_SaveData () As VARIANT_BOOL
		' Declare Abstract Function Let_SaveData () As VARIANT_BOOL
		' Declare Abstract Function Get_TablesOnlyFromHTML () As VARIANT_BOOL
		' Declare Abstract Function Let_TablesOnlyFromHTML () As VARIANT_BOOL
		' Declare Abstract Function Get_EnableEditing () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableEditing () As VARIANT_BOOL
		' Declare Abstract Function Get_TextFilePlatform () As Long
		' Declare Abstract Function Let_TextFilePlatform () As Long
		' Declare Abstract Function Get_TextFileStartRow () As Long
		' Declare Abstract Function Let_TextFileStartRow () As Long
		' Declare Abstract Function Get_TextFileParseType () As XlTextParsingType
		' Declare Abstract Function Let_TextFileParseType () As XlTextParsingType
		' Declare Abstract Function Get_TextFileTextQualifier () As XlTextQualifier
		' Declare Abstract Function Let_TextFileTextQualifier () As XlTextQualifier
		' Declare Abstract Function Get_TextFileConsecutiveDelimiter () As VARIANT_BOOL
		' Declare Abstract Function Let_TextFileConsecutiveDelimiter () As VARIANT_BOOL
		' Declare Abstract Function Get_TextFileTabDelimiter () As VARIANT_BOOL
		' Declare Abstract Function Let_TextFileTabDelimiter () As VARIANT_BOOL
		' Declare Abstract Function Get_TextFileSemicolonDelimiter () As VARIANT_BOOL
		' Declare Abstract Function Let_TextFileSemicolonDelimiter () As VARIANT_BOOL
		' Declare Abstract Function Get_TextFileCommaDelimiter () As VARIANT_BOOL
		' Declare Abstract Function Let_TextFileCommaDelimiter () As VARIANT_BOOL
		' Declare Abstract Function Get_TextFileSpaceDelimiter () As VARIANT_BOOL
		' Declare Abstract Function Let_TextFileSpaceDelimiter () As VARIANT_BOOL
		' Declare Abstract Function Get_TextFileOtherDelimiter () As BSTR
		' Declare Abstract Function Let_TextFileOtherDelimiter () As BSTR
		' Declare Abstract Function Get_TextFileColumnDataTypes () As Variant Ptr
		' Declare Abstract Function Let_TextFileColumnDataTypes () As Variant Ptr
		' Declare Abstract Function Get_TextFileFixedColumnWidths () As Variant Ptr
		' Declare Abstract Function Let_TextFileFixedColumnWidths () As Variant Ptr
		' Declare Abstract Function Get_PreserveColumnInfo () As VARIANT_BOOL
		' Declare Abstract Function Let_PreserveColumnInfo () As VARIANT_BOOL
		' Declare Abstract Function Get_PreserveFormatting () As VARIANT_BOOL
		' Declare Abstract Function Let_PreserveFormatting () As VARIANT_BOOL
		' Declare Abstract Function Get_AdjustColumnWidth () As VARIANT_BOOL
		' Declare Abstract Function Let_AdjustColumnWidth () As VARIANT_BOOL
		' Declare Abstract Function Get_CommandText () As Variant Ptr
		' Declare Abstract Function Let_CommandText () As Variant Ptr
		' Declare Abstract Function Get_CommandType () As XlCmdType
		' Declare Abstract Function Let_CommandType () As XlCmdType
		' Declare Abstract Function Get_TextFilePromptOnRefresh () As VARIANT_BOOL
		' Declare Abstract Function Let_TextFilePromptOnRefresh () As VARIANT_BOOL
		' Declare Abstract Function Get_QueryType () As XlQueryType
		' Declare Abstract Function Get_MaintainConnection () As VARIANT_BOOL
		' Declare Abstract Function Let_MaintainConnection () As VARIANT_BOOL
		' Declare Abstract Function Get_TextFileDecimalSeparator () As BSTR
		' Declare Abstract Function Let_TextFileDecimalSeparator () As BSTR
		' Declare Abstract Function Get_TextFileThousandsSeparator () As BSTR
		' Declare Abstract Function Let_TextFileThousandsSeparator () As BSTR
		' Declare Abstract Function Get_RefreshPeriod () As Long
		' Declare Abstract Function Let_RefreshPeriod () As Long
		' Declare Abstract Function ResetTimer () As HRESULT
		' Declare Abstract Function Get_WebSelectionType () As XlWebSelectionType
		' Declare Abstract Function Let_WebSelectionType () As XlWebSelectionType
		' Declare Abstract Function Get_WebFormatting () As XlWebFormatting
		' Declare Abstract Function Let_WebFormatting () As XlWebFormatting
		' Declare Abstract Function Get_WebTables () As BSTR
		' Declare Abstract Function Let_WebTables () As BSTR
		' Declare Abstract Function Get_WebPreFormattedTextToColumns () As VARIANT_BOOL
		' Declare Abstract Function Let_WebPreFormattedTextToColumns () As VARIANT_BOOL
		' Declare Abstract Function Get_WebSingleBlockTextImport () As VARIANT_BOOL
		' Declare Abstract Function Let_WebSingleBlockTextImport () As VARIANT_BOOL
		' Declare Abstract Function Get_WebDisableDateRecognition () As VARIANT_BOOL
		' Declare Abstract Function Let_WebDisableDateRecognition () As VARIANT_BOOL
		' Declare Abstract Function Get_WebConsecutiveDelimitersAsOne () As VARIANT_BOOL
		' Declare Abstract Function Let_WebConsecutiveDelimitersAsOne () As VARIANT_BOOL
		' Declare Abstract Function Get_WebDisableRedirections () As VARIANT_BOOL
		' Declare Abstract Function Let_WebDisableRedirections () As VARIANT_BOOL
		' Declare Abstract Function Get_EditWebPage () As Variant Ptr
		' Declare Abstract Function Let_EditWebPage () As Variant Ptr
		' Declare Abstract Function Get_SourceConnectionFile () As BSTR
		' Declare Abstract Function Let_SourceConnectionFile () As BSTR
		' Declare Abstract Function Get_SourceDataFile () As BSTR
		' Declare Abstract Function Let_SourceDataFile () As BSTR
		' Declare Abstract Function Get_RobustConnect () As XlRobustConnect
		' Declare Abstract Function Let_RobustConnect () As XlRobustConnect
		' Declare Abstract Function Get_TextFileTrailingMinusNumbers () As VARIANT_BOOL
		' Declare Abstract Function Let_TextFileTrailingMinusNumbers () As VARIANT_BOOL
		' Declare Abstract Function SaveAsODC (Byval ODCFileName As BSTR, Byval Description As Variant Ptr, Byval Keywords As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_ListObject () As ListObject Ptr
		' Declare Abstract Function Get_TextFileVisualLayout () As XlTextVisualLayoutType
		' Declare Abstract Function Let_TextFileVisualLayout () As XlTextVisualLayoutType
		' Declare Abstract Function Get_WorkbookConnection () As WorkbookConnection Ptr
		' Declare Abstract Function Get_Sort () As Sort Ptr
	End Type '_QueryTable_

	Type QueryTables_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Add (Byval Connection As Variant Ptr, Byval Destination As Range Ptr, Byval Sql As Variant Ptr) As QueryTable Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As QueryTable Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As QueryTable Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'QueryTables_

	Type Parameter_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_DataType () As XlParameterDataType
		' Declare Abstract Function Let_DataType () As XlParameterDataType
		' Declare Abstract Function Get_Type () As XlParameterType
		' Declare Abstract Function Get_PromptString () As BSTR
		' Declare Abstract Function Get_Value () As Variant Ptr
		' Declare Abstract Function Get_SourceRange () As Range Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function SetParam (Byval Type_v As XlParameterType, Byval Value As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_RefreshOnChange () As VARIANT_BOOL
		' Declare Abstract Function Let_RefreshOnChange () As VARIANT_BOOL
	End Type 'Parameter_

	Type Parameters_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Name As BSTR, Byval iDataType As Variant Ptr) As Parameter Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As Parameter Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As Parameter Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'Parameters_

	Type ODBCError_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_SqlState () As BSTR
		' Declare Abstract Function Get_ErrorString () As BSTR
	End Type 'ODBCError_

	Type ODBCErrors_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Long) As ODBCError Ptr
		' Declare Abstract Function Get__Default (Byval Index As Long) As ODBCError Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'ODBCErrors_

	Type Validation_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Type_v As XlDVType, Byval AlertStyle As Variant Ptr, Byval Operator_v As Variant Ptr, Byval Formula1 As Variant Ptr, Byval Formula2 As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_AlertStyle () As Long
		' Declare Abstract Function Get_IgnoreBlank () As VARIANT_BOOL
		' Declare Abstract Function Let_IgnoreBlank () As VARIANT_BOOL
		' Declare Abstract Function Get_IMEMode () As Long
		' Declare Abstract Function Let_IMEMode () As Long
		' Declare Abstract Function Get_InCellDropdown () As VARIANT_BOOL
		' Declare Abstract Function Let_InCellDropdown () As VARIANT_BOOL
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get_ErrorMessage () As BSTR
		' Declare Abstract Function Let_ErrorMessage () As BSTR
		' Declare Abstract Function Get_ErrorTitle () As BSTR
		' Declare Abstract Function Let_ErrorTitle () As BSTR
		' Declare Abstract Function Get_InputMessage () As BSTR
		' Declare Abstract Function Let_InputMessage () As BSTR
		' Declare Abstract Function Get_InputTitle () As BSTR
		' Declare Abstract Function Let_InputTitle () As BSTR
		' Declare Abstract Function Get_Formula1 () As BSTR
		' Declare Abstract Function Get_Formula2 () As BSTR
		' Declare Abstract Function Modify (Byval Type_v As Variant Ptr, Byval AlertStyle As Variant Ptr, Byval Operator_v As Variant Ptr, Byval Formula1 As Variant Ptr, Byval Formula2 As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_Operator () As Long
		' Declare Abstract Function Get_ShowError () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowError () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowInput () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowInput () As VARIANT_BOOL
		' Declare Abstract Function Get_Type () As Long
		' Declare Abstract Function Get_Value () As VARIANT_BOOL
	End Type 'Validation_

	Type Hyperlinks_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Anchor As IDispatch Ptr, Byval Address As BSTR, Byval SubAddress As Variant Ptr, Byval ScreenTip As Variant Ptr, Byval TextToDisplay As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As Hyperlink Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As Hyperlink Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Delete_ () As HRESULT
	End Type 'Hyperlinks_

	Type Hyperlink_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Get_Range () As Range Ptr
		' Declare Abstract Function Get_Shape () As Shape Ptr
		' Declare Abstract Function Get_SubAddress () As BSTR
		' Declare Abstract Function Let_SubAddress () As BSTR
		' Declare Abstract Function Get_Address () As BSTR
		' Declare Abstract Function Let_Address () As BSTR
		' Declare Abstract Function Get_Type () As Long
		' Declare Abstract Function AddToFavorites () As HRESULT
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Follow (Byval NewWindow As Variant Ptr, Byval AddHistory As Variant Ptr, Byval ExtraInfo As Variant Ptr, Byval Method As Variant Ptr, Byval HeaderInfo As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_EmailSubject () As BSTR
		' Declare Abstract Function Let_EmailSubject () As BSTR
		' Declare Abstract Function Get_ScreenTip () As BSTR
		' Declare Abstract Function Let_ScreenTip () As BSTR
		' Declare Abstract Function Get_TextToDisplay () As BSTR
		' Declare Abstract Function Let_TextToDisplay () As BSTR
		' Declare Abstract Function CreateNewDocument (Byval Filename As BSTR, Byval EditNow As VARIANT_BOOL, Byval Overwrite As VARIANT_BOOL) As HRESULT
	End Type 'Hyperlink_

	Type AutoFilter_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Range () As Range Ptr
		' Declare Abstract Function Get_Filters () As Filters Ptr
		' Declare Abstract Function Get_FilterMode () As VARIANT_BOOL
		' Declare Abstract Function Get_Sort () As Sort Ptr
		' Declare Abstract Function ApplyFilter () As HRESULT
		' Declare Abstract Function ShowAllData () As HRESULT
	End Type 'AutoFilter_

	Type Filters_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get__Default (Byval Index As Long) As Filter Ptr
		' Declare Abstract Function Get_Item (Byval Index As Long) As Filter Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'Filters_

	Type Filter_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_On () As VARIANT_BOOL
		' Declare Abstract Function Get_Criteria1 () As Variant Ptr
		' Declare Abstract Function Get__Operator () As XlAutoFilterOperator
		' Declare Abstract Function Get_Criteria2 () As Variant Ptr
		' Declare Abstract Function Get_Operator () As XlAutoFilterOperator
		' Declare Abstract Function Let_Operator () As XlAutoFilterOperator
		' Declare Abstract Function Get_Count () As Long
	End Type 'Filter_

	Type AutoCorrect_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function AddReplacement (Byval What As BSTR, Byval Replacement As BSTR) As Variant Ptr
		' Declare Abstract Function Get_CapitalizeNamesOfDays () As VARIANT_BOOL
		' Declare Abstract Function Let_CapitalizeNamesOfDays () As VARIANT_BOOL
		' Declare Abstract Function DeleteReplacement (Byval What As BSTR) As Variant Ptr
		' Declare Abstract Function Get_ReplacementList (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Let_ReplacementList (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_ReplaceText () As VARIANT_BOOL
		' Declare Abstract Function Let_ReplaceText () As VARIANT_BOOL
		' Declare Abstract Function Get_TwoInitialCapitals () As VARIANT_BOOL
		' Declare Abstract Function Let_TwoInitialCapitals () As VARIANT_BOOL
		' Declare Abstract Function Get_CorrectSentenceCap () As VARIANT_BOOL
		' Declare Abstract Function Let_CorrectSentenceCap () As VARIANT_BOOL
		' Declare Abstract Function Get_CorrectCapsLock () As VARIANT_BOOL
		' Declare Abstract Function Let_CorrectCapsLock () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayAutoCorrectOptions () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayAutoCorrectOptions () As VARIANT_BOOL
		' Declare Abstract Function Get_AutoExpandListRange () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoExpandListRange () As VARIANT_BOOL
		' Declare Abstract Function Get_AutoFillFormulasInLists () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoFillFormulasInLists () As VARIANT_BOOL
	End Type 'AutoCorrect_

	Type Border_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Color () As Variant Ptr
		' Declare Abstract Function Let_Color () As Variant Ptr
		' Declare Abstract Function Get_ColorIndex () As Variant Ptr
		' Declare Abstract Function Let_ColorIndex () As Variant Ptr
		' Declare Abstract Function Get_LineStyle () As Variant Ptr
		' Declare Abstract Function Let_LineStyle () As Variant Ptr
		' Declare Abstract Function Get_Weight () As Variant Ptr
		' Declare Abstract Function Let_Weight () As Variant Ptr
		' Declare Abstract Function Get_ThemeColor () As Variant Ptr
		' Declare Abstract Function Let_ThemeColor () As Variant Ptr
		' Declare Abstract Function Get_TintAndShade () As Variant Ptr
		' Declare Abstract Function Let_TintAndShade () As Variant Ptr
	End Type 'Border_

	Type Interior_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Color () As Variant Ptr
		' Declare Abstract Function Let_Color () As Variant Ptr
		' Declare Abstract Function Get_ColorIndex () As Variant Ptr
		' Declare Abstract Function Let_ColorIndex () As Variant Ptr
		' Declare Abstract Function Get_InvertIfNegative () As Variant Ptr
		' Declare Abstract Function Let_InvertIfNegative () As Variant Ptr
		' Declare Abstract Function Get_Pattern () As Variant Ptr
		' Declare Abstract Function Let_Pattern () As Variant Ptr
		' Declare Abstract Function Get_PatternColor () As Variant Ptr
		' Declare Abstract Function Let_PatternColor () As Variant Ptr
		' Declare Abstract Function Get_PatternColorIndex () As Variant Ptr
		' Declare Abstract Function Let_PatternColorIndex () As Variant Ptr
		' Declare Abstract Function Get_ThemeColor () As Variant Ptr
		' Declare Abstract Function Let_ThemeColor () As Variant Ptr
		' Declare Abstract Function Get_TintAndShade () As Variant Ptr
		' Declare Abstract Function Let_TintAndShade () As Variant Ptr
		' Declare Abstract Function Get_PatternThemeColor () As Variant Ptr
		' Declare Abstract Function Let_PatternThemeColor () As Variant Ptr
		' Declare Abstract Function Get_PatternTintAndShade () As Variant Ptr
		' Declare Abstract Function Let_PatternTintAndShade () As Variant Ptr
		' Declare Abstract Function Get_Gradient () As IDispatch Ptr
	End Type 'Interior_

	Type ChartFillFormat_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function OneColorGradient (Byval Style As Office.MsoGradientStyle, Byval Variant As Long, Byval Degree As Single) As HRESULT
		' Declare Abstract Function TwoColorGradient (Byval Style As Office.MsoGradientStyle, Byval Variant As Long) As HRESULT
		' Declare Abstract Function PresetTextured (Byval PresetTexture As Office.MsoPresetTexture) As HRESULT
		' Declare Abstract Function Solid () As HRESULT
		' Declare Abstract Function Patterned (Byval Pattern As Office.MsoPatternType) As HRESULT
		' Declare Abstract Function UserPicture (Byval PictureFile As Variant Ptr, Byval PictureFormat As Variant Ptr, Byval PictureStackUnit As Variant Ptr, Byval PicturePlacement As Variant Ptr) As HRESULT
		' Declare Abstract Function UserTextured (Byval TextureFile As BSTR) As HRESULT
		' Declare Abstract Function PresetGradient (Byval Style As Office.MsoGradientStyle, Byval Variant As Long, Byval PresetGradientType As Office.MsoPresetGradientType) As HRESULT
		' Declare Abstract Function Get_BackColor () As ChartColorFormat Ptr
		' Declare Abstract Function Get_ForeColor () As ChartColorFormat Ptr
		' Declare Abstract Function Get_GradientColorType () As Office.MsoGradientColorType
		' Declare Abstract Function Get_GradientDegree () As Single
		' Declare Abstract Function Get_GradientStyle () As Office.MsoGradientStyle
		' Declare Abstract Function Get_GradientVariant () As Long
		' Declare Abstract Function Get_Pattern () As Office.MsoPatternType
		' Declare Abstract Function Get_PresetGradientType () As Office.MsoPresetGradientType
		' Declare Abstract Function Get_PresetTexture () As Office.MsoPresetTexture
		' Declare Abstract Function Get_TextureName () As BSTR
		' Declare Abstract Function Get_TextureType () As Office.MsoTextureType
		' Declare Abstract Function Get_Type () As Office.MsoFillType
		' Declare Abstract Function Get_Visible () As Office.MsoTriState
		' Declare Abstract Function Let_Visible () As Office.MsoTriState
	End Type 'ChartFillFormat_

	Type ChartColorFormat_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_SchemeColor () As Long
		' Declare Abstract Function Let_SchemeColor () As Long
		' Declare Abstract Function Get_RGB () As Long
		' Declare Abstract Function Get__Default () As Long
		' Declare Abstract Function Get_Type () As Long
	End Type 'ChartColorFormat_

	Type Axis_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_AxisBetweenCategories () As VARIANT_BOOL
		' Declare Abstract Function Let_AxisBetweenCategories () As VARIANT_BOOL
		' Declare Abstract Function Get_AxisGroup () As XlAxisGroup
		' Declare Abstract Function Get_AxisTitle () As AxisTitle Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get_CategoryNames () As Variant Ptr
		' Declare Abstract Function Let_CategoryNames () As Variant Ptr
		' Declare Abstract Function Get_Crosses () As XlAxisCrosses
		' Declare Abstract Function Let_Crosses () As XlAxisCrosses
		' Declare Abstract Function Get_CrossesAt () As Double
		' Declare Abstract Function Let_CrossesAt () As Double
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_HasMajorGridlines () As VARIANT_BOOL
		' Declare Abstract Function Let_HasMajorGridlines () As VARIANT_BOOL
		' Declare Abstract Function Get_HasMinorGridlines () As VARIANT_BOOL
		' Declare Abstract Function Let_HasMinorGridlines () As VARIANT_BOOL
		' Declare Abstract Function Get_HasTitle () As VARIANT_BOOL
		' Declare Abstract Function Let_HasTitle () As VARIANT_BOOL
		' Declare Abstract Function Get_MajorGridlines () As Gridlines Ptr
		' Declare Abstract Function Get_MajorTickMark () As XlTickMark
		' Declare Abstract Function Let_MajorTickMark () As XlTickMark
		' Declare Abstract Function Get_MajorUnit () As Double
		' Declare Abstract Function Let_MajorUnit () As Double
		' Declare Abstract Function Get_MajorUnitIsAuto () As VARIANT_BOOL
		' Declare Abstract Function Let_MajorUnitIsAuto () As VARIANT_BOOL
		' Declare Abstract Function Get_MaximumScale () As Double
		' Declare Abstract Function Let_MaximumScale () As Double
		' Declare Abstract Function Get_MaximumScaleIsAuto () As VARIANT_BOOL
		' Declare Abstract Function Let_MaximumScaleIsAuto () As VARIANT_BOOL
		' Declare Abstract Function Get_MinimumScale () As Double
		' Declare Abstract Function Let_MinimumScale () As Double
		' Declare Abstract Function Get_MinimumScaleIsAuto () As VARIANT_BOOL
		' Declare Abstract Function Let_MinimumScaleIsAuto () As VARIANT_BOOL
		' Declare Abstract Function Get_MinorGridlines () As Gridlines Ptr
		' Declare Abstract Function Get_MinorTickMark () As XlTickMark
		' Declare Abstract Function Let_MinorTickMark () As XlTickMark
		' Declare Abstract Function Get_MinorUnit () As Double
		' Declare Abstract Function Let_MinorUnit () As Double
		' Declare Abstract Function Get_MinorUnitIsAuto () As VARIANT_BOOL
		' Declare Abstract Function Let_MinorUnitIsAuto () As VARIANT_BOOL
		' Declare Abstract Function Get_ReversePlotOrder () As VARIANT_BOOL
		' Declare Abstract Function Let_ReversePlotOrder () As VARIANT_BOOL
		' Declare Abstract Function Get_ScaleType () As XlScaleType
		' Declare Abstract Function Let_ScaleType () As XlScaleType
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_TickLabelPosition () As XlTickLabelPosition
		' Declare Abstract Function Let_TickLabelPosition () As XlTickLabelPosition
		' Declare Abstract Function Get_TickLabels () As TickLabels Ptr
		' Declare Abstract Function Get_TickLabelSpacing () As Long
		' Declare Abstract Function Let_TickLabelSpacing () As Long
		' Declare Abstract Function Get_TickMarkSpacing () As Long
		' Declare Abstract Function Let_TickMarkSpacing () As Long
		' Declare Abstract Function Get_Type () As XlAxisType
		' Declare Abstract Function Let_Type () As XlAxisType
		' Declare Abstract Function Get_BaseUnit () As XlTimeUnit
		' Declare Abstract Function Let_BaseUnit () As XlTimeUnit
		' Declare Abstract Function Get_BaseUnitIsAuto () As VARIANT_BOOL
		' Declare Abstract Function Let_BaseUnitIsAuto () As VARIANT_BOOL
		' Declare Abstract Function Get_MajorUnitScale () As XlTimeUnit
		' Declare Abstract Function Let_MajorUnitScale () As XlTimeUnit
		' Declare Abstract Function Get_MinorUnitScale () As XlTimeUnit
		' Declare Abstract Function Let_MinorUnitScale () As XlTimeUnit
		' Declare Abstract Function Get_CategoryType () As XlCategoryType
		' Declare Abstract Function Let_CategoryType () As XlCategoryType
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Get_DisplayUnit () As XlDisplayUnit
		' Declare Abstract Function Let_DisplayUnit () As XlDisplayUnit
		' Declare Abstract Function Get_DisplayUnitCustom () As Double
		' Declare Abstract Function Let_DisplayUnitCustom () As Double
		' Declare Abstract Function Get_HasDisplayUnitLabel () As VARIANT_BOOL
		' Declare Abstract Function Let_HasDisplayUnitLabel () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayUnitLabel () As DisplayUnitLabel Ptr
		' Declare Abstract Function Get_LogBase () As Double
		' Declare Abstract Function Let_LogBase () As Double
		' Declare Abstract Function Get_TickLabelSpacingIsAuto () As VARIANT_BOOL
		' Declare Abstract Function Let_TickLabelSpacingIsAuto () As VARIANT_BOOL
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
	End Type 'Axis_

	Type ChartTitle_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Fill () As ChartFillFormat Ptr
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_IncludeInLayout () As VARIANT_BOOL
		' Declare Abstract Function Let_IncludeInLayout () As VARIANT_BOOL
		' Declare Abstract Function Get_Position () As XlChartElementPosition
		' Declare Abstract Function Let_Position () As XlChartElementPosition
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_FormulaR1C1 () As BSTR
		' Declare Abstract Function Let_FormulaR1C1 () As BSTR
		' Declare Abstract Function Get_FormulaLocal () As BSTR
		' Declare Abstract Function Let_FormulaLocal () As BSTR
		' Declare Abstract Function Get_FormulaR1C1Local () As BSTR
		' Declare Abstract Function Let_FormulaR1C1Local () As BSTR
	End Type 'ChartTitle_

	Type AxisTitle_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Fill () As ChartFillFormat Ptr
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_IncludeInLayout () As VARIANT_BOOL
		' Declare Abstract Function Let_IncludeInLayout () As VARIANT_BOOL
		' Declare Abstract Function Get_Position () As XlChartElementPosition
		' Declare Abstract Function Let_Position () As XlChartElementPosition
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_FormulaR1C1 () As BSTR
		' Declare Abstract Function Let_FormulaR1C1 () As BSTR
		' Declare Abstract Function Get_FormulaLocal () As BSTR
		' Declare Abstract Function Let_FormulaLocal () As BSTR
		' Declare Abstract Function Get_FormulaR1C1Local () As BSTR
		' Declare Abstract Function Let_FormulaR1C1Local () As BSTR
	End Type 'AxisTitle_

	Type ChartGroup_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_AxisGroup () As XlAxisGroup
		' Declare Abstract Function Let_AxisGroup () As XlAxisGroup
		' Declare Abstract Function Get_DoughnutHoleSize () As Long
		' Declare Abstract Function Let_DoughnutHoleSize () As Long
		' Declare Abstract Function Get_DownBars () As DownBars Ptr
		' Declare Abstract Function Get_DropLines () As DropLines Ptr
		' Declare Abstract Function Get_FirstSliceAngle () As Long
		' Declare Abstract Function Let_FirstSliceAngle () As Long
		' Declare Abstract Function Get_GapWidth () As Long
		' Declare Abstract Function Let_GapWidth () As Long
		' Declare Abstract Function Get_HasDropLines () As VARIANT_BOOL
		' Declare Abstract Function Let_HasDropLines () As VARIANT_BOOL
		' Declare Abstract Function Get_HasHiLoLines () As VARIANT_BOOL
		' Declare Abstract Function Let_HasHiLoLines () As VARIANT_BOOL
		' Declare Abstract Function Get_HasRadarAxisLabels () As VARIANT_BOOL
		' Declare Abstract Function Let_HasRadarAxisLabels () As VARIANT_BOOL
		' Declare Abstract Function Get_HasSeriesLines () As VARIANT_BOOL
		' Declare Abstract Function Let_HasSeriesLines () As VARIANT_BOOL
		' Declare Abstract Function Get_HasUpDownBars () As VARIANT_BOOL
		' Declare Abstract Function Let_HasUpDownBars () As VARIANT_BOOL
		' Declare Abstract Function Get_HiLoLines () As HiLoLines Ptr
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Overlap () As Long
		' Declare Abstract Function Let_Overlap () As Long
		' Declare Abstract Function Get_RadarAxisLabels () As TickLabels Ptr
		' Declare Abstract Function SeriesCollection (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_SeriesLines () As SeriesLines Ptr
		' Declare Abstract Function Get_SubType () As Long
		' Declare Abstract Function Let_SubType () As Long
		' Declare Abstract Function Get_Type () As Long
		' Declare Abstract Function Let_Type () As Long
		' Declare Abstract Function Get_UpBars () As UpBars Ptr
		' Declare Abstract Function Get_VaryByCategories () As VARIANT_BOOL
		' Declare Abstract Function Let_VaryByCategories () As VARIANT_BOOL
		' Declare Abstract Function Get_SizeRepresents () As XlSizeRepresents
		' Declare Abstract Function Let_SizeRepresents () As XlSizeRepresents
		' Declare Abstract Function Get_BubbleScale () As Long
		' Declare Abstract Function Let_BubbleScale () As Long
		' Declare Abstract Function Get_ShowNegativeBubbles () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowNegativeBubbles () As VARIANT_BOOL
		' Declare Abstract Function Get_SplitType () As XlChartSplitType
		' Declare Abstract Function Let_SplitType () As XlChartSplitType
		' Declare Abstract Function Get_SplitValue () As Variant Ptr
		' Declare Abstract Function Let_SplitValue () As Variant Ptr
		' Declare Abstract Function Get_SecondPlotSize () As Long
		' Declare Abstract Function Let_SecondPlotSize () As Long
		' Declare Abstract Function Get_Has3DShading () As VARIANT_BOOL
		' Declare Abstract Function Let_Has3DShading () As VARIANT_BOOL
		' Declare Abstract Function FullCategoryCollection (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function CategoryCollection (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_BinsType () As XlBinsType
		' Declare Abstract Function Let_BinsType () As XlBinsType
		' Declare Abstract Function Get_BinWidthValue () As Double
		' Declare Abstract Function Let_BinWidthValue () As Double
		' Declare Abstract Function Get_BinsCountValue () As Long
		' Declare Abstract Function Let_BinsCountValue () As Long
		' Declare Abstract Function Get_BinsOverflowEnabled () As VARIANT_BOOL
		' Declare Abstract Function Let_BinsOverflowEnabled () As VARIANT_BOOL
		' Declare Abstract Function Get_BinsOverflowValue () As Double
		' Declare Abstract Function Let_BinsOverflowValue () As Double
		' Declare Abstract Function Get_BinsUnderflowEnabled () As VARIANT_BOOL
		' Declare Abstract Function Let_BinsUnderflowEnabled () As VARIANT_BOOL
		' Declare Abstract Function Get_BinsUnderflowValue () As Double
		' Declare Abstract Function Let_BinsUnderflowValue () As Double
	End Type 'ChartGroup_

	Type ChartGroups_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As ChartGroup Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'ChartGroups_

	Type Axes_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Type_v As XlAxisType, Byval AxisGroup As XlAxisGroup) As Axis Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
		' Declare Abstract Function _Default (Byval Type_v As XlAxisType, Byval AxisGroup As XlAxisGroup) As Axis Ptr
	End Type 'Axes_

	Type Points_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Long) As Point Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
		' Declare Abstract Function _Default (Byval Index As Long) As Point Ptr
	End Type 'Points_

	Type Point_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _ApplyDataLabels (Byval Type_v As XlDataLabelsType, Byval LegendKey As Variant Ptr, Byval AutoText As Variant Ptr, Byval HasLeaderLines As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function ClearFormats () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function Get_DataLabel () As DataLabel Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_Explosion () As Long
		' Declare Abstract Function Let_Explosion () As Long
		' Declare Abstract Function Get_HasDataLabel () As VARIANT_BOOL
		' Declare Abstract Function Let_HasDataLabel () As VARIANT_BOOL
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_InvertIfNegative () As VARIANT_BOOL
		' Declare Abstract Function Let_InvertIfNegative () As VARIANT_BOOL
		' Declare Abstract Function Get_MarkerBackgroundColor () As Long
		' Declare Abstract Function Let_MarkerBackgroundColor () As Long
		' Declare Abstract Function Get_MarkerBackgroundColorIndex () As XlColorIndex
		' Declare Abstract Function Let_MarkerBackgroundColorIndex () As XlColorIndex
		' Declare Abstract Function Get_MarkerForegroundColor () As Long
		' Declare Abstract Function Let_MarkerForegroundColor () As Long
		' Declare Abstract Function Get_MarkerForegroundColorIndex () As XlColorIndex
		' Declare Abstract Function Let_MarkerForegroundColorIndex () As XlColorIndex
		' Declare Abstract Function Get_MarkerSize () As Long
		' Declare Abstract Function Let_MarkerSize () As Long
		' Declare Abstract Function Get_MarkerStyle () As XlMarkerStyle
		' Declare Abstract Function Let_MarkerStyle () As XlMarkerStyle
		' Declare Abstract Function Paste () As Variant Ptr
		' Declare Abstract Function Get_PictureType () As XlChartPictureType
		' Declare Abstract Function Let_PictureType () As XlChartPictureType
		' Declare Abstract Function Get_PictureUnit () As Long
		' Declare Abstract Function Let_PictureUnit () As Long
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_ApplyPictToSides () As VARIANT_BOOL
		' Declare Abstract Function Let_ApplyPictToSides () As VARIANT_BOOL
		' Declare Abstract Function Get_ApplyPictToFront () As VARIANT_BOOL
		' Declare Abstract Function Let_ApplyPictToFront () As VARIANT_BOOL
		' Declare Abstract Function Get_ApplyPictToEnd () As VARIANT_BOOL
		' Declare Abstract Function Let_ApplyPictToEnd () As VARIANT_BOOL
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Get_SecondaryPlot () As VARIANT_BOOL
		' Declare Abstract Function Let_SecondaryPlot () As VARIANT_BOOL
		' Declare Abstract Function Get_Fill () As ChartFillFormat Ptr
		' Declare Abstract Function ApplyDataLabels (Byval Type_v As XlDataLabelsType, Byval LegendKey As Variant Ptr, Byval AutoText As Variant Ptr, Byval HasLeaderLines As Variant Ptr, Byval ShowSeriesName As Variant Ptr, Byval ShowCategoryName As Variant Ptr, Byval ShowValue As Variant Ptr, Byval ShowPercentage As Variant Ptr, Byval ShowBubbleSize As Variant Ptr, Byval Separator As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_Has3DEffect () As VARIANT_BOOL
		' Declare Abstract Function Let_Has3DEffect () As VARIANT_BOOL
		' Declare Abstract Function Get_PictureUnit2 () As Double
		' Declare Abstract Function Let_PictureUnit2 () As Double
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function PieSliceLocation (Byval loc As XlPieSliceLocation, Byval Index As XlPieSliceIndex) As Double
		' Declare Abstract Function Get_IsTotal () As VARIANT_BOOL
		' Declare Abstract Function Let_IsTotal () As VARIANT_BOOL
	End Type 'Point_

	Type Series_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _ApplyDataLabels (Byval Type_v As XlDataLabelsType, Byval LegendKey As Variant Ptr, Byval AutoText As Variant Ptr, Byval HasLeaderLines As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_AxisGroup () As XlAxisGroup
		' Declare Abstract Function Let_AxisGroup () As XlAxisGroup
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function ClearFormats () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function DataLabels (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function ErrorBar (Byval Direction As XlErrorBarDirection, Byval Include As XlErrorBarInclude, Byval Type_v As XlErrorBarType, Byval Amount As Variant Ptr, Byval MinusValues As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_ErrorBars () As ErrorBars Ptr
		' Declare Abstract Function Get_Explosion () As Long
		' Declare Abstract Function Let_Explosion () As Long
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_FormulaLocal () As BSTR
		' Declare Abstract Function Let_FormulaLocal () As BSTR
		' Declare Abstract Function Get_FormulaR1C1 () As BSTR
		' Declare Abstract Function Let_FormulaR1C1 () As BSTR
		' Declare Abstract Function Get_FormulaR1C1Local () As BSTR
		' Declare Abstract Function Let_FormulaR1C1Local () As BSTR
		' Declare Abstract Function Get_HasDataLabels () As VARIANT_BOOL
		' Declare Abstract Function Let_HasDataLabels () As VARIANT_BOOL
		' Declare Abstract Function Get_HasErrorBars () As VARIANT_BOOL
		' Declare Abstract Function Let_HasErrorBars () As VARIANT_BOOL
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Fill () As ChartFillFormat Ptr
		' Declare Abstract Function Get_InvertIfNegative () As VARIANT_BOOL
		' Declare Abstract Function Let_InvertIfNegative () As VARIANT_BOOL
		' Declare Abstract Function Get_MarkerBackgroundColor () As Long
		' Declare Abstract Function Let_MarkerBackgroundColor () As Long
		' Declare Abstract Function Get_MarkerBackgroundColorIndex () As XlColorIndex
		' Declare Abstract Function Let_MarkerBackgroundColorIndex () As XlColorIndex
		' Declare Abstract Function Get_MarkerForegroundColor () As Long
		' Declare Abstract Function Let_MarkerForegroundColor () As Long
		' Declare Abstract Function Get_MarkerForegroundColorIndex () As XlColorIndex
		' Declare Abstract Function Let_MarkerForegroundColorIndex () As XlColorIndex
		' Declare Abstract Function Get_MarkerSize () As Long
		' Declare Abstract Function Let_MarkerSize () As Long
		' Declare Abstract Function Get_MarkerStyle () As XlMarkerStyle
		' Declare Abstract Function Let_MarkerStyle () As XlMarkerStyle
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Paste () As Variant Ptr
		' Declare Abstract Function Get_PictureType () As XlChartPictureType
		' Declare Abstract Function Let_PictureType () As XlChartPictureType
		' Declare Abstract Function Get_PictureUnit () As Long
		' Declare Abstract Function Let_PictureUnit () As Long
		' Declare Abstract Function Get_PlotOrder () As Long
		' Declare Abstract Function Let_PlotOrder () As Long
		' Declare Abstract Function Points (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_Smooth () As VARIANT_BOOL
		' Declare Abstract Function Let_Smooth () As VARIANT_BOOL
		' Declare Abstract Function Trendlines (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_Type () As Long
		' Declare Abstract Function Let_Type () As Long
		' Declare Abstract Function Get_ChartType () As XlChartType
		' Declare Abstract Function Let_ChartType () As XlChartType
		' Declare Abstract Function ApplyCustomType (Byval ChartType As XlChartType) As HRESULT
		' Declare Abstract Function Get_Values () As Variant Ptr
		' Declare Abstract Function Let_Values () As Variant Ptr
		' Declare Abstract Function Get_XValues () As Variant Ptr
		' Declare Abstract Function Let_XValues () As Variant Ptr
		' Declare Abstract Function Get_BubbleSizes () As Variant Ptr
		' Declare Abstract Function Let_BubbleSizes () As Variant Ptr
		' Declare Abstract Function Get_BarShape () As XlBarShape
		' Declare Abstract Function Let_BarShape () As XlBarShape
		' Declare Abstract Function Get_ApplyPictToSides () As VARIANT_BOOL
		' Declare Abstract Function Let_ApplyPictToSides () As VARIANT_BOOL
		' Declare Abstract Function Get_ApplyPictToFront () As VARIANT_BOOL
		' Declare Abstract Function Let_ApplyPictToFront () As VARIANT_BOOL
		' Declare Abstract Function Get_ApplyPictToEnd () As VARIANT_BOOL
		' Declare Abstract Function Let_ApplyPictToEnd () As VARIANT_BOOL
		' Declare Abstract Function Get_Has3DEffect () As VARIANT_BOOL
		' Declare Abstract Function Let_Has3DEffect () As VARIANT_BOOL
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Get_HasLeaderLines () As VARIANT_BOOL
		' Declare Abstract Function Let_HasLeaderLines () As VARIANT_BOOL
		' Declare Abstract Function Get_LeaderLines () As LeaderLines Ptr
		' Declare Abstract Function ApplyDataLabels (Byval Type_v As XlDataLabelsType, Byval LegendKey As Variant Ptr, Byval AutoText As Variant Ptr, Byval HasLeaderLines As Variant Ptr, Byval ShowSeriesName As Variant Ptr, Byval ShowCategoryName As Variant Ptr, Byval ShowValue As Variant Ptr, Byval ShowPercentage As Variant Ptr, Byval ShowBubbleSize As Variant Ptr, Byval Separator As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_PictureUnit2 () As Double
		' Declare Abstract Function Let_PictureUnit2 () As Double
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
		' Declare Abstract Function Get_PlotColorIndex () As Long
		' Declare Abstract Function Get_InvertColor () As Long
		' Declare Abstract Function Let_InvertColor () As Long
		' Declare Abstract Function Get_InvertColorIndex () As Long
		' Declare Abstract Function Let_InvertColorIndex () As Long
		' Declare Abstract Function Get_IsFiltered () As VARIANT_BOOL
		' Declare Abstract Function Let_IsFiltered () As VARIANT_BOOL
		' Declare Abstract Function Get_ParentDataLabelOption () As XlParentDataLabelOptions
		' Declare Abstract Function Let_ParentDataLabelOption () As XlParentDataLabelOptions
		' Declare Abstract Function Get_QuartileCalculationInclusiveMedian () As VARIANT_BOOL
		' Declare Abstract Function Let_QuartileCalculationInclusiveMedian () As VARIANT_BOOL
	End Type 'Series_

	Type SeriesCollection_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Source As Variant Ptr, Byval Rowcol As XlRowCol, Byval SeriesLabels As Variant Ptr, Byval CategoryLabels As Variant Ptr, Byval Replace As Variant Ptr) As Series Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Extend (Byval Source As Variant Ptr, Byval Rowcol As Variant Ptr, Byval CategoryLabels As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As Series Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
		' Declare Abstract Function Paste (Byval Rowcol As XlRowCol, Byval SeriesLabels As Variant Ptr, Byval CategoryLabels As Variant Ptr, Byval Replace As Variant Ptr, Byval NewSeries_v As Variant Ptr) As Variant Ptr
		' Declare Abstract Function NewSeries () As Series Ptr
		' Declare Abstract Function _Default (Byval Index As Variant Ptr) As Series Ptr
	End Type 'SeriesCollection_

	Type DataLabel_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Fill () As ChartFillFormat Ptr
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_AutoText () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoText () As VARIANT_BOOL
		' Declare Abstract Function Get_NumberFormat () As BSTR
		' Declare Abstract Function Let_NumberFormat () As BSTR
		' Declare Abstract Function Get_NumberFormatLinked () As VARIANT_BOOL
		' Declare Abstract Function Let_NumberFormatLinked () As VARIANT_BOOL
		' Declare Abstract Function Get_NumberFormatLocal () As Variant Ptr
		' Declare Abstract Function Let_NumberFormatLocal () As Variant Ptr
		' Declare Abstract Function Get_ShowLegendKey () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowLegendKey () As VARIANT_BOOL
		' Declare Abstract Function Get_Type () As Variant Ptr
		' Declare Abstract Function Let_Type () As Variant Ptr
		' Declare Abstract Function Get_Position () As XlDataLabelPosition
		' Declare Abstract Function Let_Position () As XlDataLabelPosition
		' Declare Abstract Function Get_ShowSeriesName () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowSeriesName () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowCategoryName () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowCategoryName () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowValue () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowValue () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowPercentage () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowPercentage () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowBubbleSize () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowBubbleSize () As VARIANT_BOOL
		' Declare Abstract Function Get_Separator () As Variant Ptr
		' Declare Abstract Function Let_Separator () As Variant Ptr
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
		' Declare Abstract Function Get__Height () As Double
		' Declare Abstract Function Get__Width () As Double
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_FormulaR1C1 () As BSTR
		' Declare Abstract Function Let_FormulaR1C1 () As BSTR
		' Declare Abstract Function Get_FormulaLocal () As BSTR
		' Declare Abstract Function Let_FormulaLocal () As BSTR
		' Declare Abstract Function Get_FormulaR1C1Local () As BSTR
		' Declare Abstract Function Let_FormulaR1C1Local () As BSTR
		' Declare Abstract Function Get_ShowRange () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowRange () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
	End Type 'DataLabel_

	Type DataLabels_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Fill () As ChartFillFormat Ptr
		' Declare Abstract Function _Dummy9 () As HRESULT
		' Declare Abstract Function _Dummy10 () As HRESULT
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function _Dummy13 () As HRESULT
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function _Dummy16 () As HRESULT
		' Declare Abstract Function _Dummy17 () As HRESULT
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_AutoText () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoText () As VARIANT_BOOL
		' Declare Abstract Function Get_NumberFormat () As BSTR
		' Declare Abstract Function Let_NumberFormat () As BSTR
		' Declare Abstract Function Get_NumberFormatLinked () As VARIANT_BOOL
		' Declare Abstract Function Let_NumberFormatLinked () As VARIANT_BOOL
		' Declare Abstract Function Get_NumberFormatLocal () As Variant Ptr
		' Declare Abstract Function Let_NumberFormatLocal () As Variant Ptr
		' Declare Abstract Function Get_ShowLegendKey () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowLegendKey () As VARIANT_BOOL
		' Declare Abstract Function Get_Type () As Variant Ptr
		' Declare Abstract Function Let_Type () As Variant Ptr
		' Declare Abstract Function Get_Position () As XlDataLabelPosition
		' Declare Abstract Function Let_Position () As XlDataLabelPosition
		' Declare Abstract Function Get_ShowSeriesName () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowSeriesName () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowCategoryName () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowCategoryName () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowValue () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowValue () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowPercentage () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowPercentage () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowBubbleSize () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowBubbleSize () As VARIANT_BOOL
		' Declare Abstract Function Get_Separator () As Variant Ptr
		' Declare Abstract Function Let_Separator () As Variant Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As DataLabel Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
		' Declare Abstract Function _Default (Byval Index As Variant Ptr) As DataLabel Ptr
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
		' Declare Abstract Function Propagate (Byval Index As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_ShowRange () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowRange () As VARIANT_BOOL
	End Type 'DataLabels_

	Type LegendEntry_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_LegendKey () As LegendKey Ptr
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
	End Type 'LegendEntry_

	Type LegendEntries_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As LegendEntry Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
		' Declare Abstract Function _Default (Byval Index As Variant Ptr) As LegendEntry Ptr
	End Type 'LegendEntries_

	Type LegendKey_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function ClearFormats () As Variant Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Fill () As ChartFillFormat Ptr
		' Declare Abstract Function Get_InvertIfNegative () As VARIANT_BOOL
		' Declare Abstract Function Let_InvertIfNegative () As VARIANT_BOOL
		' Declare Abstract Function Get_MarkerBackgroundColor () As Long
		' Declare Abstract Function Let_MarkerBackgroundColor () As Long
		' Declare Abstract Function Get_MarkerBackgroundColorIndex () As XlColorIndex
		' Declare Abstract Function Let_MarkerBackgroundColorIndex () As XlColorIndex
		' Declare Abstract Function Get_MarkerForegroundColor () As Long
		' Declare Abstract Function Let_MarkerForegroundColor () As Long
		' Declare Abstract Function Get_MarkerForegroundColorIndex () As XlColorIndex
		' Declare Abstract Function Let_MarkerForegroundColorIndex () As XlColorIndex
		' Declare Abstract Function Get_MarkerSize () As Long
		' Declare Abstract Function Let_MarkerSize () As Long
		' Declare Abstract Function Get_MarkerStyle () As XlMarkerStyle
		' Declare Abstract Function Let_MarkerStyle () As XlMarkerStyle
		' Declare Abstract Function Get_PictureType () As Long
		' Declare Abstract Function Let_PictureType () As Long
		' Declare Abstract Function Get_PictureUnit () As Long
		' Declare Abstract Function Let_PictureUnit () As Long
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_Smooth () As VARIANT_BOOL
		' Declare Abstract Function Let_Smooth () As VARIANT_BOOL
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Get_PictureUnit2 () As Double
		' Declare Abstract Function Let_PictureUnit2 () As Double
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
	End Type 'LegendKey_

	Type Trendlines_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Type_v As XlTrendlineType, Byval Order As Variant Ptr, Byval Period As Variant Ptr, Byval Forward As Variant Ptr, Byval Backward As Variant Ptr, Byval Intercept As Variant Ptr, Byval DisplayEquation As Variant Ptr, Byval DisplayRSquared As Variant Ptr, Byval Name As Variant Ptr) As Trendline Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As Trendline Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
		' Declare Abstract Function _Default (Byval Index As Variant Ptr) As Trendline Ptr
	End Type 'Trendlines_

	Type Trendline_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Backward () As Long
		' Declare Abstract Function Let_Backward () As Long
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function ClearFormats () As Variant Ptr
		' Declare Abstract Function Get_DataLabel () As DataLabel Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_DisplayEquation () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayEquation () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayRSquared () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayRSquared () As VARIANT_BOOL
		' Declare Abstract Function Get_Forward () As Long
		' Declare Abstract Function Let_Forward () As Long
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Intercept () As Double
		' Declare Abstract Function Let_Intercept () As Double
		' Declare Abstract Function Get_InterceptIsAuto () As VARIANT_BOOL
		' Declare Abstract Function Let_InterceptIsAuto () As VARIANT_BOOL
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_NameIsAuto () As VARIANT_BOOL
		' Declare Abstract Function Let_NameIsAuto () As VARIANT_BOOL
		' Declare Abstract Function Get_Order () As Long
		' Declare Abstract Function Let_Order () As Long
		' Declare Abstract Function Get_Period () As Long
		' Declare Abstract Function Let_Period () As Long
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_Type () As XlTrendlineType
		' Declare Abstract Function Let_Type () As XlTrendlineType
		' Declare Abstract Function Get_Backward2 () As Double
		' Declare Abstract Function Let_Backward2 () As Double
		' Declare Abstract Function Get_Forward2 () As Double
		' Declare Abstract Function Let_Forward2 () As Double
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
	End Type 'Trendline_

	Type Corners_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Select_ () As Variant Ptr
	End Type 'Corners_

	Type SeriesLines_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
	End Type 'SeriesLines_

	Type HiLoLines_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
	End Type 'HiLoLines_

	Type Gridlines_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
	End Type 'Gridlines_

	Type DropLines_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
	End Type 'DropLines_

	Type LeaderLines_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Select_ () As HRESULT
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
	End Type 'LeaderLines_

	Type UpBars_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Fill () As ChartFillFormat Ptr
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
	End Type 'UpBars_

	Type DownBars_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Fill () As ChartFillFormat Ptr
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
	End Type 'DownBars_

	Type Floor_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function ClearFormats () As Variant Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Fill () As ChartFillFormat Ptr
		' Declare Abstract Function Get_PictureType () As Variant Ptr
		' Declare Abstract Function Let_PictureType () As Variant Ptr
		' Declare Abstract Function Paste () As HRESULT
		' Declare Abstract Function Get_Thickness () As Long
		' Declare Abstract Function Let_Thickness () As Long
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
	End Type 'Floor_

	Type Walls_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function ClearFormats () As Variant Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Fill () As ChartFillFormat Ptr
		' Declare Abstract Function Get_PictureType () As Variant Ptr
		' Declare Abstract Function Let_PictureType () As Variant Ptr
		' Declare Abstract Function Paste () As HRESULT
		' Declare Abstract Function Get_PictureUnit () As Variant Ptr
		' Declare Abstract Function Let_PictureUnit () As Variant Ptr
		' Declare Abstract Function Get_Thickness () As Long
		' Declare Abstract Function Let_Thickness () As Long
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
	End Type 'Walls_

	Type TickLabels_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Get_NumberFormat () As BSTR
		' Declare Abstract Function Let_NumberFormat () As BSTR
		' Declare Abstract Function Get_NumberFormatLinked () As VARIANT_BOOL
		' Declare Abstract Function Let_NumberFormatLinked () As VARIANT_BOOL
		' Declare Abstract Function Get_NumberFormatLocal () As Variant Ptr
		' Declare Abstract Function Let_NumberFormatLocal () As Variant Ptr
		' Declare Abstract Function Get_Orientation () As XlTickLabelOrientation
		' Declare Abstract Function Let_Orientation () As XlTickLabelOrientation
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_Depth () As Long
		' Declare Abstract Function Get_Offset () As Long
		' Declare Abstract Function Let_Offset () As Long
		' Declare Abstract Function Get_Alignment () As Long
		' Declare Abstract Function Let_Alignment () As Long
		' Declare Abstract Function Get_MultiLevel () As VARIANT_BOOL
		' Declare Abstract Function Let_MultiLevel () As VARIANT_BOOL
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
	End Type 'TickLabels_

	Type PlotArea_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function ClearFormats () As Variant Ptr
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Fill () As ChartFillFormat Ptr
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get__InsideLeft () As Double
		' Declare Abstract Function Get__InsideTop () As Double
		' Declare Abstract Function Get__InsideWidth () As Double
		' Declare Abstract Function Get__InsideHeight () As Double
		' Declare Abstract Function Get_InsideLeft () As Double
		' Declare Abstract Function Let_InsideLeft () As Double
		' Declare Abstract Function Get_InsideTop () As Double
		' Declare Abstract Function Let_InsideTop () As Double
		' Declare Abstract Function Get_InsideWidth () As Double
		' Declare Abstract Function Let_InsideWidth () As Double
		' Declare Abstract Function Get_InsideHeight () As Double
		' Declare Abstract Function Let_InsideHeight () As Double
		' Declare Abstract Function Get_Position () As XlChartElementPosition
		' Declare Abstract Function Let_Position () As XlChartElementPosition
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
	End Type 'PlotArea_

	Type ChartArea_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Clear () As Variant Ptr
		' Declare Abstract Function ClearContents () As Variant Ptr
		' Declare Abstract Function Copy () As Variant Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function ClearFormats () As Variant Ptr
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Fill () As ChartFillFormat Ptr
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
		' Declare Abstract Function Get_RoundedCorners () As VARIANT_BOOL
		' Declare Abstract Function Let_RoundedCorners () As VARIANT_BOOL
	End Type 'ChartArea_

	Type Legend_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function LegendEntries (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_Position () As XlLegendPosition
		' Declare Abstract Function Let_Position () As XlLegendPosition
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Clear () As Variant Ptr
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Fill () As ChartFillFormat Ptr
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_IncludeInLayout () As VARIANT_BOOL
		' Declare Abstract Function Let_IncludeInLayout () As VARIANT_BOOL
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
	End Type 'Legend_

	Type ErrorBars_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function ClearFormats () As Variant Ptr
		' Declare Abstract Function Get_EndStyle () As XlEndStyleCap
		' Declare Abstract Function Let_EndStyle () As XlEndStyleCap
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
	End Type 'ErrorBars_

	Type DataTable_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_ShowLegendKey () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowLegendKey () As VARIANT_BOOL
		' Declare Abstract Function Get_HasBorderHorizontal () As VARIANT_BOOL
		' Declare Abstract Function Let_HasBorderHorizontal () As VARIANT_BOOL
		' Declare Abstract Function Get_HasBorderVertical () As VARIANT_BOOL
		' Declare Abstract Function Let_HasBorderVertical () As VARIANT_BOOL
		' Declare Abstract Function Get_HasBorderOutline () As VARIANT_BOOL
		' Declare Abstract Function Let_HasBorderOutline () As VARIANT_BOOL
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Select_ () As HRESULT
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
	End Type 'DataTable_

	Type Phonetic_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_CharacterType () As Long
		' Declare Abstract Function Let_CharacterType () As Long
		' Declare Abstract Function Get_Alignment () As Long
		' Declare Abstract Function Let_Alignment () As Long
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
	End Type 'Phonetic_

	Type Shape_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Apply () As HRESULT
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Duplicate () As Shape Ptr
		' Declare Abstract Function Flip (Byval FlipCmd As Office.MsoFlipCmd) As HRESULT
		' Declare Abstract Function IncrementLeft (Byval Increment As Single) As HRESULT
		' Declare Abstract Function IncrementRotation (Byval Increment As Single) As HRESULT
		' Declare Abstract Function IncrementTop (Byval Increment As Single) As HRESULT
		' Declare Abstract Function PickUp () As HRESULT
		' Declare Abstract Function RerouteConnections () As HRESULT
		' Declare Abstract Function ScaleHeight (Byval Factor As Single, Byval RelativeToOriginalSize As Office.MsoTriState, Byval Scale As Variant Ptr) As HRESULT
		' Declare Abstract Function ScaleWidth (Byval Factor As Single, Byval RelativeToOriginalSize As Office.MsoTriState, Byval Scale As Variant Ptr) As HRESULT
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As HRESULT
		' Declare Abstract Function SetShapesDefaultProperties () As HRESULT
		' Declare Abstract Function Ungroup () As ShapeRange Ptr
		' Declare Abstract Function ZOrder (Byval ZOrderCmd As Office.MsoZOrderCmd) As HRESULT
		' Declare Abstract Function Get_Adjustments () As Adjustments Ptr
		' Declare Abstract Function Get_TextFrame () As TextFrame Ptr
		' Declare Abstract Function Get_AutoShapeType () As Office.MsoAutoShapeType
		' Declare Abstract Function Let_AutoShapeType () As Office.MsoAutoShapeType
		' Declare Abstract Function Get_Callout () As CalloutFormat Ptr
		' Declare Abstract Function Get_ConnectionSiteCount () As Long
		' Declare Abstract Function Get_Connector () As Office.MsoTriState
		' Declare Abstract Function Get_ConnectorFormat () As ConnectorFormat Ptr
		' Declare Abstract Function Get_Fill () As FillFormat Ptr
		' Declare Abstract Function Get_GroupItems () As GroupShapes Ptr
		' Declare Abstract Function Get_Height () As Single
		' Declare Abstract Function Let_Height () As Single
		' Declare Abstract Function Get_HorizontalFlip () As Office.MsoTriState
		' Declare Abstract Function Get_Left () As Single
		' Declare Abstract Function Let_Left () As Single
		' Declare Abstract Function Get_Line () As LineFormat Ptr
		' Declare Abstract Function Get_LockAspectRatio () As Office.MsoTriState
		' Declare Abstract Function Let_LockAspectRatio () As Office.MsoTriState
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_Nodes () As ShapeNodes Ptr
		' Declare Abstract Function Get_Rotation () As Single
		' Declare Abstract Function Let_Rotation () As Single
		' Declare Abstract Function Get_PictureFormat () As PictureFormat Ptr
		' Declare Abstract Function Get_Shadow () As ShadowFormat Ptr
		' Declare Abstract Function Get_TextEffect () As TextEffectFormat Ptr
		' Declare Abstract Function Get_ThreeD () As ThreeDFormat Ptr
		' Declare Abstract Function Get_Top () As Single
		' Declare Abstract Function Let_Top () As Single
		' Declare Abstract Function Get_Type () As Office.MsoShapeType
		' Declare Abstract Function Get_VerticalFlip () As Office.MsoTriState
		' Declare Abstract Function Get_Vertices () As Variant Ptr
		' Declare Abstract Function Get_Visible () As Office.MsoTriState
		' Declare Abstract Function Let_Visible () As Office.MsoTriState
		' Declare Abstract Function Get_Width () As Single
		' Declare Abstract Function Let_Width () As Single
		' Declare Abstract Function Get_ZOrderPosition () As Long
		' Declare Abstract Function Get_Hyperlink () As Hyperlink Ptr
		' Declare Abstract Function Get_BlackWhiteMode () As Office.MsoBlackWhiteMode
		' Declare Abstract Function Let_BlackWhiteMode () As Office.MsoBlackWhiteMode
		' Declare Abstract Function Get_DrawingObject () As IDispatch Ptr
		' Declare Abstract Function Get_OnAction () As BSTR
		' Declare Abstract Function Let_OnAction () As BSTR
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_TopLeftCell () As Range Ptr
		' Declare Abstract Function Get_BottomRightCell () As Range Ptr
		' Declare Abstract Function Get_Placement () As XlPlacement
		' Declare Abstract Function Let_Placement () As XlPlacement
		' Declare Abstract Function Copy () As HRESULT
		' Declare Abstract Function Cut () As HRESULT
		' Declare Abstract Function CopyPicture (Byval Appearance As Variant Ptr, Byval Format As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_ControlFormat () As ControlFormat Ptr
		' Declare Abstract Function Get_LinkFormat () As LinkFormat Ptr
		' Declare Abstract Function Get_OLEFormat () As OLEFormat Ptr
		' Declare Abstract Function Get_FormControlType () As XlFormControl
		' Declare Abstract Function Get_AlternativeText () As BSTR
		' Declare Abstract Function Let_AlternativeText () As BSTR
		' Declare Abstract Function Get_Script () As Office.Script Ptr
		' Declare Abstract Function Get_DiagramNode () As DiagramNode Ptr
		' Declare Abstract Function Get_HasDiagramNode () As Office.MsoTriState
		' Declare Abstract Function Get_Diagram () As Diagram Ptr
		' Declare Abstract Function Get_HasDiagram () As Office.MsoTriState
		' Declare Abstract Function Get_Child () As Office.MsoTriState
		' Declare Abstract Function Get_ParentGroup () As Shape Ptr
		' Declare Abstract Function Get_CanvasItems () As Office.CanvasShapes Ptr
		' Declare Abstract Function Get_ID () As Long
		' Declare Abstract Function CanvasCropLeft (Byval Increment As Single) As HRESULT
		' Declare Abstract Function CanvasCropTop (Byval Increment As Single) As HRESULT
		' Declare Abstract Function CanvasCropRight (Byval Increment As Single) As HRESULT
		' Declare Abstract Function CanvasCropBottom (Byval Increment As Single) As HRESULT
		' Declare Abstract Function Get_Chart () As Chart Ptr
		' Declare Abstract Function Get_HasChart () As Office.MsoTriState
		' Declare Abstract Function Get_TextFrame2 () As TextFrame2 Ptr
		' Declare Abstract Function Get_ShapeStyle () As Office.MsoShapeStyleIndex
		' Declare Abstract Function Let_ShapeStyle () As Office.MsoShapeStyleIndex
		' Declare Abstract Function Get_BackgroundStyle () As Office.MsoBackgroundStyleIndex
		' Declare Abstract Function Let_BackgroundStyle () As Office.MsoBackgroundStyleIndex
		' Declare Abstract Function Get_SoftEdge () As Office.SoftEdgeFormat Ptr
		' Declare Abstract Function Get_Glow () As Office.GlowFormat Ptr
		' Declare Abstract Function Get_Reflection () As Office.ReflectionFormat Ptr
		' Declare Abstract Function Get_HasSmartArt () As Office.MsoTriState
		' Declare Abstract Function Get_SmartArt () As Office.SmartArt Ptr
		' Declare Abstract Function Get_Title () As BSTR
		' Declare Abstract Function Let_Title () As BSTR
	End Type 'Shape_

	Type Shapes_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As Shape Ptr
		' Declare Abstract Function _Default (Byval Index As Variant Ptr) As Shape Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function AddCallout (Byval Type_v As Office.MsoCalloutType, Byval Left As Single, Byval Top As Single, Byval Width As Single, Byval Height As Single) As Shape Ptr
		' Declare Abstract Function AddConnector (Byval Type_v As Office.MsoConnectorType, Byval BeginX As Single, Byval BeginY As Single, Byval EndX As Single, Byval EndY As Single) As Shape Ptr
		' Declare Abstract Function AddCurve (Byval SafeArrayOfPoints As Variant Ptr) As Shape Ptr
		' Declare Abstract Function AddLabel (Byval Orientation As Office.MsoTextOrientation, Byval Left As Single, Byval Top As Single, Byval Width As Single, Byval Height As Single) As Shape Ptr
		' Declare Abstract Function AddLine (Byval BeginX As Single, Byval BeginY As Single, Byval EndX As Single, Byval EndY As Single) As Shape Ptr
		' Declare Abstract Function AddPicture (Byval Filename As BSTR, Byval LinkToFile As Office.MsoTriState, Byval SaveWithDocument As Office.MsoTriState, Byval Left As Single, Byval Top As Single, Byval Width As Single, Byval Height As Single) As Shape Ptr
		' Declare Abstract Function AddPolyline (Byval SafeArrayOfPoints As Variant Ptr) As Shape Ptr
		' Declare Abstract Function AddShape (Byval Type_v As Office.MsoAutoShapeType, Byval Left As Single, Byval Top As Single, Byval Width As Single, Byval Height As Single) As Shape Ptr
		' Declare Abstract Function AddTextEffect (Byval PresetTextEffect As Office.MsoPresetTextEffect, Byval Text As BSTR, Byval FontName As BSTR, Byval FontSize As Single, Byval FontBold As Office.MsoTriState, Byval FontItalic As Office.MsoTriState, Byval Left As Single, Byval Top As Single) As Shape Ptr
		' Declare Abstract Function AddTextbox (Byval Orientation As Office.MsoTextOrientation, Byval Left As Single, Byval Top As Single, Byval Width As Single, Byval Height As Single) As Shape Ptr
		' Declare Abstract Function BuildFreeform (Byval EditingType As Office.MsoEditingType, Byval X1 As Single, Byval Y1 As Single) As FreeformBuilder Ptr
		' Declare Abstract Function Get_Range (Byval Index As Variant Ptr) As ShapeRange Ptr
		' Declare Abstract Function SelectAll () As HRESULT
		' Declare Abstract Function AddFormControl (Byval Type_v As XlFormControl, Byval Left As Long, Byval Top As Long, Byval Width As Long, Byval Height As Long) As Shape Ptr
		' Declare Abstract Function AddOLEObject (Byval ClassType As Variant Ptr, Byval Filename As Variant Ptr, Byval Link As Variant Ptr, Byval DisplayAsIcon As Variant Ptr, Byval IconFileName As Variant Ptr, Byval IconIndex As Variant Ptr, Byval IconLabel As Variant Ptr, Byval Left As Variant Ptr, Byval Top As Variant Ptr, Byval Width As Variant Ptr, Byval Height As Variant Ptr) As Shape Ptr
		' Declare Abstract Function AddDiagram (Byval Type_v As Office.MsoDiagramType, Byval Left As Single, Byval Top As Single, Byval Width As Single, Byval Height As Single) As Shape Ptr
		' Declare Abstract Function AddCanvas (Byval Left As Single, Byval Top As Single, Byval Width As Single, Byval Height As Single) As Shape Ptr
		' Declare Abstract Function AddChart (Byval XlChartType As Variant Ptr, Byval Left As Variant Ptr, Byval Top As Variant Ptr, Byval Width As Variant Ptr, Byval Height As Variant Ptr) As Shape Ptr
		' Declare Abstract Function AddSmartArt (Byval Layout As Office.SmartArtLayout Ptr, Byval Left As Variant Ptr, Byval Top As Variant Ptr, Byval Width As Variant Ptr, Byval Height As Variant Ptr) As Shape Ptr
		' Declare Abstract Function AddChart2 (Byval Style As Variant Ptr, Byval XlChartType As Variant Ptr, Byval Left As Variant Ptr, Byval Top As Variant Ptr, Byval Width As Variant Ptr, Byval Height As Variant Ptr, Byval NewLayout As Variant Ptr) As Shape Ptr
		' Declare Abstract Function AddPicture2 (Byval Filename As BSTR, Byval LinkToFile As Office.MsoTriState, Byval SaveWithDocument As Office.MsoTriState, Byval Left As Single, Byval Top As Single, Byval Width As Single, Byval Height As Single, Byval Compress As Office.MsoPictureCompress) As Shape Ptr
	End Type 'Shapes_

	Type ShapeRange_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As Shape Ptr
		' Declare Abstract Function _Default (Byval Index As Variant Ptr) As Shape Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Align (Byval AlignCmd As Office.MsoAlignCmd, Byval RelativeTo As Office.MsoTriState) As HRESULT
		' Declare Abstract Function Apply () As HRESULT
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Distribute (Byval DistributeCmd As Office.MsoDistributeCmd, Byval RelativeTo As Office.MsoTriState) As HRESULT
		' Declare Abstract Function Duplicate () As ShapeRange Ptr
		' Declare Abstract Function Flip (Byval FlipCmd As Office.MsoFlipCmd) As HRESULT
		' Declare Abstract Function IncrementLeft (Byval Increment As Single) As HRESULT
		' Declare Abstract Function IncrementRotation (Byval Increment As Single) As HRESULT
		' Declare Abstract Function IncrementTop (Byval Increment As Single) As HRESULT
		' Declare Abstract Function Group () As Shape Ptr
		' Declare Abstract Function PickUp () As HRESULT
		' Declare Abstract Function RerouteConnections () As HRESULT
		' Declare Abstract Function Regroup () As Shape Ptr
		' Declare Abstract Function ScaleHeight (Byval Factor As Single, Byval RelativeToOriginalSize As Office.MsoTriState, Byval Scale As Variant Ptr) As HRESULT
		' Declare Abstract Function ScaleWidth (Byval Factor As Single, Byval RelativeToOriginalSize As Office.MsoTriState, Byval Scale As Variant Ptr) As HRESULT
		' Declare Abstract Function Select_ (Byval Replace As Variant Ptr) As HRESULT
		' Declare Abstract Function SetShapesDefaultProperties () As HRESULT
		' Declare Abstract Function Ungroup () As ShapeRange Ptr
		' Declare Abstract Function ZOrder (Byval ZOrderCmd As Office.MsoZOrderCmd) As HRESULT
		' Declare Abstract Function Get_Adjustments () As Adjustments Ptr
		' Declare Abstract Function Get_TextFrame () As TextFrame Ptr
		' Declare Abstract Function Get_AutoShapeType () As Office.MsoAutoShapeType
		' Declare Abstract Function Let_AutoShapeType () As Office.MsoAutoShapeType
		' Declare Abstract Function Get_Callout () As CalloutFormat Ptr
		' Declare Abstract Function Get_ConnectionSiteCount () As Long
		' Declare Abstract Function Get_Connector () As Office.MsoTriState
		' Declare Abstract Function Get_ConnectorFormat () As ConnectorFormat Ptr
		' Declare Abstract Function Get_Fill () As FillFormat Ptr
		' Declare Abstract Function Get_GroupItems () As GroupShapes Ptr
		' Declare Abstract Function Get_Height () As Single
		' Declare Abstract Function Let_Height () As Single
		' Declare Abstract Function Get_HorizontalFlip () As Office.MsoTriState
		' Declare Abstract Function Get_Left () As Single
		' Declare Abstract Function Let_Left () As Single
		' Declare Abstract Function Get_Line () As LineFormat Ptr
		' Declare Abstract Function Get_LockAspectRatio () As Office.MsoTriState
		' Declare Abstract Function Let_LockAspectRatio () As Office.MsoTriState
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_Nodes () As ShapeNodes Ptr
		' Declare Abstract Function Get_Rotation () As Single
		' Declare Abstract Function Let_Rotation () As Single
		' Declare Abstract Function Get_PictureFormat () As PictureFormat Ptr
		' Declare Abstract Function Get_Shadow () As ShadowFormat Ptr
		' Declare Abstract Function Get_TextEffect () As TextEffectFormat Ptr
		' Declare Abstract Function Get_ThreeD () As ThreeDFormat Ptr
		' Declare Abstract Function Get_Top () As Single
		' Declare Abstract Function Let_Top () As Single
		' Declare Abstract Function Get_Type () As Office.MsoShapeType
		' Declare Abstract Function Get_VerticalFlip () As Office.MsoTriState
		' Declare Abstract Function Get_Vertices () As Variant Ptr
		' Declare Abstract Function Get_Visible () As Office.MsoTriState
		' Declare Abstract Function Let_Visible () As Office.MsoTriState
		' Declare Abstract Function Get_Width () As Single
		' Declare Abstract Function Let_Width () As Single
		' Declare Abstract Function Get_ZOrderPosition () As Long
		' Declare Abstract Function Get_BlackWhiteMode () As Office.MsoBlackWhiteMode
		' Declare Abstract Function Let_BlackWhiteMode () As Office.MsoBlackWhiteMode
		' Declare Abstract Function Get_AlternativeText () As BSTR
		' Declare Abstract Function Let_AlternativeText () As BSTR
		' Declare Abstract Function Get_DiagramNode () As DiagramNode Ptr
		' Declare Abstract Function Get_HasDiagramNode () As Office.MsoTriState
		' Declare Abstract Function Get_Diagram () As Diagram Ptr
		' Declare Abstract Function Get_HasDiagram () As Office.MsoTriState
		' Declare Abstract Function Get_Child () As Office.MsoTriState
		' Declare Abstract Function Get_ParentGroup () As Shape Ptr
		' Declare Abstract Function Get_CanvasItems () As Office.CanvasShapes Ptr
		' Declare Abstract Function Get_ID () As Long
		' Declare Abstract Function CanvasCropLeft (Byval Increment As Single) As HRESULT
		' Declare Abstract Function CanvasCropTop (Byval Increment As Single) As HRESULT
		' Declare Abstract Function CanvasCropRight (Byval Increment As Single) As HRESULT
		' Declare Abstract Function CanvasCropBottom (Byval Increment As Single) As HRESULT
		' Declare Abstract Function Get_Chart () As Chart Ptr
		' Declare Abstract Function Get_HasChart () As Office.MsoTriState
		' Declare Abstract Function Get_TextFrame2 () As TextFrame2 Ptr
		' Declare Abstract Function Get_ShapeStyle () As Office.MsoShapeStyleIndex
		' Declare Abstract Function Let_ShapeStyle () As Office.MsoShapeStyleIndex
		' Declare Abstract Function Get_BackgroundStyle () As Office.MsoBackgroundStyleIndex
		' Declare Abstract Function Let_BackgroundStyle () As Office.MsoBackgroundStyleIndex
		' Declare Abstract Function Get_SoftEdge () As Office.SoftEdgeFormat Ptr
		' Declare Abstract Function Get_Glow () As Office.GlowFormat Ptr
		' Declare Abstract Function Get_Reflection () As Office.ReflectionFormat Ptr
		' Declare Abstract Function Get_Title () As BSTR
		' Declare Abstract Function Let_Title () As BSTR
	End Type 'ShapeRange_

	Type GroupShapes_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As Shape Ptr
		' Declare Abstract Function _Default (Byval Index As Variant Ptr) As Shape Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_Range (Byval Index As Variant Ptr) As ShapeRange Ptr
	End Type 'GroupShapes_

	Type TextFrame_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_MarginBottom () As Single
		' Declare Abstract Function Let_MarginBottom () As Single
		' Declare Abstract Function Get_MarginLeft () As Single
		' Declare Abstract Function Let_MarginLeft () As Single
		' Declare Abstract Function Get_MarginRight () As Single
		' Declare Abstract Function Let_MarginRight () As Single
		' Declare Abstract Function Get_MarginTop () As Single
		' Declare Abstract Function Let_MarginTop () As Single
		' Declare Abstract Function Get_Orientation () As Office.MsoTextOrientation
		' Declare Abstract Function Let_Orientation () As Office.MsoTextOrientation
		' Declare Abstract Function Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function Get_HorizontalAlignment () As XlHAlign
		' Declare Abstract Function Let_HorizontalAlignment () As XlHAlign
		' Declare Abstract Function Get_VerticalAlignment () As XlVAlign
		' Declare Abstract Function Let_VerticalAlignment () As XlVAlign
		' Declare Abstract Function Get_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoSize () As VARIANT_BOOL
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_AutoMargins () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoMargins () As VARIANT_BOOL
		' Declare Abstract Function Get_VerticalOverflow () As XlOartVerticalOverflow
		' Declare Abstract Function Let_VerticalOverflow () As XlOartVerticalOverflow
		' Declare Abstract Function Get_HorizontalOverflow () As XlOartHorizontalOverflow
		' Declare Abstract Function Let_HorizontalOverflow () As XlOartHorizontalOverflow
	End Type 'TextFrame_

	Type ConnectorFormat_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function BeginConnect (Byval ConnectedShape As Shape Ptr, Byval ConnectionSite As Long) As HRESULT
		' Declare Abstract Function BeginDisconnect () As HRESULT
		' Declare Abstract Function EndConnect (Byval ConnectedShape As Shape Ptr, Byval ConnectionSite As Long) As HRESULT
		' Declare Abstract Function EndDisconnect () As HRESULT
		' Declare Abstract Function Get_BeginConnected () As Office.MsoTriState
		' Declare Abstract Function Get_BeginConnectedShape () As Shape Ptr
		' Declare Abstract Function Get_BeginConnectionSite () As Long
		' Declare Abstract Function Get_EndConnected () As Office.MsoTriState
		' Declare Abstract Function Get_EndConnectedShape () As Shape Ptr
		' Declare Abstract Function Get_EndConnectionSite () As Long
		' Declare Abstract Function Get_Type () As Office.MsoConnectorType
		' Declare Abstract Function Let_Type () As Office.MsoConnectorType
	End Type 'ConnectorFormat_

	Type FreeformBuilder_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function AddNodes (Byval SegmentType As Office.MsoSegmentType, Byval EditingType As Office.MsoEditingType, Byval X1 As Single, Byval Y1 As Single, Byval X2 As Variant Ptr, Byval Y2 As Variant Ptr, Byval X3 As Variant Ptr, Byval Y3 As Variant Ptr) As HRESULT
		' Declare Abstract Function ConvertToShape () As Shape Ptr
	End Type 'FreeformBuilder_

	Type ControlFormat_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function AddItem (Byval Text As BSTR, Byval Index As Variant Ptr) As HRESULT
		' Declare Abstract Function RemoveAllItems () As HRESULT
		' Declare Abstract Function RemoveItem (Byval Index As Long, Byval Count As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_DropDownLines () As Long
		' Declare Abstract Function Let_DropDownLines () As Long
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_LargeChange () As Long
		' Declare Abstract Function Let_LargeChange () As Long
		' Declare Abstract Function Get_LinkedCell () As BSTR
		' Declare Abstract Function Let_LinkedCell () As BSTR
		' Declare Abstract Function List (Byval Index As Variant Ptr) As Variant Ptr
		' Declare Abstract Function Get_ListCount () As Long
		' Declare Abstract Function Let_ListCount () As Long
		' Declare Abstract Function Get_ListFillRange () As BSTR
		' Declare Abstract Function Let_ListFillRange () As BSTR
		' Declare Abstract Function Get_ListIndex () As Long
		' Declare Abstract Function Let_ListIndex () As Long
		' Declare Abstract Function Get_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Let_LockedText () As VARIANT_BOOL
		' Declare Abstract Function Get_Max () As Long
		' Declare Abstract Function Let_Max () As Long
		' Declare Abstract Function Get_Min () As Long
		' Declare Abstract Function Let_Min () As Long
		' Declare Abstract Function Get_MultiSelect () As Long
		' Declare Abstract Function Let_MultiSelect () As Long
		' Declare Abstract Function Get_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Let_PrintObject () As VARIANT_BOOL
		' Declare Abstract Function Get_SmallChange () As Long
		' Declare Abstract Function Let_SmallChange () As Long
		' Declare Abstract Function Get__Default () As Long
		' Declare Abstract Function Let__Default () As Long
		' Declare Abstract Function Get_Value () As Long
		' Declare Abstract Function Let_Value () As Long
	End Type 'ControlFormat_

	Type OLEFormat_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Activate () As HRESULT
		' Declare Abstract Function Get_Object () As IDispatch Ptr
		' Declare Abstract Function Get_progID () As BSTR
		' Declare Abstract Function Verb (Byval Verb_v As Variant Ptr) As HRESULT
	End Type 'OLEFormat_

	Type LinkFormat_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_AutoUpdate () As VARIANT_BOOL
		' Declare Abstract Function Let_AutoUpdate () As VARIANT_BOOL
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Update () As HRESULT
	End Type 'LinkFormat_

	Type PublishObjects_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval SourceType As XlSourceType, Byval Filename As BSTR, Byval Sheet As Variant Ptr, Byval Source As Variant Ptr, Byval HtmlType As Variant Ptr, Byval DivID As Variant Ptr, Byval Title As Variant Ptr) As PublishObject Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As PublishObject Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As PublishObject Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Publish () As HRESULT
	End Type 'PublishObjects_

	Type OLEDBError_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_SqlState () As BSTR
		' Declare Abstract Function Get_ErrorString () As BSTR
		' Declare Abstract Function Get_Native () As Long
		' Declare Abstract Function Get_Number () As Long
		' Declare Abstract Function Get_Stage () As Long
	End Type 'OLEDBError_

	Type OLEDBErrors_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Long) As OLEDBError Ptr
		' Declare Abstract Function Get__Default (Byval Index As Long) As OLEDBError Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'OLEDBErrors_

	Type Phonetics_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Start () As Long
		' Declare Abstract Function Get_Length () As Long
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_CharacterType () As Long
		' Declare Abstract Function Let_CharacterType () As Long
		' Declare Abstract Function Get_Alignment () As Long
		' Declare Abstract Function Let_Alignment () As Long
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Item (Byval Index As Long) As IDispatch Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Add (Byval Start As Long, Byval Length As Long, Byval Text As BSTR) As HRESULT
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get__Default (Byval Index As Long) As IDispatch Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'Phonetics_

	Type PivotLayout_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_ColumnFields (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_DataFields (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_PageFields (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_RowFields (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_HiddenFields (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_VisibleFields (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_PivotFields (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_CubeFields () As CubeFields Ptr
		' Declare Abstract Function Get_PivotCache () As PivotCache Ptr
		' Declare Abstract Function Get_PivotTable () As PivotTable Ptr
		' Declare Abstract Function Get_InnerDetail () As BSTR
		' Declare Abstract Function Let_InnerDetail () As BSTR
		' Declare Abstract Function AddFields (Byval RowFields As Variant Ptr, Byval ColumnFields As Variant Ptr, Byval PageFields As Variant Ptr, Byval AppendField As Variant Ptr) As HRESULT
	End Type 'PivotLayout_

	Type DisplayUnitLabel_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Select_ () As Variant Ptr
		' Declare Abstract Function Get_Border () As Border Ptr
		' Declare Abstract Function Delete_ () As Variant Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Fill () As ChartFillFormat Ptr
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function Get_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Let_Shadow () As VARIANT_BOOL
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Let_ReadingOrder () As Long
		' Declare Abstract Function Get_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function Let_AutoScaleFont () As Variant Ptr
		' Declare Abstract Function _Dummy21 () As HRESULT
		' Declare Abstract Function Get_Position () As XlChartElementPosition
		' Declare Abstract Function Let_Position () As XlChartElementPosition
		' Declare Abstract Function Get_Format () As ChartFormat Ptr
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_FormulaR1C1 () As BSTR
		' Declare Abstract Function Let_FormulaR1C1 () As BSTR
		' Declare Abstract Function Get_FormulaLocal () As BSTR
		' Declare Abstract Function Let_FormulaLocal () As BSTR
		' Declare Abstract Function Get_FormulaR1C1Local () As BSTR
		' Declare Abstract Function Let_FormulaR1C1Local () As BSTR
	End Type 'DisplayUnitLabel_

	Type CellFormat_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Borders () As Borders Ptr
		' Declare Abstract Function Set_Borders () As Borders Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Set_Font () As Font Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Set_Interior () As Interior Ptr
		' Declare Abstract Function Get_NumberFormat () As Variant Ptr
		' Declare Abstract Function Let_NumberFormat () As Variant Ptr
		' Declare Abstract Function Get_NumberFormatLocal () As Variant Ptr
		' Declare Abstract Function Let_NumberFormatLocal () As Variant Ptr
		' Declare Abstract Function Get_AddIndent () As Variant Ptr
		' Declare Abstract Function Let_AddIndent () As Variant Ptr
		' Declare Abstract Function Get_IndentLevel () As Variant Ptr
		' Declare Abstract Function Let_IndentLevel () As Variant Ptr
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Let_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Let_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Let_Orientation () As Variant Ptr
		' Declare Abstract Function Get_ShrinkToFit () As Variant Ptr
		' Declare Abstract Function Let_ShrinkToFit () As Variant Ptr
		' Declare Abstract Function Get_WrapText () As Variant Ptr
		' Declare Abstract Function Let_WrapText () As Variant Ptr
		' Declare Abstract Function Get_Locked () As Variant Ptr
		' Declare Abstract Function Let_Locked () As Variant Ptr
		' Declare Abstract Function Get_FormulaHidden () As Variant Ptr
		' Declare Abstract Function Let_FormulaHidden () As Variant Ptr
		' Declare Abstract Function Get_MergeCells () As Variant Ptr
		' Declare Abstract Function Let_MergeCells () As Variant Ptr
		' Declare Abstract Function Clear () As HRESULT
	End Type 'CellFormat_

	Type UsedObjects_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As IDispatch Ptr
	End Type 'UsedObjects_

	Type CustomProperties_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Name As BSTR, Byval Value As Variant Ptr) As CustomProperty Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As CustomProperty Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As CustomProperty Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'CustomProperties_

	Type CustomProperty_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_Value () As Variant Ptr
		' Declare Abstract Function Let_Value () As Variant Ptr
		' Declare Abstract Function Get__Default () As Variant Ptr
		' Declare Abstract Function Delete_ () As HRESULT
	End Type 'CustomProperty_

	Type CalculatedMembers_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As CalculatedMember Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As CalculatedMember Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function _Add (Byval Name As BSTR, Byval Formula As BSTR, Byval SolveOrder As Variant Ptr, Byval Type_v As Variant Ptr) As CalculatedMember Ptr
		' Declare Abstract Function Add (Byval Name As BSTR, Byval Formula As Variant Ptr, Byval SolveOrder As Variant Ptr, Byval Type_v As Variant Ptr, Byval Dynamic As Variant Ptr, Byval DisplayFolder As Variant Ptr, Byval HierarchizeDistinct As Variant Ptr) As CalculatedMember Ptr
		' Declare Abstract Function AddCalculatedMember (Byval Name As BSTR, Byval Formula As Variant Ptr, Byval SolveOrder As Variant Ptr, Byval Type_v As Variant Ptr, Byval DisplayFolder As Variant Ptr, Byval MeasureGroup As Variant Ptr, Byval ParentHierarchy As Variant Ptr, Byval ParentMember As Variant Ptr, Byval NumberFormat As Variant Ptr) As CalculatedMember Ptr
	End Type 'CalculatedMembers_

	Type CalculatedMember_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Get_SourceName () As BSTR
		' Declare Abstract Function Get_SolveOrder () As Long
		' Declare Abstract Function Get_IsValid () As VARIANT_BOOL
		' Declare Abstract Function Get__Default () As BSTR
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get_Type () As XlCalculatedMemberType
		' Declare Abstract Function Get_Dynamic () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayFolder () As BSTR
		' Declare Abstract Function Get_HierarchizeDistinct () As VARIANT_BOOL
		' Declare Abstract Function Let_HierarchizeDistinct () As VARIANT_BOOL
		' Declare Abstract Function Get_FlattenHierarchies () As VARIANT_BOOL
		' Declare Abstract Function Let_FlattenHierarchies () As VARIANT_BOOL
		' Declare Abstract Function Get_MeasureGroup () As BSTR
		' Declare Abstract Function Get_ParentHierarchy () As BSTR
		' Declare Abstract Function Get_ParentMember () As BSTR
		' Declare Abstract Function Get_NumberFormat () As XlCalcMemNumberFormatType
	End Type 'CalculatedMember_

	Type Watches_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Source As Variant Ptr) As Watch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As Watch Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As Watch Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Delete_ () As HRESULT
	End Type 'Watches_

	Type Watch_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get_Source () As Variant Ptr
	End Type 'Watch_

	Type PivotCell_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_PivotCellType () As XlPivotCellType
		' Declare Abstract Function Get_PivotTable () As PivotTable Ptr
		' Declare Abstract Function Get_DataField () As PivotField Ptr
		' Declare Abstract Function Get_PivotField () As PivotField Ptr
		' Declare Abstract Function Get_PivotItem () As PivotItem Ptr
		' Declare Abstract Function Get_RowItems () As PivotItemList Ptr
		' Declare Abstract Function Get_ColumnItems () As PivotItemList Ptr
		' Declare Abstract Function Get_Range () As Range Ptr
		' Declare Abstract Function Get_Dummy18 () As BSTR
		' Declare Abstract Function Get_CustomSubtotalFunction () As XlConsolidationFunction
		' Declare Abstract Function Get_PivotRowLine () As PivotLine Ptr
		' Declare Abstract Function Get_PivotColumnLine () As PivotLine Ptr
		' Declare Abstract Function AllocateChange () As HRESULT
		' Declare Abstract Function DiscardChange () As HRESULT
		' Declare Abstract Function Get_DataSourceValue () As Variant Ptr
		' Declare Abstract Function Get_CellChanged () As XlCellChangedState
		' Declare Abstract Function Get_MDX () As BSTR
		' Declare Abstract Function Get_ServerActions () As Actions Ptr
	End Type 'PivotCell_

	Type Graphic_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Brightness () As Single
		' Declare Abstract Function Let_Brightness () As Single
		' Declare Abstract Function Get_ColorType () As Office.MsoPictureColorType
		' Declare Abstract Function Let_ColorType () As Office.MsoPictureColorType
		' Declare Abstract Function Get_Contrast () As Single
		' Declare Abstract Function Let_Contrast () As Single
		' Declare Abstract Function Get_CropBottom () As Single
		' Declare Abstract Function Let_CropBottom () As Single
		' Declare Abstract Function Get_CropLeft () As Single
		' Declare Abstract Function Let_CropLeft () As Single
		' Declare Abstract Function Get_CropRight () As Single
		' Declare Abstract Function Let_CropRight () As Single
		' Declare Abstract Function Get_CropTop () As Single
		' Declare Abstract Function Let_CropTop () As Single
		' Declare Abstract Function Get_Filename () As BSTR
		' Declare Abstract Function Let_Filename () As BSTR
		' Declare Abstract Function Get_Height () As Single
		' Declare Abstract Function Let_Height () As Single
		' Declare Abstract Function Get_LockAspectRatio () As Office.MsoTriState
		' Declare Abstract Function Let_LockAspectRatio () As Office.MsoTriState
		' Declare Abstract Function Get_Width () As Single
		' Declare Abstract Function Let_Width () As Single
	End Type 'Graphic_

	Type AutoRecover_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_Time () As Long
		' Declare Abstract Function Let_Time () As Long
		' Declare Abstract Function Get_Path () As BSTR
		' Declare Abstract Function Let_Path () As BSTR
	End Type 'AutoRecover_

	Type ErrorCheckingOptions_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BackgroundChecking () As VARIANT_BOOL
		' Declare Abstract Function Let_BackgroundChecking () As VARIANT_BOOL
		' Declare Abstract Function Get_IndicatorColorIndex () As XlColorIndex
		' Declare Abstract Function Let_IndicatorColorIndex () As XlColorIndex
		' Declare Abstract Function Get_EvaluateToError () As VARIANT_BOOL
		' Declare Abstract Function Let_EvaluateToError () As VARIANT_BOOL
		' Declare Abstract Function Get_TextDate () As VARIANT_BOOL
		' Declare Abstract Function Let_TextDate () As VARIANT_BOOL
		' Declare Abstract Function Get_NumberAsText () As VARIANT_BOOL
		' Declare Abstract Function Let_NumberAsText () As VARIANT_BOOL
		' Declare Abstract Function Get_InconsistentFormula () As VARIANT_BOOL
		' Declare Abstract Function Let_InconsistentFormula () As VARIANT_BOOL
		' Declare Abstract Function Get_OmittedCells () As VARIANT_BOOL
		' Declare Abstract Function Let_OmittedCells () As VARIANT_BOOL
		' Declare Abstract Function Get_UnlockedFormulaCells () As VARIANT_BOOL
		' Declare Abstract Function Let_UnlockedFormulaCells () As VARIANT_BOOL
		' Declare Abstract Function Get_EmptyCellReferences () As VARIANT_BOOL
		' Declare Abstract Function Let_EmptyCellReferences () As VARIANT_BOOL
		' Declare Abstract Function Get_ListDataValidation () As VARIANT_BOOL
		' Declare Abstract Function Let_ListDataValidation () As VARIANT_BOOL
		' Declare Abstract Function Get_InconsistentTableFormula () As VARIANT_BOOL
		' Declare Abstract Function Let_InconsistentTableFormula () As VARIANT_BOOL
	End Type 'ErrorCheckingOptions_

	Type Errors_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As Error_t Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As Error_t Ptr
	End Type 'Errors_

	Type Error_t_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Value () As VARIANT_BOOL
		' Declare Abstract Function Get_Ignore () As VARIANT_BOOL
		' Declare Abstract Function Let_Ignore () As VARIANT_BOOL
	End Type 'Error_t_

	Type SmartTagAction_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Execute () As HRESULT
		' Declare Abstract Function Get__Default () As BSTR
		' Declare Abstract Function Get_Type () As XlSmartTagControlType
		' Declare Abstract Function Get_PresentInPane () As VARIANT_BOOL
		' Declare Abstract Function Get_ExpandHelp () As VARIANT_BOOL
		' Declare Abstract Function Let_ExpandHelp () As VARIANT_BOOL
		' Declare Abstract Function Get_CheckboxState () As VARIANT_BOOL
		' Declare Abstract Function Let_CheckboxState () As VARIANT_BOOL
		' Declare Abstract Function Get_TextboxText () As BSTR
		' Declare Abstract Function Let_TextboxText () As BSTR
		' Declare Abstract Function Get_ListSelection () As Long
		' Declare Abstract Function Let_ListSelection () As Long
		' Declare Abstract Function Get_RadioGroupSelection () As Long
		' Declare Abstract Function Let_RadioGroupSelection () As Long
		' Declare Abstract Function Get_ActiveXControl () As IDispatch Ptr
	End Type 'SmartTagAction_

	Type SmartTagActions_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As SmartTagAction Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As SmartTagAction Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'SmartTagActions_

	Type SmartTag_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_DownloadURL () As BSTR
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Get__Default () As BSTR
		' Declare Abstract Function Get_XML () As BSTR
		' Declare Abstract Function Get_Range () As Range Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get_SmartTagActions () As SmartTagActions Ptr
		' Declare Abstract Function Get_Properties () As CustomProperties Ptr
	End Type 'SmartTag_

	Type SmartTags_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval SmartTagType As BSTR) As SmartTag Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As SmartTag Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'SmartTags_

	Type SmartTagRecognizer_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_progID () As BSTR
		' Declare Abstract Function Get__Default () As BSTR
		' Declare Abstract Function Get_FullName () As BSTR
	End Type 'SmartTagRecognizer_

	Type SmartTagRecognizers_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As SmartTagRecognizer Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As SmartTagRecognizer Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_Recognize () As VARIANT_BOOL
		' Declare Abstract Function Let_Recognize () As VARIANT_BOOL
	End Type 'SmartTagRecognizers_

	Type SmartTagOptions_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_DisplaySmartTags () As XlSmartTagDisplayMode
		' Declare Abstract Function Let_DisplaySmartTags () As XlSmartTagDisplayMode
		' Declare Abstract Function Get_EmbedSmartTags () As VARIANT_BOOL
		' Declare Abstract Function Let_EmbedSmartTags () As VARIANT_BOOL
	End Type 'SmartTagOptions_

	Type SpellingOptions_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_DictLang () As Long
		' Declare Abstract Function Let_DictLang () As Long
		' Declare Abstract Function Get_UserDict () As BSTR
		' Declare Abstract Function Let_UserDict () As BSTR
		' Declare Abstract Function Get_IgnoreCaps () As VARIANT_BOOL
		' Declare Abstract Function Let_IgnoreCaps () As VARIANT_BOOL
		' Declare Abstract Function Get_SuggestMainOnly () As VARIANT_BOOL
		' Declare Abstract Function Let_SuggestMainOnly () As VARIANT_BOOL
		' Declare Abstract Function Get_IgnoreMixedDigits () As VARIANT_BOOL
		' Declare Abstract Function Let_IgnoreMixedDigits () As VARIANT_BOOL
		' Declare Abstract Function Get_IgnoreFileNames () As VARIANT_BOOL
		' Declare Abstract Function Let_IgnoreFileNames () As VARIANT_BOOL
		' Declare Abstract Function Get_GermanPostReform () As VARIANT_BOOL
		' Declare Abstract Function Let_GermanPostReform () As VARIANT_BOOL
		' Declare Abstract Function Get_KoreanCombineAux () As VARIANT_BOOL
		' Declare Abstract Function Let_KoreanCombineAux () As VARIANT_BOOL
		' Declare Abstract Function Get_KoreanUseAutoChangeList () As VARIANT_BOOL
		' Declare Abstract Function Let_KoreanUseAutoChangeList () As VARIANT_BOOL
		' Declare Abstract Function Get_KoreanProcessCompound () As VARIANT_BOOL
		' Declare Abstract Function Let_KoreanProcessCompound () As VARIANT_BOOL
		' Declare Abstract Function Get_HebrewModes () As XlHebrewModes
		' Declare Abstract Function Let_HebrewModes () As XlHebrewModes
		' Declare Abstract Function Get_ArabicModes () As XlArabicModes
		' Declare Abstract Function Let_ArabicModes () As XlArabicModes
		' Declare Abstract Function Get_ArabicStrictAlefHamza () As VARIANT_BOOL
		' Declare Abstract Function Let_ArabicStrictAlefHamza () As VARIANT_BOOL
		' Declare Abstract Function Get_ArabicStrictFinalYaa () As VARIANT_BOOL
		' Declare Abstract Function Let_ArabicStrictFinalYaa () As VARIANT_BOOL
		' Declare Abstract Function Get_ArabicStrictTaaMarboota () As VARIANT_BOOL
		' Declare Abstract Function Let_ArabicStrictTaaMarboota () As VARIANT_BOOL
		' Declare Abstract Function Get_RussianStrictE () As VARIANT_BOOL
		' Declare Abstract Function Let_RussianStrictE () As VARIANT_BOOL
		' Declare Abstract Function Get_SpanishModes () As XlSpanishModes
		' Declare Abstract Function Let_SpanishModes () As XlSpanishModes
		' Declare Abstract Function Get_PortugalReform () As XlPortugueseReform
		' Declare Abstract Function Let_PortugalReform () As XlPortugueseReform
		' Declare Abstract Function Get_BrazilReform () As XlPortugueseReform
		' Declare Abstract Function Let_BrazilReform () As XlPortugueseReform
	End Type 'SpellingOptions_

	Type Speech_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Speak (Byval Text As BSTR, Byval SpeakAsync As Variant Ptr, Byval SpeakXML As Variant Ptr, Byval Purge As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_Direction () As XlSpeakDirection
		' Declare Abstract Function Let_Direction () As XlSpeakDirection
		' Declare Abstract Function Get_SpeakCellOnEnter () As VARIANT_BOOL
		' Declare Abstract Function Let_SpeakCellOnEnter () As VARIANT_BOOL
	End Type 'Speech_

	Type Protection_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_AllowFormattingCells () As VARIANT_BOOL
		' Declare Abstract Function Get_AllowFormattingColumns () As VARIANT_BOOL
		' Declare Abstract Function Get_AllowFormattingRows () As VARIANT_BOOL
		' Declare Abstract Function Get_AllowInsertingColumns () As VARIANT_BOOL
		' Declare Abstract Function Get_AllowInsertingRows () As VARIANT_BOOL
		' Declare Abstract Function Get_AllowInsertingHyperlinks () As VARIANT_BOOL
		' Declare Abstract Function Get_AllowDeletingColumns () As VARIANT_BOOL
		' Declare Abstract Function Get_AllowDeletingRows () As VARIANT_BOOL
		' Declare Abstract Function Get_AllowSorting () As VARIANT_BOOL
		' Declare Abstract Function Get_AllowFiltering () As VARIANT_BOOL
		' Declare Abstract Function Get_AllowUsingPivotTables () As VARIANT_BOOL
		' Declare Abstract Function Get_AllowEditRanges () As AllowEditRanges Ptr
	End Type 'Protection_

	Type PivotItemList_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As PivotItem Ptr
		' Declare Abstract Function Get__Default (Byval Field As Variant Ptr) As PivotItem Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
	End Type 'PivotItemList_

	Type Tab_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Color () As Variant Ptr
		' Declare Abstract Function Let_Color () As Variant Ptr
		' Declare Abstract Function Get_ColorIndex () As XlColorIndex
		' Declare Abstract Function Let_ColorIndex () As XlColorIndex
		' Declare Abstract Function Get_ThemeColor () As XlThemeColor
		' Declare Abstract Function Let_ThemeColor () As XlThemeColor
		' Declare Abstract Function Get_TintAndShade () As Variant Ptr
		' Declare Abstract Function Let_TintAndShade () As Variant Ptr
	End Type 'Tab_

	Type AllowEditRanges_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As AllowEditRange Ptr
		' Declare Abstract Function Add (Byval Title As BSTR, Byval Range As Range Ptr, Byval Password As Variant Ptr) As AllowEditRange Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As AllowEditRange Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'AllowEditRanges_

	Type AllowEditRange_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Title () As BSTR
		' Declare Abstract Function Let_Title () As BSTR
		' Declare Abstract Function Get_Range () As Range Ptr
		' Declare Abstract Function Set_Range () As Range Ptr
		' Declare Abstract Function ChangePassword (Byval Password As BSTR) As HRESULT
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Unprotect (Byval Password As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_Users () As UserAccessList Ptr
	End Type 'AllowEditRange_

	Type UserAccessList_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As UserAccess Ptr
		' Declare Abstract Function Add (Byval Name As BSTR, Byval AllowEdit As VARIANT_BOOL) As UserAccess Ptr
		' Declare Abstract Function DeleteAll () As HRESULT
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As UserAccess Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'UserAccessList_

	Type UserAccess_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Get_AllowEdit () As VARIANT_BOOL
		' Declare Abstract Function Let_AllowEdit () As VARIANT_BOOL
		' Declare Abstract Function Delete_ () As HRESULT
	End Type 'UserAccess_

	Type RTD_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_ThrottleInterval () As Long
		' Declare Abstract Function Let_ThrottleInterval () As Long
		' Declare Abstract Function RefreshData () As HRESULT
		' Declare Abstract Function RestartServers () As HRESULT
	End Type 'RTD_

	Type Diagram_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Nodes () As DiagramNodes Ptr
		' Declare Abstract Function Get_Type () As Office.MsoDiagramType
		' Declare Abstract Function Get_AutoLayout () As Office.MsoTriState
		' Declare Abstract Function Let_AutoLayout () As Office.MsoTriState
		' Declare Abstract Function Get_Reverse () As Office.MsoTriState
		' Declare Abstract Function Let_Reverse () As Office.MsoTriState
		' Declare Abstract Function Get_AutoFormat () As Office.MsoTriState
		' Declare Abstract Function Let_AutoFormat () As Office.MsoTriState
		' Declare Abstract Function Convert (Byval Type_v As Office.MsoDiagramType) As HRESULT
		' Declare Abstract Function FitText () As HRESULT
	End Type 'Diagram_

	Type ListObjects_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Add (Byval SourceType As XlListObjectSourceType, Byval Source As Variant Ptr, Byval LinkSource As Variant Ptr, Byval XlListObjectHasHeaders As XlYesNoGuess, Byval Destination As Variant Ptr) As ListObject Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As ListObject Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As ListObject Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Add (Byval SourceType As XlListObjectSourceType, Byval Source As Variant Ptr, Byval LinkSource As Variant Ptr, Byval XlListObjectHasHeaders As XlYesNoGuess, Byval Destination As Variant Ptr, Byval TableStyleName As Variant Ptr) As ListObject Ptr
	End Type 'ListObjects_

	Type ListObject_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Publish (Byval Target As Variant Ptr, Byval LinkSource As VARIANT_BOOL) As BSTR
		' Declare Abstract Function Refresh () As HRESULT
		' Declare Abstract Function Unlink () As HRESULT
		' Declare Abstract Function Unlist () As HRESULT
		' Declare Abstract Function UpdateChanges (Byval iConflictType As XlListConflict) As HRESULT
		' Declare Abstract Function Resize (Byval Range As Range Ptr) As HRESULT
		' Declare Abstract Function Get__Default () As BSTR
		' Declare Abstract Function Get_Active () As VARIANT_BOOL
		' Declare Abstract Function Get_DataBodyRange () As Range Ptr
		' Declare Abstract Function Get_DisplayRightToLeft () As VARIANT_BOOL
		' Declare Abstract Function Get_HeaderRowRange () As Range Ptr
		' Declare Abstract Function Get_InsertRowRange () As Range Ptr
		' Declare Abstract Function Get_ListColumns () As ListColumns Ptr
		' Declare Abstract Function Get_ListRows () As ListRows Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_QueryTable () As QueryTable Ptr
		' Declare Abstract Function Get_Range () As Range Ptr
		' Declare Abstract Function Get_ShowAutoFilter () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowAutoFilter () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowTotals () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowTotals () As VARIANT_BOOL
		' Declare Abstract Function Get_SourceType () As XlListObjectSourceType
		' Declare Abstract Function Get_TotalsRowRange () As Range Ptr
		' Declare Abstract Function Get_SharePointURL () As BSTR
		' Declare Abstract Function Get_XmlMap () As XmlMap Ptr
		' Declare Abstract Function Get_DisplayName () As BSTR
		' Declare Abstract Function Let_DisplayName () As BSTR
		' Declare Abstract Function Get_ShowHeaders () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowHeaders () As VARIANT_BOOL
		' Declare Abstract Function Get_AutoFilter () As AutoFilter Ptr
		' Declare Abstract Function Get_TableStyle () As Variant Ptr
		' Declare Abstract Function Let_TableStyle () As Variant Ptr
		' Declare Abstract Function Get_ShowTableStyleFirstColumn () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowTableStyleFirstColumn () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowTableStyleLastColumn () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowTableStyleLastColumn () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowTableStyleRowStripes () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowTableStyleRowStripes () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowTableStyleColumnStripes () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowTableStyleColumnStripes () As VARIANT_BOOL
		' Declare Abstract Function Get_Sort () As Sort Ptr
		' Declare Abstract Function Get_Comment () As BSTR
		' Declare Abstract Function Let_Comment () As BSTR
		' Declare Abstract Function ExportToVisio () As HRESULT
		' Declare Abstract Function Get_AlternativeText () As BSTR
		' Declare Abstract Function Let_AlternativeText () As BSTR
		' Declare Abstract Function Get_Summary () As BSTR
		' Declare Abstract Function Let_Summary () As BSTR
		' Declare Abstract Function Get_TableObject () As TableObject Ptr
		' Declare Abstract Function Get_Slicers () As Slicers Ptr
		' Declare Abstract Function Get_ShowAutoFilterDropDown () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowAutoFilterDropDown () As VARIANT_BOOL
	End Type 'ListObject_

	Type ListColumns_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Position As Variant Ptr) As ListColumn Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As ListColumn Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As ListColumn Ptr
		' Declare Abstract Function Get_Count () As Long
	End Type 'ListColumns_

	Type ListColumn_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get__Default () As BSTR
		' Declare Abstract Function Get_ListDataFormat () As ListDataFormat Ptr
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_Range () As Range Ptr
		' Declare Abstract Function Get_TotalsCalculation () As XlTotalsCalculation
		' Declare Abstract Function Let_TotalsCalculation () As XlTotalsCalculation
		' Declare Abstract Function Get_XPath () As XPath Ptr
		' Declare Abstract Function Get_SharePointFormula () As BSTR
		' Declare Abstract Function Get_DataBodyRange () As Range Ptr
		' Declare Abstract Function Get_Total () As Range Ptr
	End Type 'ListColumn_

	Type ListRows_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function _Add (Byval Position As Variant Ptr) As ListRow Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As ListRow Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As ListRow Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Add (Byval Position As Variant Ptr, Byval AlwaysInsert As Variant Ptr) As ListRow Ptr
	End Type 'ListRows_

	Type ListRow_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_InvalidData () As VARIANT_BOOL
		' Declare Abstract Function Get_Range () As Range Ptr
	End Type 'ListRow_

	Type XmlNamespace_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get__Default () As BSTR
		' Declare Abstract Function Get_Uri () As BSTR
		' Declare Abstract Function Get_Prefix () As BSTR
	End Type 'XmlNamespace_

	Type XmlNamespaces_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As XmlNamespace Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As XmlNamespace Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Value () As BSTR
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function InstallManifest (Byval Path As BSTR, Byval InstallForAllUsers As Variant Ptr) As HRESULT
	End Type 'XmlNamespaces_

	Type XmlDataBinding_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get__Default () As BSTR
		' Declare Abstract Function Refresh () As XlXmlImportResult
		' Declare Abstract Function LoadSettings (Byval Url As BSTR) As HRESULT
		' Declare Abstract Function ClearSettings () As HRESULT
		' Declare Abstract Function Get_SourceUrl () As BSTR
	End Type 'XmlDataBinding_

	Type XmlSchema_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Namespace () As XmlNamespace Ptr
		' Declare Abstract Function Get_XML () As BSTR
		' Declare Abstract Function Get_Name () As BSTR
	End Type 'XmlSchema_

	Type XmlSchemas_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As XmlSchema Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As XmlSchema Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'XmlSchemas_

	Type XmlMap_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get__Default () As BSTR
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_IsExportable () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowImportExportValidationErrors () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowImportExportValidationErrors () As VARIANT_BOOL
		' Declare Abstract Function Get_SaveDataSourceDefinition () As VARIANT_BOOL
		' Declare Abstract Function Let_SaveDataSourceDefinition () As VARIANT_BOOL
		' Declare Abstract Function Get_AdjustColumnWidth () As VARIANT_BOOL
		' Declare Abstract Function Let_AdjustColumnWidth () As VARIANT_BOOL
		' Declare Abstract Function Get_PreserveColumnFilter () As VARIANT_BOOL
		' Declare Abstract Function Let_PreserveColumnFilter () As VARIANT_BOOL
		' Declare Abstract Function Get_PreserveNumberFormatting () As VARIANT_BOOL
		' Declare Abstract Function Let_PreserveNumberFormatting () As VARIANT_BOOL
		' Declare Abstract Function Get_AppendOnImport () As VARIANT_BOOL
		' Declare Abstract Function Let_AppendOnImport () As VARIANT_BOOL
		' Declare Abstract Function Get_RootElementName () As BSTR
		' Declare Abstract Function Get_RootElementNamespace () As XmlNamespace Ptr
		' Declare Abstract Function Get_Schemas () As XmlSchemas Ptr
		' Declare Abstract Function Get_DataBinding () As XmlDataBinding Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Import_ (Byval Url As BSTR, Byval Overwrite As Variant Ptr) As XlXmlImportResult
		' Declare Abstract Function ImportXml (Byval XmlData As BSTR, Byval Overwrite As Variant Ptr) As XlXmlImportResult
		' Declare Abstract Function Export_ (Byval Url As BSTR, Byval Overwrite As Variant Ptr) As XlXmlExportResult
		' Declare Abstract Function ExportXml (Byval Data As BSTR Ptr) As XlXmlExportResult
		' Declare Abstract Function Get_WorkbookConnection () As WorkbookConnection Ptr
	End Type 'XmlMap_

	Type XmlMaps_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Schema As BSTR, Byval RootElementName As Variant Ptr) As XmlMap Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As XmlMap Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As XmlMap Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'XmlMaps_

	Type ListDataFormat_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get__Default () As XlListDataType
		' Declare Abstract Function Get_Choices () As Variant Ptr
		' Declare Abstract Function Get_DecimalPlaces () As Long
		' Declare Abstract Function Get_DefaultValue () As Variant Ptr
		' Declare Abstract Function Get_IsPercent () As VARIANT_BOOL
		' Declare Abstract Function Get_lcid () As Long
		' Declare Abstract Function Get_MaxCharacters () As Long
		' Declare Abstract Function Get_MaxNumber () As Variant Ptr
		' Declare Abstract Function Get_MinNumber () As Variant Ptr
		' Declare Abstract Function Get_Required () As VARIANT_BOOL
		' Declare Abstract Function Get_Type () As XlListDataType
		' Declare Abstract Function Get_ReadOnly () As VARIANT_BOOL
		' Declare Abstract Function Get_AllowFillIn () As VARIANT_BOOL
	End Type 'ListDataFormat_

	Type XPath_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get__Default () As BSTR
		' Declare Abstract Function Get_Value () As BSTR
		' Declare Abstract Function Get_Map () As XmlMap Ptr
		' Declare Abstract Function SetValue (Byval Map As XmlMap Ptr, Byval XPath As BSTR, Byval SelectionNamespace As Variant Ptr, Byval Repeating As Variant Ptr) As HRESULT
		' Declare Abstract Function Clear () As HRESULT
		' Declare Abstract Function Get_Repeating () As VARIANT_BOOL
	End Type 'XPath_

	Type PivotLineCells_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As PivotCell Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As PivotCell Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Full () As VARIANT_BOOL
	End Type 'PivotLineCells_

	Type PivotLine_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_LineType () As XlPivotLineType
		' Declare Abstract Function Get_Position () As Long
		' Declare Abstract Function Get_PivotLineCells () As PivotLineCells Ptr
		' Declare Abstract Function Get_PivotLineCellsFull () As PivotLineCells Ptr
	End Type 'PivotLine_

	Type PivotLines_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As PivotLine Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As PivotLine Ptr
		' Declare Abstract Function Get_Count () As Long
	End Type 'PivotLines_

	Type PivotAxis_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_PivotLines () As PivotLines Ptr
	End Type 'PivotAxis_

	Type PivotFilter_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Order () As Long
		' Declare Abstract Function Let_Order () As Long
		' Declare Abstract Function Get_FilterType () As XlPivotFilterType
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Get_Description () As BSTR
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get_Active () As VARIANT_BOOL
		' Declare Abstract Function Get_PivotField () As PivotField Ptr
		' Declare Abstract Function Get_DataField () As PivotField Ptr
		' Declare Abstract Function Get_DataCubeField () As CubeField Ptr
		' Declare Abstract Function Get_Value1 () As Variant Ptr
		' Declare Abstract Function Get_Value2 () As Variant Ptr
		' Declare Abstract Function Get_MemberPropertyField () As PivotField Ptr
		' Declare Abstract Function Get_IsMemberPropertyFilter () As VARIANT_BOOL
		' Declare Abstract Function Get_WholeDayFilter () As VARIANT_BOOL
		' Declare Abstract Function Let_WholeDayFilter () As VARIANT_BOOL
	End Type 'PivotFilter_

	Type PivotFilters_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As PivotFilter Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As PivotFilter Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Add (Byval Type_v As XlPivotFilterType, Byval DataField As Variant Ptr, Byval Value1 As Variant Ptr, Byval Value2 As Variant Ptr, Byval Order As Variant Ptr, Byval Name As Variant Ptr, Byval Description As Variant Ptr, Byval MemberPropertyField As Variant Ptr) As PivotFilter Ptr
		' Declare Abstract Function Add2 (Byval Type_v As XlPivotFilterType, Byval DataField As Variant Ptr, Byval Value1 As Variant Ptr, Byval Value2 As Variant Ptr, Byval Order As Variant Ptr, Byval Name As Variant Ptr, Byval Description As Variant Ptr, Byval MemberPropertyField As Variant Ptr, Byval WholeDayFilter As Variant Ptr) As PivotFilter Ptr
	End Type 'PivotFilters_

	Type WorkbookConnection_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_Description () As BSTR
		' Declare Abstract Function Let_Description () As BSTR
		' Declare Abstract Function Get__Default () As BSTR
		' Declare Abstract Function Let__Default () As BSTR
		' Declare Abstract Function Get_Type () As XlConnectionType
		' Declare Abstract Function Get_OLEDBConnection () As OLEDBConnection Ptr
		' Declare Abstract Function Get_ODBCConnection () As ODBCConnection Ptr
		' Declare Abstract Function Get_Ranges () As Ranges Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Refresh () As HRESULT
		' Declare Abstract Function Get_ModelConnection () As ModelConnection Ptr
		' Declare Abstract Function Get_WorksheetDataConnection () As WorksheetDataConnection Ptr
		' Declare Abstract Function Get_RefreshWithRefreshAll () As VARIANT_BOOL
		' Declare Abstract Function Let_RefreshWithRefreshAll () As VARIANT_BOOL
		' Declare Abstract Function Get_TextConnection () As TextConnection Ptr
		' Declare Abstract Function Get_DataFeedConnection () As DataFeedConnection Ptr
		' Declare Abstract Function Get_InModel () As VARIANT_BOOL
		' Declare Abstract Function Get_ModelTables () As ModelTables Ptr
	End Type 'WorkbookConnection_

	Type Connections_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function _AddFromFile (Byval Filename As BSTR) As WorkbookConnection Ptr
		' Declare Abstract Function Add (Byval Name As BSTR, Byval Description As BSTR, Byval ConnectionString As Variant Ptr, Byval CommandText As Variant Ptr, Byval lCmdtype As Variant Ptr) As WorkbookConnection Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As WorkbookConnection Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As WorkbookConnection Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Add2 (Byval Name As BSTR, Byval Description As BSTR, Byval ConnectionString As Variant Ptr, Byval CommandText As Variant Ptr, Byval lCmdtype As Variant Ptr, Byval CreateModelConnection As Variant Ptr, Byval ImportRelationships As Variant Ptr) As WorkbookConnection Ptr
		' Declare Abstract Function AddFromFile (Byval Filename As BSTR, Byval CreateModelConnection As Variant Ptr, Byval ImportRelationships As Variant Ptr) As WorkbookConnection Ptr
	End Type 'Connections_

	Type WorksheetView_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Sheet () As IDispatch Ptr
		' Declare Abstract Function Get_DisplayGridlines () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayGridlines () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayFormulas () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayFormulas () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayHeadings () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayHeadings () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayOutline () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayOutline () As VARIANT_BOOL
		' Declare Abstract Function Get_DisplayZeros () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayZeros () As VARIANT_BOOL
	End Type 'WorksheetView_

	Type ChartView_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Sheet () As IDispatch Ptr
	End Type 'ChartView_

	Type ModuleView_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Sheet () As IDispatch Ptr
	End Type 'ModuleView_

	Type DialogSheetView_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Sheet () As IDispatch Ptr
	End Type 'DialogSheetView_

	Type SheetViews_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As IDispatch Ptr
	End Type 'SheetViews_

	Type OLEDBConnection_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_ADOConnection () As IDispatch Ptr
		' Declare Abstract Function Get_BackgroundQuery () As VARIANT_BOOL
		' Declare Abstract Function Let_BackgroundQuery () As VARIANT_BOOL
		' Declare Abstract Function CancelRefresh () As HRESULT
		' Declare Abstract Function Get_CommandText () As Variant Ptr
		' Declare Abstract Function Let_CommandText () As Variant Ptr
		' Declare Abstract Function Get_CommandType () As XlCmdType
		' Declare Abstract Function Let_CommandType () As XlCmdType
		' Declare Abstract Function Get_Connection () As Variant Ptr
		' Declare Abstract Function Let_Connection () As Variant Ptr
		' Declare Abstract Function Get_EnableRefresh () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableRefresh () As VARIANT_BOOL
		' Declare Abstract Function Get_LocalConnection () As Variant Ptr
		' Declare Abstract Function Let_LocalConnection () As Variant Ptr
		' Declare Abstract Function Get_MaintainConnection () As VARIANT_BOOL
		' Declare Abstract Function Let_MaintainConnection () As VARIANT_BOOL
		' Declare Abstract Function MakeConnection () As HRESULT
		' Declare Abstract Function Refresh () As HRESULT
		' Declare Abstract Function Get_RefreshDate () As Date_
		' Declare Abstract Function Get_Refreshing () As VARIANT_BOOL
		' Declare Abstract Function Get_RefreshOnFileOpen () As VARIANT_BOOL
		' Declare Abstract Function Let_RefreshOnFileOpen () As VARIANT_BOOL
		' Declare Abstract Function Get_RefreshPeriod () As Long
		' Declare Abstract Function Let_RefreshPeriod () As Long
		' Declare Abstract Function Get_RobustConnect () As XlRobustConnect
		' Declare Abstract Function Let_RobustConnect () As XlRobustConnect
		' Declare Abstract Function SaveAsODC (Byval ODCFileName As BSTR, Byval Description As Variant Ptr, Byval Keywords As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_SavePassword () As VARIANT_BOOL
		' Declare Abstract Function Let_SavePassword () As VARIANT_BOOL
		' Declare Abstract Function Get_SourceConnectionFile () As BSTR
		' Declare Abstract Function Let_SourceConnectionFile () As BSTR
		' Declare Abstract Function Get_SourceDataFile () As BSTR
		' Declare Abstract Function Let_SourceDataFile () As BSTR
		' Declare Abstract Function Get_OLAP () As VARIANT_BOOL
		' Declare Abstract Function Get_UseLocalConnection () As VARIANT_BOOL
		' Declare Abstract Function Let_UseLocalConnection () As VARIANT_BOOL
		' Declare Abstract Function Get_MaxDrillthroughRecords () As Long
		' Declare Abstract Function Let_MaxDrillthroughRecords () As Long
		' Declare Abstract Function Get_IsConnected () As VARIANT_BOOL
		' Declare Abstract Function Get_ServerCredentialsMethod () As XlCredentialsMethod
		' Declare Abstract Function Let_ServerCredentialsMethod () As XlCredentialsMethod
		' Declare Abstract Function Get_ServerSSOApplicationID () As BSTR
		' Declare Abstract Function Let_ServerSSOApplicationID () As BSTR
		' Declare Abstract Function Get_AlwaysUseConnectionFile () As VARIANT_BOOL
		' Declare Abstract Function Let_AlwaysUseConnectionFile () As VARIANT_BOOL
		' Declare Abstract Function Get_ServerFillColor () As VARIANT_BOOL
		' Declare Abstract Function Let_ServerFillColor () As VARIANT_BOOL
		' Declare Abstract Function Get_ServerFontStyle () As VARIANT_BOOL
		' Declare Abstract Function Let_ServerFontStyle () As VARIANT_BOOL
		' Declare Abstract Function Get_ServerNumberFormat () As VARIANT_BOOL
		' Declare Abstract Function Let_ServerNumberFormat () As VARIANT_BOOL
		' Declare Abstract Function Get_ServerTextColor () As VARIANT_BOOL
		' Declare Abstract Function Let_ServerTextColor () As VARIANT_BOOL
		' Declare Abstract Function Get_RetrieveInOfficeUILang () As VARIANT_BOOL
		' Declare Abstract Function Let_RetrieveInOfficeUILang () As VARIANT_BOOL
		' Declare Abstract Function Reconnect () As HRESULT
		' Declare Abstract Function Get_CalculatedMembers () As CalculatedMembers Ptr
		' Declare Abstract Function Get_LocaleID () As Long
		' Declare Abstract Function Let_LocaleID () As Long
	End Type 'OLEDBConnection_

	Type ODBCConnection_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_BackgroundQuery () As VARIANT_BOOL
		' Declare Abstract Function Let_BackgroundQuery () As VARIANT_BOOL
		' Declare Abstract Function CancelRefresh () As HRESULT
		' Declare Abstract Function Get_CommandText () As Variant Ptr
		' Declare Abstract Function Let_CommandText () As Variant Ptr
		' Declare Abstract Function Get_CommandType () As XlCmdType
		' Declare Abstract Function Let_CommandType () As XlCmdType
		' Declare Abstract Function Get_Connection () As Variant Ptr
		' Declare Abstract Function Let_Connection () As Variant Ptr
		' Declare Abstract Function Get_EnableRefresh () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableRefresh () As VARIANT_BOOL
		' Declare Abstract Function Refresh () As HRESULT
		' Declare Abstract Function Get_RefreshDate () As Date_
		' Declare Abstract Function Get_Refreshing () As VARIANT_BOOL
		' Declare Abstract Function Get_RefreshOnFileOpen () As VARIANT_BOOL
		' Declare Abstract Function Let_RefreshOnFileOpen () As VARIANT_BOOL
		' Declare Abstract Function Get_RefreshPeriod () As Long
		' Declare Abstract Function Let_RefreshPeriod () As Long
		' Declare Abstract Function Get_RobustConnect () As XlRobustConnect
		' Declare Abstract Function Let_RobustConnect () As XlRobustConnect
		' Declare Abstract Function SaveAsODC (Byval ODCFileName As BSTR, Byval Description As Variant Ptr, Byval Keywords As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_SavePassword () As VARIANT_BOOL
		' Declare Abstract Function Let_SavePassword () As VARIANT_BOOL
		' Declare Abstract Function Get_SourceConnectionFile () As BSTR
		' Declare Abstract Function Let_SourceConnectionFile () As BSTR
		' Declare Abstract Function Get_SourceData () As Variant Ptr
		' Declare Abstract Function Let_SourceData () As Variant Ptr
		' Declare Abstract Function Get_SourceDataFile () As BSTR
		' Declare Abstract Function Let_SourceDataFile () As BSTR
		' Declare Abstract Function Get_ServerCredentialsMethod () As XlCredentialsMethod
		' Declare Abstract Function Let_ServerCredentialsMethod () As XlCredentialsMethod
		' Declare Abstract Function Get_ServerSSOApplicationID () As BSTR
		' Declare Abstract Function Let_ServerSSOApplicationID () As BSTR
		' Declare Abstract Function Get_AlwaysUseConnectionFile () As VARIANT_BOOL
		' Declare Abstract Function Let_AlwaysUseConnectionFile () As VARIANT_BOOL
	End Type 'ODBCConnection_

	Type Action_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Get_Type () As XlActionType
		' Declare Abstract Function Get_Coordinate () As BSTR
		' Declare Abstract Function Get_Content () As BSTR
		' Declare Abstract Function Execute () As HRESULT
	End Type 'Action_

	Type Actions_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As Action Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As Action Ptr
		' Declare Abstract Function Get_Count () As Long
	End Type 'Actions_

	Type FormatColor_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Color () As Variant Ptr
		' Declare Abstract Function Let_Color () As Variant Ptr
		' Declare Abstract Function Get_ColorIndex () As XlColorIndex
		' Declare Abstract Function Let_ColorIndex () As XlColorIndex
		' Declare Abstract Function Get_ThemeColor () As Variant Ptr
		' Declare Abstract Function Let_ThemeColor () As Variant Ptr
		' Declare Abstract Function Get_TintAndShade () As Variant Ptr
		' Declare Abstract Function Let_TintAndShade () As Variant Ptr
	End Type 'FormatColor_

	Type ConditionValue_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Modify (Byval newtype As XlConditionValueTypes, Byval newvalue As Variant Ptr) As HRESULT
		' Declare Abstract Function Get_Type () As XlConditionValueTypes
		' Declare Abstract Function Get_Value () As Variant Ptr
	End Type 'ConditionValue_

	Type ColorScale_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Priority () As Long
		' Declare Abstract Function Let_Priority () As Long
		' Declare Abstract Function Get_StopIfTrue () As VARIANT_BOOL
		' Declare Abstract Function Get_AppliesTo () As Range Ptr
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_Type () As Long
		' Declare Abstract Function SetFirstPriority () As HRESULT
		' Declare Abstract Function SetLastPriority () As HRESULT
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function ModifyAppliesToRange (Byval Range As Range Ptr) As HRESULT
		' Declare Abstract Function Get_PTCondition () As VARIANT_BOOL
		' Declare Abstract Function Get_ScopeType () As XlPivotConditionScope
		' Declare Abstract Function Let_ScopeType () As XlPivotConditionScope
		' Declare Abstract Function Get_ColorScaleCriteria () As ColorScaleCriteria Ptr
	End Type 'ColorScale_

	Type ColorScaleCriteria_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As ColorScaleCriterion Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As ColorScaleCriterion Ptr
	End Type 'ColorScaleCriteria_

	Type ColorScaleCriterion_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Type () As XlConditionValueTypes
		' Declare Abstract Function Let_Type () As XlConditionValueTypes
		' Declare Abstract Function Get_Value () As Variant Ptr
		' Declare Abstract Function Let_Value () As Variant Ptr
		' Declare Abstract Function Get_FormatColor () As FormatColor Ptr
	End Type 'ColorScaleCriterion_

	Type Databar_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Priority () As Long
		' Declare Abstract Function Let_Priority () As Long
		' Declare Abstract Function Get_StopIfTrue () As VARIANT_BOOL
		' Declare Abstract Function Get_AppliesTo () As Range Ptr
		' Declare Abstract Function Get_MinPoint () As ConditionValue Ptr
		' Declare Abstract Function Get_MaxPoint () As ConditionValue Ptr
		' Declare Abstract Function Get_PercentMin () As Long
		' Declare Abstract Function Let_PercentMin () As Long
		' Declare Abstract Function Get_PercentMax () As Long
		' Declare Abstract Function Let_PercentMax () As Long
		' Declare Abstract Function Get_BarColor () As IDispatch Ptr
		' Declare Abstract Function Get_ShowValue () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowValue () As VARIANT_BOOL
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_Type () As Long
		' Declare Abstract Function SetFirstPriority () As HRESULT
		' Declare Abstract Function SetLastPriority () As HRESULT
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function ModifyAppliesToRange (Byval Range As Range Ptr) As HRESULT
		' Declare Abstract Function Get_PTCondition () As VARIANT_BOOL
		' Declare Abstract Function Get_ScopeType () As XlPivotConditionScope
		' Declare Abstract Function Let_ScopeType () As XlPivotConditionScope
		' Declare Abstract Function Get_Direction () As Long
		' Declare Abstract Function Let_Direction () As Long
		' Declare Abstract Function Get_BarFillType () As XlDataBarFillType
		' Declare Abstract Function Let_BarFillType () As XlDataBarFillType
		' Declare Abstract Function Get_AxisPosition () As XlDataBarAxisPosition
		' Declare Abstract Function Let_AxisPosition () As XlDataBarAxisPosition
		' Declare Abstract Function Get_AxisColor () As IDispatch Ptr
		' Declare Abstract Function Get_BarBorder () As DataBarBorder Ptr
		' Declare Abstract Function Get_NegativeBarFormat () As NegativeBarFormat Ptr
	End Type 'Databar_

	Type IconSetCondition_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Priority () As Long
		' Declare Abstract Function Let_Priority () As Long
		' Declare Abstract Function Get_StopIfTrue () As VARIANT_BOOL
		' Declare Abstract Function Get_AppliesTo () As Range Ptr
		' Declare Abstract Function Get_Type () As Long
		' Declare Abstract Function ModifyAppliesToRange (Byval Range As Range Ptr) As HRESULT
		' Declare Abstract Function Get_PTCondition () As VARIANT_BOOL
		' Declare Abstract Function Get_ScopeType () As XlPivotConditionScope
		' Declare Abstract Function Let_ScopeType () As XlPivotConditionScope
		' Declare Abstract Function SetFirstPriority () As HRESULT
		' Declare Abstract Function SetLastPriority () As HRESULT
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get_ReverseOrder () As VARIANT_BOOL
		' Declare Abstract Function Let_ReverseOrder () As VARIANT_BOOL
		' Declare Abstract Function Get_PercentileValues () As VARIANT_BOOL
		' Declare Abstract Function Let_PercentileValues () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowIconOnly () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowIconOnly () As VARIANT_BOOL
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_IconSet () As Variant Ptr
		' Declare Abstract Function Let_IconSet () As Variant Ptr
		' Declare Abstract Function Get_IconCriteria () As IconCriteria Ptr
	End Type 'IconSetCondition_

	Type IconCriteria_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As IconCriterion Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As IconCriterion Ptr
	End Type 'IconCriteria_

	Type IconCriterion_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_Type () As XlConditionValueTypes
		' Declare Abstract Function Let_Type () As XlConditionValueTypes
		' Declare Abstract Function Get_Value () As Variant Ptr
		' Declare Abstract Function Let_Value () As Variant Ptr
		' Declare Abstract Function Get_Operator () As Long
		' Declare Abstract Function Let_Operator () As Long
		' Declare Abstract Function Get_Icon () As XlIcon
		' Declare Abstract Function Let_Icon () As XlIcon
	End Type 'IconCriterion_

	Type Icon_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IconSet Ptr
		' Declare Abstract Function Get_Index () As Long
	End Type 'Icon_

	Type IconSet_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_ID () As XlIconSet
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As Icon Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As Icon Ptr
	End Type 'IconSet_

	Type IconSets_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As IDispatch Ptr
	End Type 'IconSets_

	Type Top10_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Priority () As Long
		' Declare Abstract Function Let_Priority () As Long
		' Declare Abstract Function Get_StopIfTrue () As VARIANT_BOOL
		' Declare Abstract Function Let_StopIfTrue () As VARIANT_BOOL
		' Declare Abstract Function Get_AppliesTo () As Range Ptr
		' Declare Abstract Function Get_TopBottom () As XlTopBottom
		' Declare Abstract Function Let_TopBottom () As XlTopBottom
		' Declare Abstract Function Get_Rank () As Long
		' Declare Abstract Function Let_Rank () As Long
		' Declare Abstract Function Get_Percent () As VARIANT_BOOL
		' Declare Abstract Function Let_Percent () As VARIANT_BOOL
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Borders () As Borders Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Type () As Long
		' Declare Abstract Function Get_NumberFormat () As Variant Ptr
		' Declare Abstract Function Let_NumberFormat () As Variant Ptr
		' Declare Abstract Function SetFirstPriority () As HRESULT
		' Declare Abstract Function SetLastPriority () As HRESULT
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function ModifyAppliesToRange (Byval Range As Range Ptr) As HRESULT
		' Declare Abstract Function Get_PTCondition () As VARIANT_BOOL
		' Declare Abstract Function Get_ScopeType () As XlPivotConditionScope
		' Declare Abstract Function Let_ScopeType () As XlPivotConditionScope
		' Declare Abstract Function Get_CalcFor () As XlCalcFor
		' Declare Abstract Function Let_CalcFor () As XlCalcFor
	End Type 'Top10_

	Type AboveAverage_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Priority () As Long
		' Declare Abstract Function Let_Priority () As Long
		' Declare Abstract Function Get_StopIfTrue () As VARIANT_BOOL
		' Declare Abstract Function Let_StopIfTrue () As VARIANT_BOOL
		' Declare Abstract Function Get_AppliesTo () As Range Ptr
		' Declare Abstract Function Get_AboveBelow () As XlAboveBelow
		' Declare Abstract Function Let_AboveBelow () As XlAboveBelow
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Borders () As Borders Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Type () As Long
		' Declare Abstract Function Get_NumberFormat () As Variant Ptr
		' Declare Abstract Function Let_NumberFormat () As Variant Ptr
		' Declare Abstract Function SetFirstPriority () As HRESULT
		' Declare Abstract Function SetLastPriority () As HRESULT
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function ModifyAppliesToRange (Byval Range As Range Ptr) As HRESULT
		' Declare Abstract Function Get_PTCondition () As VARIANT_BOOL
		' Declare Abstract Function Get_ScopeType () As XlPivotConditionScope
		' Declare Abstract Function Let_ScopeType () As XlPivotConditionScope
		' Declare Abstract Function Get_CalcFor () As XlCalcFor
		' Declare Abstract Function Let_CalcFor () As XlCalcFor
		' Declare Abstract Function Get_NumStdDev () As Long
		' Declare Abstract Function Let_NumStdDev () As Long
	End Type 'AboveAverage_

	Type UniqueValues_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Priority () As Long
		' Declare Abstract Function Let_Priority () As Long
		' Declare Abstract Function Get_StopIfTrue () As VARIANT_BOOL
		' Declare Abstract Function Let_StopIfTrue () As VARIANT_BOOL
		' Declare Abstract Function Get_AppliesTo () As Range Ptr
		' Declare Abstract Function Get_DupeUnique () As XlDupeUnique
		' Declare Abstract Function Let_DupeUnique () As XlDupeUnique
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Borders () As Borders Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Type () As Long
		' Declare Abstract Function Get_NumberFormat () As Variant Ptr
		' Declare Abstract Function Let_NumberFormat () As Variant Ptr
		' Declare Abstract Function SetFirstPriority () As HRESULT
		' Declare Abstract Function SetLastPriority () As HRESULT
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function ModifyAppliesToRange (Byval Range As Range Ptr) As HRESULT
		' Declare Abstract Function Get_PTCondition () As VARIANT_BOOL
		' Declare Abstract Function Get_ScopeType () As XlPivotConditionScope
		' Declare Abstract Function Let_ScopeType () As XlPivotConditionScope
	End Type 'UniqueValues_

	Type Ranges_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As Range Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As Range Ptr
		' Declare Abstract Function Get_Count () As Long
	End Type 'Ranges_

	Type HeaderFooter_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Text () As BSTR
		' Declare Abstract Function Let_Text () As BSTR
		' Declare Abstract Function Get_Picture () As Graphic Ptr
	End Type 'HeaderFooter_

	Type Page_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_LeftHeader () As HeaderFooter Ptr
		' Declare Abstract Function Get_CenterHeader () As HeaderFooter Ptr
		' Declare Abstract Function Get_RightHeader () As HeaderFooter Ptr
		' Declare Abstract Function Get_LeftFooter () As HeaderFooter Ptr
		' Declare Abstract Function Get_CenterFooter () As HeaderFooter Ptr
		' Declare Abstract Function Get_RightFooter () As HeaderFooter Ptr
	End Type 'Page_

	Type Pages_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As Page Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As Page Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'Pages_

	Type ServerViewableItems_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Add (Byval Obj As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Delete_ (Byval Index As Variant Ptr) As HRESULT
		' Declare Abstract Function DeleteAll () As HRESULT
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As IDispatch Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'ServerViewableItems_

	Type TableStyleElement_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_HasFormat () As VARIANT_BOOL
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Borders () As Borders Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_StripeSize () As Long
		' Declare Abstract Function Let_StripeSize () As Long
		' Declare Abstract Function Clear () As HRESULT
	End Type 'TableStyleElement_

	Type TableStyleElements_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As XlTableStyleElementType) As TableStyleElement Ptr
		' Declare Abstract Function Get__Default (Byval Index As XlTableStyleElementType) As TableStyleElement Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'TableStyleElements_

	Type TableStyle_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get__Default () As BSTR
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Get_NameLocal () As BSTR
		' Declare Abstract Function Get_BuiltIn () As VARIANT_BOOL
		' Declare Abstract Function Get_TableStyleElements () As TableStyleElements Ptr
		' Declare Abstract Function Get_ShowAsAvailableTableStyle () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowAsAvailableTableStyle () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowAsAvailablePivotTableStyle () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowAsAvailablePivotTableStyle () As VARIANT_BOOL
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Duplicate (Byval NewTableStyleName As Variant Ptr) As TableStyle Ptr
		' Declare Abstract Function Get_ShowAsAvailableSlicerStyle () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowAsAvailableSlicerStyle () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowAsAvailableTimelineStyle () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowAsAvailableTimelineStyle () As VARIANT_BOOL
	End Type 'TableStyle_

	Type TableStyles_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Add (Byval TableStyleName As BSTR) As TableStyle Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As TableStyle Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As TableStyle Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'TableStyles_

	Type SortField_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_SortOn () As XlSortOn
		' Declare Abstract Function Let_SortOn () As XlSortOn
		' Declare Abstract Function Get_SortOnValue () As IDispatch Ptr
		' Declare Abstract Function Get_Key () As Range Ptr
		' Declare Abstract Function Get_Order () As XlSortOrder
		' Declare Abstract Function Let_Order () As XlSortOrder
		' Declare Abstract Function Get_CustomOrder () As Variant Ptr
		' Declare Abstract Function Let_CustomOrder () As Variant Ptr
		' Declare Abstract Function Get_DataOption () As XlSortDataOption
		' Declare Abstract Function Let_DataOption () As XlSortDataOption
		' Declare Abstract Function Get_Priority () As Long
		' Declare Abstract Function Let_Priority () As Long
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function ModifyKey (Byval Key As Range Ptr) As HRESULT
		' Declare Abstract Function SetIcon (Byval Icon As Icon Ptr) As HRESULT
	End Type 'SortField_

	Type SortFields_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Key As Range Ptr, Byval SortOn As Variant Ptr, Byval Order As Variant Ptr, Byval CustomOrder As Variant Ptr, Byval DataOption As Variant Ptr) As SortField Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As SortField Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Clear () As HRESULT
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As SortField Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'SortFields_

	Type Sort_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Rng () As Range Ptr
		' Declare Abstract Function Get_Header () As XlYesNoGuess
		' Declare Abstract Function Let_Header () As XlYesNoGuess
		' Declare Abstract Function Get_MatchCase () As VARIANT_BOOL
		' Declare Abstract Function Let_MatchCase () As VARIANT_BOOL
		' Declare Abstract Function Get_Orientation () As XlSortOrientation
		' Declare Abstract Function Let_Orientation () As XlSortOrientation
		' Declare Abstract Function Get_SortMethod () As XlSortMethod
		' Declare Abstract Function Let_SortMethod () As XlSortMethod
		' Declare Abstract Function Get_SortFields () As SortFields Ptr
		' Declare Abstract Function SetRange (Byval Rng As Range Ptr) As HRESULT
		' Declare Abstract Function Apply () As HRESULT
	End Type 'Sort_

	Type Research_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Query (Byval ServiceID As BSTR, Byval QueryString As Variant Ptr, Byval QueryLanguage As Variant Ptr, Byval UseSelection As Variant Ptr, Byval LaunchQuery As Variant Ptr) As Variant Ptr
		' Declare Abstract Function IsResearchService (Byval ServiceID As BSTR) As VARIANT_BOOL
		' Declare Abstract Function SetLanguagePair (Byval LanguageFrom As Long, Byval LanguageTo As Long) As Variant Ptr
	End Type 'Research_

	Type ColorStop_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get_Color () As Variant Ptr
		' Declare Abstract Function Let_Color () As Variant Ptr
		' Declare Abstract Function Get_ThemeColor () As Long
		' Declare Abstract Function Let_ThemeColor () As Long
		' Declare Abstract Function Get_TintAndShade () As Variant Ptr
		' Declare Abstract Function Let_TintAndShade () As Variant Ptr
		' Declare Abstract Function Get_Position () As Double
		' Declare Abstract Function Let_Position () As Double
	End Type 'ColorStop_

	Type ColorStops_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Add (Byval Position As Double) As ColorStop Ptr
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As ColorStop Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As ColorStop Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Clear () As HRESULT
	End Type 'ColorStops_

	Type LinearGradient_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_ColorStops () As ColorStops Ptr
		' Declare Abstract Function Get_Degree () As Double
		' Declare Abstract Function Let_Degree () As Double
	End Type 'LinearGradient_

	Type RectangularGradient_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_ColorStops () As ColorStops Ptr
		' Declare Abstract Function Get_RectangleTop () As Double
		' Declare Abstract Function Let_RectangleTop () As Double
		' Declare Abstract Function Get_RectangleBottom () As Double
		' Declare Abstract Function Let_RectangleBottom () As Double
		' Declare Abstract Function Get_RectangleLeft () As Double
		' Declare Abstract Function Let_RectangleLeft () As Double
		' Declare Abstract Function Get_RectangleRight () As Double
		' Declare Abstract Function Let_RectangleRight () As Double
	End Type 'RectangularGradient_

	Type MultiThreadedCalculation_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Let_Enabled () As VARIANT_BOOL
		' Declare Abstract Function Get_ThreadMode () As XlThreadMode
		' Declare Abstract Function Let_ThreadMode () As XlThreadMode
		' Declare Abstract Function Get_ThreadCount () As Long
		' Declare Abstract Function Let_ThreadCount () As Long
	End Type 'MultiThreadedCalculation_

	Type ChartFormat_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Fill () As FillFormat Ptr
		' Declare Abstract Function Get_Glow () As Office.GlowFormat Ptr
		' Declare Abstract Function Get_Line () As LineFormat Ptr
		' Declare Abstract Function Get_PictureFormat () As PictureFormat Ptr
		' Declare Abstract Function Get_Shadow () As ShadowFormat Ptr
		' Declare Abstract Function Get_SoftEdge () As Office.SoftEdgeFormat Ptr
		' Declare Abstract Function Get_TextFrame2 () As TextFrame2 Ptr
		' Declare Abstract Function Get_ThreeD () As ThreeDFormat Ptr
		' Declare Abstract Function Get_Adjustments () As Adjustments Ptr
		' Declare Abstract Function Get_AutoShapeType () As Office.MsoAutoShapeType
		' Declare Abstract Function Let_AutoShapeType () As Office.MsoAutoShapeType
	End Type 'ChartFormat_

	Type FileExportConverter_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Extensions () As BSTR
		' Declare Abstract Function Get_Description () As BSTR
		' Declare Abstract Function Get_FileFormat () As Long
	End Type 'FileExportConverter_

	Type FileExportConverters_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As FileExportConverter Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As FileExportConverter Ptr
	End Type 'FileExportConverters_

	Type AddIns2_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Filename As BSTR, Byval CopyFile As Variant Ptr) As AddIn Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As AddIn Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As AddIn Ptr
	End Type 'AddIns2_

	Type SparklineGroups_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Add (Byval Type_v As XlSparkType, Byval SourceData As BSTR) As SparklineGroup Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As SparklineGroup Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As SparklineGroup Ptr
		' Declare Abstract Function Clear () As HRESULT
		' Declare Abstract Function ClearGroups () As HRESULT
		' Declare Abstract Function Group (Byval Location As Range Ptr) As HRESULT
		' Declare Abstract Function Ungroup () As HRESULT
	End Type 'SparklineGroups_

	Type SparklineGroup_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As Sparkline Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_Location () As Range Ptr
		' Declare Abstract Function Set_Location () As Range Ptr
		' Declare Abstract Function Get_SourceData () As BSTR
		' Declare Abstract Function Let_SourceData () As BSTR
		' Declare Abstract Function Get_DateRange () As BSTR
		' Declare Abstract Function Let_DateRange () As BSTR
		' Declare Abstract Function ModifyLocation (Byval Location As Range Ptr) As HRESULT
		' Declare Abstract Function ModifySourceData (Byval SourceData As BSTR) As HRESULT
		' Declare Abstract Function Modify (Byval Location As Range Ptr, Byval SourceData As BSTR) As HRESULT
		' Declare Abstract Function ModifyDateRange (Byval DateRange As BSTR) As HRESULT
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get_Type () As XlSparkType
		' Declare Abstract Function Let_Type () As XlSparkType
		' Declare Abstract Function Get_SeriesColor () As FormatColor Ptr
		' Declare Abstract Function Get_Points () As SparkPoints Ptr
		' Declare Abstract Function Get_Axes () As SparkAxes Ptr
		' Declare Abstract Function Get_DisplayBlanksAs () As XlDisplayBlanksAs
		' Declare Abstract Function Let_DisplayBlanksAs () As XlDisplayBlanksAs
		' Declare Abstract Function Get_DisplayHidden () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayHidden () As VARIANT_BOOL
		' Declare Abstract Function Get_LineWeight () As Variant Ptr
		' Declare Abstract Function Let_LineWeight () As Variant Ptr
		' Declare Abstract Function Get_PlotBy () As XlSparklineRowCol
		' Declare Abstract Function Let_PlotBy () As XlSparklineRowCol
	End Type 'SparklineGroup_

	Type SparkPoints_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Negative () As SparkColor Ptr
		' Declare Abstract Function Get_Markers () As SparkColor Ptr
		' Declare Abstract Function Get_Highpoint () As SparkColor Ptr
		' Declare Abstract Function Get_Lowpoint () As SparkColor Ptr
		' Declare Abstract Function Get_Firstpoint () As SparkColor Ptr
		' Declare Abstract Function Get_Lastpoint () As SparkColor Ptr
	End Type 'SparkPoints_

	Type Sparkline_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Location () As Range Ptr
		' Declare Abstract Function Set_Location () As Range Ptr
		' Declare Abstract Function Get_SourceData () As BSTR
		' Declare Abstract Function Let_SourceData () As BSTR
		' Declare Abstract Function ModifyLocation (Byval Range As Range Ptr) As HRESULT
		' Declare Abstract Function ModifySourceData (Byval Formula As BSTR) As HRESULT
	End Type 'Sparkline_

	Type SparkAxes_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Vertical () As SparkVerticalAxis Ptr
		' Declare Abstract Function Get_Horizontal () As SparkHorizontalAxis Ptr
	End Type 'SparkAxes_

	Type SparkHorizontalAxis_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Axis () As SparkColor Ptr
		' Declare Abstract Function Get_IsDateAxis () As VARIANT_BOOL
		' Declare Abstract Function Get_RightToLeftPlotOrder () As VARIANT_BOOL
		' Declare Abstract Function Let_RightToLeftPlotOrder () As VARIANT_BOOL
	End Type 'SparkHorizontalAxis_

	Type SparkVerticalAxis_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_MinScaleType () As XlSparkScale
		' Declare Abstract Function Let_MinScaleType () As XlSparkScale
		' Declare Abstract Function Get_CustomMinScaleValue () As Variant Ptr
		' Declare Abstract Function Let_CustomMinScaleValue () As Variant Ptr
		' Declare Abstract Function Get_MaxScaleType () As XlSparkScale
		' Declare Abstract Function Let_MaxScaleType () As XlSparkScale
		' Declare Abstract Function Get_CustomMaxScaleValue () As Variant Ptr
		' Declare Abstract Function Let_CustomMaxScaleValue () As Variant Ptr
	End Type 'SparkVerticalAxis_

	Type SparkColor_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_Color () As FormatColor Ptr
	End Type 'SparkColor_

	Type DataBarBorder_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Type () As XlDataBarBorderType
		' Declare Abstract Function Let_Type () As XlDataBarBorderType
		' Declare Abstract Function Get_Color () As IDispatch Ptr
	End Type 'DataBarBorder_

	Type NegativeBarFormat_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_ColorType () As XlDataBarNegativeColorType
		' Declare Abstract Function Let_ColorType () As XlDataBarNegativeColorType
		' Declare Abstract Function Get_BorderColorType () As XlDataBarNegativeColorType
		' Declare Abstract Function Let_BorderColorType () As XlDataBarNegativeColorType
		' Declare Abstract Function Get_Color () As IDispatch Ptr
		' Declare Abstract Function Get_BorderColor () As IDispatch Ptr
	End Type 'NegativeBarFormat_

	Type ValueChange_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Order () As Long
		' Declare Abstract Function Get_VisibleInPivotTable () As VARIANT_BOOL
		' Declare Abstract Function Get_PivotCell () As PivotCell Ptr
		' Declare Abstract Function Get_Tuple () As BSTR
		' Declare Abstract Function Get_Value () As Double
		' Declare Abstract Function Get_AllocationValue () As XlAllocationValue
		' Declare Abstract Function Get_AllocationMethod () As XlAllocationMethod
		' Declare Abstract Function Get_AllocationWeightExpression () As BSTR
		' Declare Abstract Function Delete_ () As HRESULT
	End Type 'ValueChange_

	Type PivotTableChangeList_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As ValueChange Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As ValueChange Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Add (Byval Tuple As BSTR, Byval Value As Double, Byval AllocationValue As Variant Ptr, Byval AllocationMethod As Variant Ptr, Byval AllocationWeightExpression As Variant Ptr) As ValueChange Ptr
	End Type 'PivotTableChangeList_

	Type DisplayFormat_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Borders () As Borders Ptr
		' Declare Abstract Function Get_Characters (Byval Start As Variant Ptr, Byval Length As Variant Ptr) As Characters Ptr
		' Declare Abstract Function Get_Font () As Font Ptr
		' Declare Abstract Function Get_Style () As Variant Ptr
		' Declare Abstract Function Get_AddIndent () As Variant Ptr
		' Declare Abstract Function Get_FormulaHidden () As Variant Ptr
		' Declare Abstract Function Get_HorizontalAlignment () As Variant Ptr
		' Declare Abstract Function Get_IndentLevel () As Variant Ptr
		' Declare Abstract Function Get_Interior () As Interior Ptr
		' Declare Abstract Function Get_Locked () As Variant Ptr
		' Declare Abstract Function Get_MergeCells () As Variant Ptr
		' Declare Abstract Function Get_NumberFormat () As Variant Ptr
		' Declare Abstract Function Get_NumberFormatLocal () As Variant Ptr
		' Declare Abstract Function Get_Orientation () As Variant Ptr
		' Declare Abstract Function Get_ReadingOrder () As Long
		' Declare Abstract Function Get_ShrinkToFit () As Variant Ptr
		' Declare Abstract Function Get_VerticalAlignment () As Variant Ptr
		' Declare Abstract Function Get_WrapText () As Variant Ptr
	End Type 'DisplayFormat_

	Type SlicerCaches_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As SlicerCache Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As SlicerCache Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Add (Byval Source As Variant Ptr, Byval SourceField As Variant Ptr, Byval Name As Variant Ptr) As SlicerCache Ptr
		' Declare Abstract Function Add2 (Byval Source As Variant Ptr, Byval SourceField As Variant Ptr, Byval Name As Variant Ptr, Byval SlicerCacheType As Variant Ptr) As SlicerCache Ptr
	End Type 'SlicerCaches_

	Type SlicerCache_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Index () As Long
		' Declare Abstract Function Get_OLAP () As VARIANT_BOOL
		' Declare Abstract Function Get_SourceType () As XlPivotTableSourceType
		' Declare Abstract Function Get_WorkbookConnection () As WorkbookConnection Ptr
		' Declare Abstract Function Get_Slicers () As Slicers Ptr
		' Declare Abstract Function Get_PivotTables () As SlicerPivotTables Ptr
		' Declare Abstract Function Get_SlicerCacheLevels () As SlicerCacheLevels Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_VisibleSlicerItems () As SlicerItems Ptr
		' Declare Abstract Function Get_VisibleSlicerItemsList () As Variant Ptr
		' Declare Abstract Function Let_VisibleSlicerItemsList () As Variant Ptr
		' Declare Abstract Function Get_SlicerItems () As SlicerItems Ptr
		' Declare Abstract Function Get_CrossFilterType () As XlSlicerCrossFilterType
		' Declare Abstract Function Let_CrossFilterType () As XlSlicerCrossFilterType
		' Declare Abstract Function Get_SortItems () As XlSlicerSort
		' Declare Abstract Function Let_SortItems () As XlSlicerSort
		' Declare Abstract Function Get_SourceName () As BSTR
		' Declare Abstract Function Get_SortUsingCustomLists () As VARIANT_BOOL
		' Declare Abstract Function Let_SortUsingCustomLists () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowAllItems () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowAllItems () As VARIANT_BOOL
		' Declare Abstract Function ClearManualFilter () As HRESULT
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Get_TimelineState () As TimelineState Ptr
		' Declare Abstract Function ClearAllFilters () As HRESULT
		' Declare Abstract Function Get_SlicerCacheType () As XlSlicerCacheType
		' Declare Abstract Function Get_FilterCleared () As VARIANT_BOOL
		' Declare Abstract Function Get_List () As VARIANT_BOOL
		' Declare Abstract Function Get_RequireManualUpdate () As VARIANT_BOOL
		' Declare Abstract Function Let_RequireManualUpdate () As VARIANT_BOOL
		' Declare Abstract Function Get_ListObject () As ListObject Ptr
		' Declare Abstract Function ClearDateFilter () As HRESULT
	End Type 'SlicerCache_

	Type SlicerCacheLevels_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Level As Variant Ptr) As SlicerCacheLevel Ptr
		' Declare Abstract Function Get__Default (Byval Level As Variant Ptr) As SlicerCacheLevel Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'SlicerCacheLevels_

	Type SlicerCacheLevel_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_SlicerItems () As SlicerItems Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Ordinal () As Long
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Get_CrossFilterType () As XlSlicerCrossFilterType
		' Declare Abstract Function Let_CrossFilterType () As XlSlicerCrossFilterType
		' Declare Abstract Function Get_SortItems () As XlSlicerSort
		' Declare Abstract Function Let_SortItems () As XlSlicerSort
		' Declare Abstract Function Get_VisibleSlicerItemsList () As Variant Ptr
	End Type 'SlicerCacheLevel_

	Type Slicers_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As Slicer Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As Slicer Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Add (Byval SlicerDestination As Variant Ptr, Byval Level As Variant Ptr, Byval Name As Variant Ptr, Byval Caption As Variant Ptr, Byval Top As Variant Ptr, Byval Left As Variant Ptr, Byval Width As Variant Ptr, Byval Height As Variant Ptr) As Slicer Ptr
	End Type 'Slicers_

	Type Slicer_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_DisableMoveResizeUI () As VARIANT_BOOL
		' Declare Abstract Function Let_DisableMoveResizeUI () As VARIANT_BOOL
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_RowHeight () As Double
		' Declare Abstract Function Let_RowHeight () As Double
		' Declare Abstract Function Get_ColumnWidth () As Double
		' Declare Abstract Function Let_ColumnWidth () As Double
		' Declare Abstract Function Get_NumberOfColumns () As Long
		' Declare Abstract Function Let_NumberOfColumns () As Long
		' Declare Abstract Function Get_DisplayHeader () As VARIANT_BOOL
		' Declare Abstract Function Let_DisplayHeader () As VARIANT_BOOL
		' Declare Abstract Function Get_Locked () As VARIANT_BOOL
		' Declare Abstract Function Let_Locked () As VARIANT_BOOL
		' Declare Abstract Function Get_SlicerCache () As SlicerCache Ptr
		' Declare Abstract Function Get_SlicerCacheLevel () As SlicerCacheLevel Ptr
		' Declare Abstract Function Get_Shape () As Shape Ptr
		' Declare Abstract Function Get_Style () As Variant Ptr
		' Declare Abstract Function Let_Style () As Variant Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Cut () As HRESULT
		' Declare Abstract Function Copy () As HRESULT
		' Declare Abstract Function Get_ActiveItem () As SlicerItem Ptr
		' Declare Abstract Function Get_TimelineViewState () As TimelineViewState Ptr
		' Declare Abstract Function Get_SlicerCacheType () As XlSlicerCacheType
	End Type 'Slicer_

	Type SlicerItem_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As SlicerCache Ptr
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Get_SourceName () As Variant Ptr
		' Declare Abstract Function Get_SourceNameStandard () As BSTR
		' Declare Abstract Function Get_Value () As BSTR
		' Declare Abstract Function Get_Selected () As VARIANT_BOOL
		' Declare Abstract Function Let_Selected () As VARIANT_BOOL
		' Declare Abstract Function Get_HasData () As VARIANT_BOOL
	End Type 'SlicerItem_

	Type SlicerItems_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As SlicerItem Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As SlicerItem Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'SlicerItems_

	Type SlicerPivotTables_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As PivotTable Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As PivotTable Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function AddPivotTable (Byval PivotTable As PivotTable Ptr) As HRESULT
		' Declare Abstract Function RemovePivotTable (Byval PivotTable As Variant Ptr) As HRESULT
	End Type 'SlicerPivotTables_

	Type ProtectedViewWindows_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Get_Item (Byval Index As Variant Ptr) As ProtectedViewWindow Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As ProtectedViewWindow Ptr
		' Declare Abstract Function Open (Byval Filename As BSTR, Byval Password As Variant Ptr, Byval AddToMru As Variant Ptr, Byval RepairMode As Variant Ptr) As ProtectedViewWindow Ptr
	End Type 'ProtectedViewWindows_

	Type ProtectedViewWindow_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get__Default () As BSTR
		' Declare Abstract Function Get_Caption () As BSTR
		' Declare Abstract Function Let_Caption () As BSTR
		' Declare Abstract Function Get_EnableResize () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableResize () As VARIANT_BOOL
		' Declare Abstract Function Get_Height () As Double
		' Declare Abstract Function Let_Height () As Double
		' Declare Abstract Function Get_Left () As Double
		' Declare Abstract Function Let_Left () As Double
		' Declare Abstract Function Get_Top () As Double
		' Declare Abstract Function Let_Top () As Double
		' Declare Abstract Function Get_Width () As Double
		' Declare Abstract Function Let_Width () As Double
		' Declare Abstract Function Get_Visible () As VARIANT_BOOL
		' Declare Abstract Function Let_Visible () As VARIANT_BOOL
		' Declare Abstract Function Get_SourceName () As BSTR
		' Declare Abstract Function Get_SourcePath () As BSTR
		' Declare Abstract Function Get_WindowState () As XlProtectedViewWindowState
		' Declare Abstract Function Let_WindowState () As XlProtectedViewWindowState
		' Declare Abstract Function Get_Workbook () As Workbook Ptr
		' Declare Abstract Function Activate () As HRESULT
		' Declare Abstract Function Close () As VARIANT_BOOL
		' Declare Abstract Function Edit (Byval WriteResPassword As Variant Ptr, Byval UpdateLinks As Variant Ptr) As Workbook Ptr
	End Type 'ProtectedViewWindow_

	Type TableObject_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_RowNumbers () As VARIANT_BOOL
		' Declare Abstract Function Let_RowNumbers () As VARIANT_BOOL
		' Declare Abstract Function Get_FetchedRowOverflow () As VARIANT_BOOL
		' Declare Abstract Function Get_RefreshStyle () As XlCellInsertionMode
		' Declare Abstract Function Let_RefreshStyle () As XlCellInsertionMode
		' Declare Abstract Function Get_EnableRefresh () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableRefresh () As VARIANT_BOOL
		' Declare Abstract Function Get_Destination () As Range Ptr
		' Declare Abstract Function Get_ResultRange () As Range Ptr
		' Declare Abstract Function Delete_ () As HRESULT
		' Declare Abstract Function Refresh () As VARIANT_BOOL
		' Declare Abstract Function Get_EnableEditing () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableEditing () As VARIANT_BOOL
		' Declare Abstract Function Get_PreserveColumnInfo () As VARIANT_BOOL
		' Declare Abstract Function Let_PreserveColumnInfo () As VARIANT_BOOL
		' Declare Abstract Function Get_PreserveFormatting () As VARIANT_BOOL
		' Declare Abstract Function Let_PreserveFormatting () As VARIANT_BOOL
		' Declare Abstract Function Get_AdjustColumnWidth () As VARIANT_BOOL
		' Declare Abstract Function Let_AdjustColumnWidth () As VARIANT_BOOL
		' Declare Abstract Function Get_ListObject () As ListObject Ptr
		' Declare Abstract Function Get_WorkbookConnection () As WorkbookConnection Ptr
	End Type 'TableObject_

	Type PivotValueCell_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_PivotCell () As PivotCell Ptr
		' Declare Abstract Function Get_Value () As Variant Ptr
		' Declare Abstract Function ShowDetail () As HRESULT
		' Declare Abstract Function Get_ServerActions () As Actions Ptr
	End Type 'PivotValueCell_

	Type QuickAnalysis_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Show (Byval XlQuickAnalysisMode As XlQuickAnalysisMode) As HRESULT
		' Declare Abstract Function Hide (Byval XlQuickAnalysisMode As XlQuickAnalysisMode) As HRESULT
	End Type 'QuickAnalysis_

	Type ModelConnection_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_CommandText () As Variant Ptr
		' Declare Abstract Function Let_CommandText () As Variant Ptr
		' Declare Abstract Function Get_CommandType () As XlCmdType
		' Declare Abstract Function Let_CommandType () As XlCmdType
		' Declare Abstract Function Get_ADOConnection () As IDispatch Ptr
		' Declare Abstract Function Get_CalculatedMembers () As CalculatedMembers Ptr
	End Type 'ModelConnection_

	Type WorksheetDataConnection_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Connection () As Variant Ptr
		' Declare Abstract Function Get_CommandText () As Variant Ptr
		' Declare Abstract Function Let_CommandText () As Variant Ptr
		' Declare Abstract Function Get_CommandType () As XlCmdType
		' Declare Abstract Function Let_CommandType () As XlCmdType
	End Type 'WorksheetDataConnection_

	Type TextConnection_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Connection () As Variant Ptr
		' Declare Abstract Function Let_Connection () As Variant Ptr
		' Declare Abstract Function Get_TextFileHeaderRow () As VARIANT_BOOL
		' Declare Abstract Function Let_TextFileHeaderRow () As VARIANT_BOOL
		' Declare Abstract Function Get_TextFileColumnDataTypes () As Variant Ptr
		' Declare Abstract Function Let_TextFileColumnDataTypes () As Variant Ptr
		' Declare Abstract Function Get_TextFileCommaDelimiter () As VARIANT_BOOL
		' Declare Abstract Function Let_TextFileCommaDelimiter () As VARIANT_BOOL
		' Declare Abstract Function Get_TextFileConsecutiveDelimiter () As VARIANT_BOOL
		' Declare Abstract Function Let_TextFileConsecutiveDelimiter () As VARIANT_BOOL
		' Declare Abstract Function Get_TextFileDecimalSeparator () As BSTR
		' Declare Abstract Function Let_TextFileDecimalSeparator () As BSTR
		' Declare Abstract Function Get_TextFileFixedColumnWidths () As Variant Ptr
		' Declare Abstract Function Let_TextFileFixedColumnWidths () As Variant Ptr
		' Declare Abstract Function Get_TextFileOtherDelimiter () As BSTR
		' Declare Abstract Function Let_TextFileOtherDelimiter () As BSTR
		' Declare Abstract Function Get_TextFileParseType () As XlTextParsingType
		' Declare Abstract Function Let_TextFileParseType () As XlTextParsingType
		' Declare Abstract Function Get_TextFilePlatform () As XlPlatform
		' Declare Abstract Function Let_TextFilePlatform () As XlPlatform
		' Declare Abstract Function Get_TextFilePromptOnRefresh () As VARIANT_BOOL
		' Declare Abstract Function Let_TextFilePromptOnRefresh () As VARIANT_BOOL
		' Declare Abstract Function Get_TextFileSemicolonDelimiter () As VARIANT_BOOL
		' Declare Abstract Function Let_TextFileSemicolonDelimiter () As VARIANT_BOOL
		' Declare Abstract Function Get_TextFileSpaceDelimiter () As VARIANT_BOOL
		' Declare Abstract Function Let_TextFileSpaceDelimiter () As VARIANT_BOOL
		' Declare Abstract Function Get_TextFileStartRow () As Long
		' Declare Abstract Function Let_TextFileStartRow () As Long
		' Declare Abstract Function Get_TextFileTabDelimiter () As VARIANT_BOOL
		' Declare Abstract Function Let_TextFileTabDelimiter () As VARIANT_BOOL
		' Declare Abstract Function Get_TextFileTextQualifier () As XlTextQualifier
		' Declare Abstract Function Let_TextFileTextQualifier () As XlTextQualifier
		' Declare Abstract Function Get_TextFileThousandsSeparator () As BSTR
		' Declare Abstract Function Let_TextFileThousandsSeparator () As BSTR
		' Declare Abstract Function Get_TextFileTrailingMinusNumbers () As VARIANT_BOOL
		' Declare Abstract Function Let_TextFileTrailingMinusNumbers () As VARIANT_BOOL
		' Declare Abstract Function Get_TextFileVisualLayout () As XlTextVisualLayoutType
		' Declare Abstract Function Let_TextFileVisualLayout () As XlTextVisualLayoutType
	End Type 'TextConnection_

	Type DataFeedConnection_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_AlwaysUseConnectionFile () As VARIANT_BOOL
		' Declare Abstract Function Let_AlwaysUseConnectionFile () As VARIANT_BOOL
		' Declare Abstract Function Get_CommandText () As Variant Ptr
		' Declare Abstract Function Let_CommandText () As Variant Ptr
		' Declare Abstract Function Get_CommandType () As XlCmdType
		' Declare Abstract Function Let_CommandType () As XlCmdType
		' Declare Abstract Function Get_Connection () As Variant Ptr
		' Declare Abstract Function Let_Connection () As Variant Ptr
		' Declare Abstract Function Get_EnableRefresh () As VARIANT_BOOL
		' Declare Abstract Function Let_EnableRefresh () As VARIANT_BOOL
		' Declare Abstract Function Get_RefreshDate () As Date_
		' Declare Abstract Function Get_Refreshing () As VARIANT_BOOL
		' Declare Abstract Function Get_RefreshOnFileOpen () As VARIANT_BOOL
		' Declare Abstract Function Let_RefreshOnFileOpen () As VARIANT_BOOL
		' Declare Abstract Function Get_RefreshPeriod () As Long
		' Declare Abstract Function Let_RefreshPeriod () As Long
		' Declare Abstract Function Get_SavePassword () As VARIANT_BOOL
		' Declare Abstract Function Let_SavePassword () As VARIANT_BOOL
		' Declare Abstract Function Get_ServerCredentialsMethod () As XlCredentialsMethod
		' Declare Abstract Function Let_ServerCredentialsMethod () As XlCredentialsMethod
		' Declare Abstract Function Get_SourceConnectionFile () As BSTR
		' Declare Abstract Function Let_SourceConnectionFile () As BSTR
		' Declare Abstract Function Get_SourceDataFile () As BSTR
		' Declare Abstract Function Let_SourceDataFile () As BSTR
		' Declare Abstract Function CancelRefresh () As HRESULT
		' Declare Abstract Function Refresh () As HRESULT
		' Declare Abstract Function SaveAsODC (Byval ODCFileName As BSTR, Byval Description As Variant Ptr, Byval Keywords As Variant Ptr) As HRESULT
	End Type 'DataFeedConnection_

	Type ModelTableColumn_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Get_DataType () As Long
		' Declare Abstract Function Dummy1 (Byval NewName As BSTR) As HRESULT
	End Type 'ModelTableColumn_

	Type ModelTableColumns_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As ModelTableColumn Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As ModelTableColumn Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'ModelTableColumns_

	Type ModelTable_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Get_SourceName () As BSTR
		' Declare Abstract Function Get_ModelTableColumns () As ModelTableColumns Ptr
		' Declare Abstract Function Get_SourceWorkbookConnection () As WorkbookConnection Ptr
		' Declare Abstract Function _Dummy7 () As HRESULT
		' Declare Abstract Function Refresh () As HRESULT
		' Declare Abstract Function Get_RecordCount () As Long
		' Declare Abstract Function Dummy1 (Byval NewName As BSTR) As HRESULT
	End Type 'ModelTable_

	Type ModelTables_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As ModelTable Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As ModelTable Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'ModelTables_

	Type ModelRelationship_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_ForeignKeyTable () As ModelTable Ptr
		' Declare Abstract Function Get_ForeignKeyColumn () As ModelTableColumn Ptr
		' Declare Abstract Function Get_PrimaryKeyTable () As ModelTable Ptr
		' Declare Abstract Function Get_PrimaryKeyColumn () As ModelTableColumn Ptr
		' Declare Abstract Function Get_Active () As VARIANT_BOOL
		' Declare Abstract Function Let_Active () As VARIANT_BOOL
		' Declare Abstract Function Delete_ () As HRESULT
	End Type 'ModelRelationship_

	Type ModelRelationships_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As ModelRelationship Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As ModelRelationship Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Add (Byval ForeignKeyColumn As ModelTableColumn Ptr, Byval PrimaryKeyColumn As ModelTableColumn Ptr) As ModelRelationship Ptr
		' Declare Abstract Function DetectRelationships (Byval PivotTable As PivotTable Ptr) As HRESULT
	End Type 'ModelRelationships_

	Type Model_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_ModelTables () As ModelTables Ptr
		' Declare Abstract Function Get_ModelRelationships () As ModelRelationships Ptr
		' Declare Abstract Function Refresh () As HRESULT
		' Declare Abstract Function AddConnection (Byval ConnectionToDataSource As WorkbookConnection Ptr) As WorkbookConnection Ptr
		' Declare Abstract Function CreateModelWorkbookConnection (Byval ModelTable As Variant Ptr) As WorkbookConnection Ptr
		' Declare Abstract Function Get_DataModelConnection () As WorkbookConnection Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Initialize () As HRESULT
		' Declare Abstract Function Get_ModelMeasures () As ModelMeasures Ptr
		' Declare Abstract Function Get_ModelFormatGeneral () As ModelFormatGeneral Ptr
		' Declare Abstract Function Get_ModelFormatDate (Byval FormatString As Variant Ptr) As ModelFormatDate Ptr
		' Declare Abstract Function Get_ModelFormatDecimalNumber (Byval UseThousandSeparator As Variant Ptr, Byval DecimalPlaces As Variant Ptr) As ModelFormatDecimalNumber Ptr
		' Declare Abstract Function Get_ModelFormatWholeNumber (Byval UseThousandSeparator As Variant Ptr) As ModelFormatWholeNumber Ptr
		' Declare Abstract Function Get_ModelFormatPercentageNumber (Byval UseThousandSeparator As Variant Ptr, Byval DecimalPlaces As Variant Ptr) As ModelFormatPercentageNumber Ptr
		' Declare Abstract Function Get_ModelFormatScientificNumber (Byval DecimalPlaces As Variant Ptr) As ModelFormatScientificNumber Ptr
		' Declare Abstract Function Get_ModelFormatCurrency (Byval Symbol As Variant Ptr, Byval DecimalPlaces As Variant Ptr) As ModelFormatCurrency Ptr
		' Declare Abstract Function Get_ModelFormatBoolean () As ModelFormatBoolean Ptr
	End Type 'Model_

	Type FullSeriesCollection_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As Series Ptr
		' Declare Abstract Function _NewEnum () As IUnknown Ptr
		' Declare Abstract Function _Default (Byval Index As Variant Ptr) As Series Ptr
	End Type 'FullSeriesCollection_

	Type ChartCategory_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Get_IsFiltered () As VARIANT_BOOL
		' Declare Abstract Function Let_IsFiltered () As VARIANT_BOOL
	End Type 'ChartCategory_

	Type CategoryCollection_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As ChartCategory Ptr
		' Declare Abstract Function _Default (Byval Index As Variant Ptr) As ChartCategory Ptr
	End Type 'CategoryCollection_

	Type TimelineState_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_StartDate () As Variant Ptr
		' Declare Abstract Function Get_EndDate () As Variant Ptr
		' Declare Abstract Function Get_FilterType () As XlPivotFilterType
		' Declare Abstract Function Get_FilterValue1 () As Variant Ptr
		' Declare Abstract Function Get_FilterValue2 () As Variant Ptr
		' Declare Abstract Function Get_SingleRangeFilterState () As VARIANT_BOOL
		' Declare Abstract Function SetFilterDateRange (Byval StartDate As Variant Ptr, Byval EndDate As Variant Ptr) As XlFilterStatus
	End Type 'TimelineState_

	Type TimelineViewState_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_ShowHeader () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowHeader () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowSelectionLabel () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowSelectionLabel () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowTimeLevel () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowTimeLevel () As VARIANT_BOOL
		' Declare Abstract Function Get_ShowHorizontalScrollbar () As VARIANT_BOOL
		' Declare Abstract Function Let_ShowHorizontalScrollbar () As VARIANT_BOOL
		' Declare Abstract Function Get_Level () As XlTimelineLevel
		' Declare Abstract Function Let_Level () As XlTimelineLevel
	End Type 'TimelineViewState_

	Type ModelTableNames_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As BSTR
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As BSTR
	End Type 'ModelTableNames_

	Type ModelTableNameChange_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_TableNameOld () As BSTR
		' Declare Abstract Function Get_TableNameNew () As BSTR
	End Type 'ModelTableNameChange_

	Type ModelTableNameChanges_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As ModelTableNameChange Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As ModelTableNameChange Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'ModelTableNameChanges_

	Type ModelChanges_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_TablesAdded () As ModelTableNames Ptr
		' Declare Abstract Function Get_TablesDeleted () As ModelTableNames Ptr
		' Declare Abstract Function Get_TablesModified () As ModelTableNames Ptr
		' Declare Abstract Function Get_TableNamesChanged () As ModelTableNameChanges Ptr
		' Declare Abstract Function Get_RelationshipChange () As VARIANT_BOOL
		' Declare Abstract Function Get_ColumnsAdded () As ModelColumnNames Ptr
		' Declare Abstract Function Get_ColumnsDeleted () As ModelColumnNames Ptr
		' Declare Abstract Function Get_ColumnsChanged () As ModelColumnChanges Ptr
		' Declare Abstract Function Get_MeasuresAdded () As ModelMeasureNames Ptr
		' Declare Abstract Function Get_UnknownChange () As VARIANT_BOOL
		' Declare Abstract Function Get_Source () As XlModelChangeSource
	End Type 'ModelChanges_

	Type ModelColumnName_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_TableName () As BSTR
		' Declare Abstract Function Get_ColumnName () As BSTR
	End Type 'ModelColumnName_

	Type ModelColumnNames_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As ModelColumnName Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As ModelColumnName Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'ModelColumnNames_

	Type ModelColumnChange_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_TableName () As BSTR
		' Declare Abstract Function Get_ColumnName () As BSTR
	End Type 'ModelColumnChange_

	Type ModelColumnChanges_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As ModelColumnChange Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As ModelColumnChange Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'ModelColumnChanges_

	Type ModelMeasureName_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_TableName () As BSTR
		' Declare Abstract Function Get_MeasureName () As BSTR
	End Type 'ModelMeasureName_

	Type ModelMeasureNames_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As ModelMeasureName Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As ModelMeasureName Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
	End Type 'ModelMeasureNames_

	Type WorkbookQuery_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_Description () As BSTR
		' Declare Abstract Function Let_Description () As BSTR
		' Declare Abstract Function Get__Default () As BSTR
		' Declare Abstract Function Let__Default () As BSTR
		' Declare Abstract Function Delete_ () As HRESULT
	End Type 'WorkbookQuery_

	Type Queries_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Add (Byval Name As BSTR, Byval Formula As BSTR, Byval Description As Variant Ptr) As WorkbookQuery Ptr
		' Declare Abstract Function Item (Byval NameOrIndex As Variant Ptr) As WorkbookQuery Ptr
		' Declare Abstract Function Get__Default (Byval NameOrIndex As Variant Ptr) As WorkbookQuery Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Get_FastCombine () As VARIANT_BOOL
		' Declare Abstract Function Let_FastCombine () As VARIANT_BOOL
	End Type 'Queries_

	Type ModelMeasure_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Name () As BSTR
		' Declare Abstract Function Let_Name () As BSTR
		' Declare Abstract Function Get_AssociatedTable () As ModelTable Ptr
		' Declare Abstract Function Set_AssociatedTable () As ModelTable Ptr
		' Declare Abstract Function Get_Formula () As BSTR
		' Declare Abstract Function Let_Formula () As BSTR
		' Declare Abstract Function Get_FormatInformation () As Variant Ptr
		' Declare Abstract Function Let_FormatInformation () As Variant Ptr
		' Declare Abstract Function Get_Description () As BSTR
		' Declare Abstract Function Let_Description () As BSTR
		' Declare Abstract Function Delete_ () As HRESULT
	End Type 'ModelMeasure_

	Type ModelMeasures_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Count () As Long
		' Declare Abstract Function Item (Byval Index As Variant Ptr) As ModelMeasure Ptr
		' Declare Abstract Function Get__Default (Byval Index As Variant Ptr) As ModelMeasure Ptr
		' Declare Abstract Function Get__NewEnum () As IUnknown Ptr
		' Declare Abstract Function Add (Byval MeasureName As BSTR, Byval AssociatedTable As ModelTable Ptr, Byval Formula As BSTR, Byval FormatInformation As Variant Ptr, Byval Description As Variant Ptr) As ModelMeasure Ptr
	End Type 'ModelMeasures_

	Type ModelFormatGeneral_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
	End Type 'ModelFormatGeneral_

	Type ModelFormatDate_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_FormatString () As BSTR
		' Declare Abstract Function Let_FormatString () As BSTR
	End Type 'ModelFormatDate_

	Type ModelFormatDecimalNumber_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_UseThousandSeparator () As VARIANT_BOOL
		' Declare Abstract Function Let_UseThousandSeparator () As VARIANT_BOOL
		' Declare Abstract Function Get_DecimalPlaces () As Long
		' Declare Abstract Function Let_DecimalPlaces () As Long
	End Type 'ModelFormatDecimalNumber_

	Type ModelFormatWholeNumber_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_UseThousandSeparator () As VARIANT_BOOL
		' Declare Abstract Function Let_UseThousandSeparator () As VARIANT_BOOL
	End Type 'ModelFormatWholeNumber_

	Type ModelFormatPercentageNumber_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_UseThousandSeparator () As VARIANT_BOOL
		' Declare Abstract Function Let_UseThousandSeparator () As VARIANT_BOOL
		' Declare Abstract Function Get_DecimalPlaces () As Long
		' Declare Abstract Function Let_DecimalPlaces () As Long
	End Type 'ModelFormatPercentageNumber_

	Type ModelFormatScientificNumber_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_DecimalPlaces () As Long
		' Declare Abstract Function Let_DecimalPlaces () As Long
	End Type 'ModelFormatScientificNumber_

	Type ModelFormatCurrency_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
		' Declare Abstract Function Get_Symbol () As BSTR
		' Declare Abstract Function Let_Symbol () As BSTR
		' Declare Abstract Function Get_DecimalPlaces () As Long
		' Declare Abstract Function Let_DecimalPlaces () As Long
	End Type 'ModelFormatCurrency_

	Type ModelFormatBoolean_ Extends CAIDispatch ' Dispinterface only supports post binding!
		' Declare Abstract Function Get_Application () As Application Ptr
		' Declare Abstract Function Get_Creator () As XlCreator
		' Declare Abstract Function Get_Parent () As IDispatch Ptr
	End Type 'ModelFormatBoolean_

End Namespace